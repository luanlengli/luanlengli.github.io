<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>luanlengli&#39;s Blog</title>
  
  <subtitle>“不知道”的五大理由，不读，不查，不试，理解能力差，满脑子想着怎么利用他人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://luanlengli.github.io/"/>
  <updated>2021-10-08T13:05:02.041Z</updated>
  <id>https://luanlengli.github.io/</id>
  
  <author>
    <name>乱愣黎</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kubeadm部署基于containerd的k8s-1.20.x集群</title>
    <link href="https://luanlengli.github.io/2021/10/03/kubeadm%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Econtainerd%E7%9A%84k8s-1.20.x%E9%9B%86%E7%BE%A4.html"/>
    <id>https://luanlengli.github.io/2021/10/03/kubeadm部署基于containerd的k8s-1.20.x集群.html</id>
    <published>2021-10-03T06:56:37.000Z</published>
    <updated>2021-10-08T13:05:02.041Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><blockquote><p>仅记录我的部署流程，不一定满足各种需求！</p><p>如无说明，均使用root用户操作！</p></blockquote><h1 id="服务器信息"><a href="#服务器信息" class="headerlink" title="服务器信息"></a>服务器信息</h1><table><thead><tr><th>主机名</th><th>IP地址</th><th>角色</th><th>操作系统</th><th>Containerd版本</th><th>k8s版本</th></tr></thead><tbody><tr><td>k8s-master</td><td>172.16.80.100</td><td>master+node</td><td>Ubuntu 20.04.3 LTS</td><td>1.5.2-0ubuntu1~20.04.3</td><td>v1.20.11</td></tr><tr><td>k8s-node1</td><td>172.16.80.101</td><td>node</td><td>Ubuntu 20.04.3 LTS</td><td>1.5.2-0ubuntu1~20.04.3</td><td>v1.20.11</td></tr><tr><td>k8s-node2</td><td>172.16.80.102</td><td>node</td><td>Ubuntu 20.04.3 LTS</td><td>1.5.2-0ubuntu1~20.04.3</td><td>v1.20.11</td></tr></tbody></table><h1 id="服务器初始化"><a href="#服务器初始化" class="headerlink" title="服务器初始化"></a>服务器初始化</h1><h2 id="添加sysctl"><a href="#添加sysctl" class="headerlink" title="添加sysctl"></a>添加sysctl</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/99-k8s.conf &lt;&lt;EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大文件句柄数</span></span><br><span class="line">fs.file-max=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大文件打开数</span></span><br><span class="line">fs.nr_open=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 同一时间异步IO请求数</span></span><br><span class="line">fs.aio-max-nr=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存耗尽才使用swap分区</span></span><br><span class="line">vm.swappiness=10</span><br><span class="line"><span class="meta">#</span><span class="bash"> 当内存耗尽时，内核会触发OOM killer根据oom_score杀掉最耗内存的进程</span></span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许overcommit</span></span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义了进程能拥有的最多内存区域，默认65536</span></span><br><span class="line">vm.max_map_count=262144</span><br><span class="line"><span class="meta">#</span><span class="bash"> 二层的网桥在转发包时也会被iptables的FORWARD规则所过滤</span></span><br><span class="line">net.bridge.bridge-nf-call-arptables=1</span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭严格校验数据包的反向路径，默认值1</span></span><br><span class="line">net.ipv4.conf.default.rp_filter=0</span><br><span class="line">net.ipv4.conf.all.rp_filter=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 conntrack 的上限</span></span><br><span class="line">net.netfilter.nf_conntrack_max=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置连接跟踪表中处于TIME_WAIT状态的超时时间</span></span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_timewait=30</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置连接跟踪表中TCP连接超时时间</span></span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_established=1200</span><br><span class="line"><span class="meta">#</span><span class="bash"> 端口最大的监听队列的长度</span></span><br><span class="line">net.core.somaxconn=21644</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP阻塞控制算法BBR，Linux内核版本4.9开始内置BBR算法</span></span><br><span class="line"><span class="meta">#</span><span class="bash">net.ipv4.tcp_congestion_control=bbr</span></span><br><span class="line"><span class="meta">#</span><span class="bash">net.core.default_qdisc=fq</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打开ipv4数据包转发</span></span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许应用程序能够绑定到不属于本地网卡的地址</span></span><br><span class="line">net.ipv4.ip_nonlocal_bind=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP连接keepalive的持续时间，默认7200</span></span><br><span class="line">net.ipv4.tcp_keepalive_time=600</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP keepalive探测包发送间隔</span></span><br><span class="line">net.ipv4.tcp_keepalive_intvl=30</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP keepalive探测包重试次数</span></span><br><span class="line">net.ipv4.tcp_keepalive_probes=10</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="修改limits参数"><a href="#修改limits参数" class="headerlink" title="修改limits参数"></a>修改limits参数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/security/limits.d/99-k8s.conf &lt;&lt;EOF</span><br><span class="line">* - nproc 1048576</span><br><span class="line">* - nofile 1048576</span><br><span class="line">root - nproc 1048576</span><br><span class="line">root - nofile 1048576</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="修改journal设置"><a href="#修改journal设置" class="headerlink" title="修改journal设置"></a>修改journal设置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's,^#Compress=yes,Compress=yes,' \</span><br><span class="line">    -e 's,^#SystemMaxUse=,SystemMaxUse=2G,' \</span><br><span class="line">    -e 's,^#Seal=yes,Seal=yes,' \</span><br><span class="line">    -e 's,^#RateLimitBurst=1000,RateLimitBurst=5000,' \</span><br><span class="line">    -i.bak /etc/systemd/journald.conf</span><br></pre></td></tr></table></figure><h2 id="配置rsyslog"><a href="#配置rsyslog" class="headerlink" title="配置rsyslog"></a>配置rsyslog</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -r \</span><br><span class="line">    -e 's/^\$ModLoad imjournal/#&amp;/' \</span><br><span class="line">    -e 's/^\$IMJournalStateFile/#&amp;/' \</span><br><span class="line">    -i.bak /etc/rsyslog.conf</span><br></pre></td></tr></table></figure><h2 id="打开logrotate压缩"><a href="#打开logrotate压缩" class="headerlink" title="打开logrotate压缩"></a>打开logrotate压缩</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's,^#compress,compress,' -i.bak /etc/logrotate.conf</span><br></pre></td></tr></table></figure><h2 id="卸载snapd"><a href="#卸载snapd" class="headerlink" title="卸载snapd"></a>卸载snapd</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop snapd</span><br><span class="line">systemctl disable snapd</span><br><span class="line">apt purge snapd</span><br></pre></td></tr></table></figure><h2 id="刷新APT缓存"><a href="#刷新APT缓存" class="headerlink" title="刷新APT缓存"></a>刷新APT缓存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><h2 id="更新系统软件"><a href="#更新系统软件" class="headerlink" title="更新系统软件"></a>更新系统软件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt upgrade</span><br></pre></td></tr></table></figure><h2 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">apt install -qyy \</span><br><span class="line">            apt-transport-https \</span><br><span class="line">            bash-completion \</span><br><span class="line">            ca-certificates \</span><br><span class="line">            conntrack \</span><br><span class="line">            curl \</span><br><span class="line">            dirmngr \</span><br><span class="line">            dstat \</span><br><span class="line">            git \</span><br><span class="line">            gnupg-agent \</span><br><span class="line">            gnupg2 \</span><br><span class="line">            htop \</span><br><span class="line">            iotop \</span><br><span class="line">            ipset \</span><br><span class="line">            ipvsadm \</span><br><span class="line">            jq \</span><br><span class="line">            linux-tools-common \</span><br><span class="line">            lrzsz \</span><br><span class="line">            netcat \</span><br><span class="line">            nethogs \</span><br><span class="line">            socat \</span><br><span class="line">            software-properties-common \</span><br><span class="line">            sudo \</span><br><span class="line">            sysstat \</span><br><span class="line">            tcpdump \</span><br><span class="line">            tree \</span><br><span class="line">            unzip \</span><br><span class="line">            vim</span><br></pre></td></tr></table></figure><h2 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h2><ul><li>Ubuntu 20.04 LTS 使用netplan来管理网络配置，可以使用<code>NetworkManager</code>或者<code>Systemd-networkd</code>的网络守护程序来做为内核的接口。</li><li>如果再通过原来的 <code>ifupdown</code> 工具包继续在 <code>/etc/network/interfaces</code> 文件里配置管理网络接口是无效的。</li><li><p>默认的<code>systemd-resolve</code>会接管<code>/etc/resolv.conf</code>，无法直接修改，并且会监听<code>localhost:53</code>端口，看着非常不爽。修改过程如下</p></li><li><p>网卡配置文件路径<code>/etc/netplan/00-installer-config.yaml</code>，配置文件的样例在<a href="https://netplan.io/examples" target="_blank" rel="noopener">这里</a></p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">    ethernets:</span></span><br><span class="line"><span class="attr">        ens33:</span></span><br><span class="line"><span class="attr">            addresses:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="number">172.16</span><span class="number">.80</span><span class="number">.100</span><span class="string">/24</span></span><br><span class="line"><span class="attr">            dhcp4:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">            gateway4:</span> <span class="number">172.16</span><span class="number">.80</span><span class="number">.1</span></span><br><span class="line"><span class="attr">            nameservers:</span></span><br><span class="line"><span class="attr">                addresses:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br><span class="line"><span class="bullet">                -</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"><span class="attr">                search:</span> <span class="string">[]</span></span><br><span class="line"><span class="attr">    renderer:</span> <span class="string">networkd</span></span><br><span class="line"><span class="attr">    version:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>使用netplan命令让配置生效</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netplan apply</span><br></pre></td></tr></table></figure><blockquote><p>这时候会发现，<code>/etc/resolv.conf</code>里面的nameserver指向127.0.0.53</p><p>并且是软链接到<code>/run/systemd/resolve/stub-resolv.conf</code></p><p>内容如下</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 127.0.0.53</span><br><span class="line">options edns0</span><br></pre></td></tr></table></figure><ul><li>修改systemd-resolv的配置文件<code>/etc/systemd/resolved.conf</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Resolve]</span><br><span class="line"><span class="meta">#</span><span class="bash">DNS=</span></span><br><span class="line"><span class="meta">#</span><span class="bash">FallbackDNS=</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Domains=</span></span><br><span class="line">LLMNR=no</span><br><span class="line">MulticastDNS=no</span><br><span class="line">DNSSEC=no</span><br><span class="line">Cache=yes</span><br><span class="line">DNSStubListener=no</span><br></pre></td></tr></table></figure><ul><li>重启systemd-resolv服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart systemd-resolved.service</span><br></pre></td></tr></table></figure><ul><li>修改<code>/etc/resolv.conf</code>软链接指向</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -svf /run/systemd/resolve/resolv.conf /etc/resolv.conf</span><br></pre></td></tr></table></figure><ul><li>现在再看<code>/etc/resolv.conf</code>的内容就舒服了</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure><h2 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><h2 id="配置时间同步"><a href="#配置时间同步" class="headerlink" title="配置时间同步"></a>配置时间同步</h2><ul><li>Ubuntu 20.04 LTS 使用<code>systemd-timesyncd</code>实现跨网络同步系统时钟的守护服务，与NTP的复杂实现相比，这个服务简单的多，它只专注于从远程服务器查询然后同步到本地时钟。</li><li>守护进程运行只需要尽可能小特权，并且会跟网络服务 networkd 挂钩，仅在网络连接可用时才工作。</li><li>配置文件路径<code>/etc/systemd/timesyncd.conf</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's,^#NTP=.*,NTP=cn.pool.ntp.org,' -i /etc/systemd/timesyncd.conf</span><br></pre></td></tr></table></figure><ul><li>重启systemd-timesyncd服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart systemd-timesyncd.service</span><br></pre></td></tr></table></figure><h2 id="修改LANG默认值"><a href="#修改LANG默认值" class="headerlink" title="修改LANG默认值"></a>修改LANG默认值</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">localectl set-locale LANG=en_US.UTF-8</span><br><span class="line">localectl set-keymap us</span><br><span class="line">localectl set-x11-keymap us</span><br></pre></td></tr></table></figure><h2 id="配置-etc-hosts"><a href="#配置-etc-hosts" class="headerlink" title="配置/etc/hosts"></a>配置/etc/hosts</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1     localhost</span><br><span class="line">::1           localhost</span><br><span class="line">172.16.80.100 k8s-master</span><br><span class="line">172.16.80.101 k8s-node1</span><br><span class="line">172.16.80.102 k8s-node2</span><br></pre></td></tr></table></figure><h2 id="禁用终端欢迎消息广告"><a href="#禁用终端欢迎消息广告" class="headerlink" title="禁用终端欢迎消息广告"></a>禁用终端欢迎消息广告</h2><ul><li>关闭获取Ubuntu新闻</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's,^ENABLED=1,ENABLED=0,g' -i /etc/default/motd-news</span><br></pre></td></tr></table></figure><ul><li>关闭动态motd不需要的内容</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod -x /etc/update-motd.d/80-livepatch</span><br><span class="line">chmod -x /etc/update-motd.d/10-help-text</span><br></pre></td></tr></table></figure><h2 id="禁用swap分区"><a href="#禁用swap分区" class="headerlink" title="禁用swap分区"></a>禁用swap分区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">sed -r -e '/^[^#]*swap/s@^@#@' -i.bak /etc/fstab</span><br></pre></td></tr></table></figure><h2 id="配置内核模块"><a href="#配置内核模块" class="headerlink" title="配置内核模块"></a>配置内核模块</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/modules-load.d/k8s.conf &lt;&lt;EOF</span><br><span class="line">ip_vs</span><br><span class="line"><span class="meta">#</span><span class="bash"> 负载均衡调度算法-最少连接</span></span><br><span class="line">ip_vs_lc</span><br><span class="line"><span class="meta">#</span><span class="bash"> 负载均衡调度算法-加权最少连接</span></span><br><span class="line">ip_vs_wlc</span><br><span class="line"><span class="meta">#</span><span class="bash"> 负载均衡调度算法-轮询</span></span><br><span class="line">ip_vs_rr</span><br><span class="line"><span class="meta">#</span><span class="bash"> 负载均衡调度算法-加权轮询</span></span><br><span class="line">ip_vs_wrr</span><br><span class="line"><span class="meta">#</span><span class="bash"> 源地址散列调度算法</span></span><br><span class="line">ip_vs_sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载nf_conntrack连接状态跟踪模块</span></span><br><span class="line">nf_conntrack</span><br><span class="line"><span class="meta">#</span><span class="bash">nf_conntrack_ipv4</span></span><br><span class="line"><span class="meta">#</span><span class="bash">nf_conntrack_ipv6</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载br_netfilter模块</span></span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="kubernetes集群环境准备"><a href="#kubernetes集群环境准备" class="headerlink" title="kubernetes集群环境准备"></a>kubernetes集群环境准备</h1><h2 id="添加APT源"><a href="#添加APT源" class="headerlink" title="添加APT源"></a>添加APT源</h2><blockquote><p>使用阿里云的kubernetes源</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line">cat &gt; /etc/apt/sources.list.d/kubernetes.list &lt;&lt;EOF</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装k8s软件包"><a href="#安装k8s软件包" class="headerlink" title="安装k8s软件包"></a>安装k8s软件包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y \</span><br><span class="line">        kubelet=1.20.11-00 \</span><br><span class="line">        kubeadm=1.20.11-00 \</span><br><span class="line">        kubectl=1.20.11-00 \</span><br><span class="line">        containerd=1.5.2-0ubuntu1~20.04.3</span><br></pre></td></tr></table></figure><h2 id="添加命令补全"><a href="#添加命令补全" class="headerlink" title="添加命令补全"></a>添加命令补全</h2><ul><li>临时生效</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source &lt;(crictl completion)</span><br><span class="line">source &lt;(kubeadm completion bash)</span><br><span class="line">source &lt;(kubectl completion bash)</span><br></pre></td></tr></table></figure><ul><li>永久生效</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crictl completion &gt; /etc/bash_completion.d/crictl</span><br><span class="line">kubectl completion bash &gt; /etc/bash_completion.d/kubectl</span><br><span class="line">kubeadm completion bash &gt; /etc/bash_completion.d/kubeadm</span><br></pre></td></tr></table></figure><h2 id="Containerd"><a href="#Containerd" class="headerlink" title="Containerd"></a>Containerd</h2><blockquote><p>再次声明！</p><p>containerd的版本是<code>1.5.2-0ubuntu1~20.04.3</code>，1.5.2之前的版本不一定能用！</p></blockquote><h3 id="修改crictl配置"><a href="#修改crictl配置" class="headerlink" title="修改crictl配置"></a>修改crictl配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crictl config runtime-endpoint /run/containerd/containerd.sock</span><br></pre></td></tr></table></figure><h3 id="生成containerd配置"><a href="#生成containerd配置" class="headerlink" title="生成containerd配置"></a>生成containerd配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/containerd</span><br><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><h3 id="修改containerd配置"><a href="#修改containerd配置" class="headerlink" title="修改containerd配置"></a>修改containerd配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><h4 id="pause镜像地址"><a href="#pause镜像地址" class="headerlink" title="pause镜像地址"></a>pause镜像地址</h4><blockquote><p><code>[plugins.&quot;io.containerd.grpc.v1.cri&quot;]</code>配置项</p><p><code>sandbox_image = &quot;k8s.gcr.io/pause:3.5&quot;</code>修改为<code>sandbox_image = &quot;registry.aliyuncs.com/k8sxio/pause:3.5&quot;</code></p></blockquote><h4 id="cgroups"><a href="#cgroups" class="headerlink" title="cgroups"></a>cgroups</h4><blockquote><p><code>[plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc.options]</code>配置项</p><p><code>SystemdCgroup = false</code>修改为<code>SystemdCgroup = true</code></p></blockquote><h4 id="docker-io国内镜像地址"><a href="#docker-io国内镜像地址" class="headerlink" title="docker.io国内镜像地址"></a>docker.io国内镜像地址</h4><blockquote><p><code>[plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.mirrors]</code>底下追加两行</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[plugins."io.containerd.grpc.v1.cri".registry.mirrors]</span></span><br><span class="line"><span class="section">  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]</span></span><br><span class="line">    endpoint = ["https://pqbap4ya.mirror.aliyuncs.com"]</span><br></pre></td></tr></table></figure><h4 id="k8s-gcr-io国内镜像地址"><a href="#k8s-gcr-io国内镜像地址" class="headerlink" title="k8s.gcr.io国内镜像地址"></a>k8s.gcr.io国内镜像地址</h4><blockquote><p><code>[plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.mirrors]</code>底下再追加两行，不过好像不生效</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[plugins."io.containerd.grpc.v1.cri".registry.mirrors]</span></span><br><span class="line"><span class="section">  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]</span></span><br><span class="line">    endpoint = ["https://pqbap4ya.mirror.aliyuncs.com"]</span><br><span class="line"><span class="section">  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."k8s.gcr.io"]</span></span><br><span class="line">    endpoint = ["https://registry.aliyuncs.com/k8sxio"]</span><br></pre></td></tr></table></figure><h3 id="直接sed生成"><a href="#直接sed生成" class="headerlink" title="直接sed生成"></a>直接sed生成</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/containerd</span><br><span class="line">containerd config default | \</span><br><span class="line">sed -e 's,k8s.gcr.io,registry.aliyuncs.com/k8sxio,g' \</span><br><span class="line">    -e 's,SystemdCgroup = .*,SystemdCgroup = true,' \</span><br><span class="line">    -e 's/\[plugins."io.containerd.grpc.v1.cri".registry.mirrors\]/&amp;\n        \[plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]\n          endpoint = \["https:\/\/pqbap4ya.mirror.aliyuncs.com"]\n/' \</span><br><span class="line">    -e 's/\[plugins."io.containerd.grpc.v1.cri".registry.mirrors\]/&amp;\n        \[plugins."io.containerd.grpc.v1.cri".registry.mirrors."k8s.gcr.io"]\n          endpoint = \["https:\/\/registry.aliyuncs.com\/k8sxio"]/' \</span><br><span class="line">    -e '/^\s*$/d' |</span><br><span class="line">tee /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><h3 id="配置文件全文"><a href="#配置文件全文" class="headerlink" title="配置文件全文"></a>配置文件全文</h3><ul><li><code>/etc/containerd/config.toml</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">disabled_plugins</span> = []</span><br><span class="line"><span class="attr">imports</span> = []</span><br><span class="line"><span class="attr">oom_score</span> = <span class="number">0</span></span><br><span class="line"><span class="attr">plugin_dir</span> = <span class="string">""</span></span><br><span class="line"><span class="attr">required_plugins</span> = []</span><br><span class="line"><span class="attr">root</span> = <span class="string">"/var/lib/containerd"</span></span><br><span class="line"><span class="attr">state</span> = <span class="string">"/run/containerd"</span></span><br><span class="line"><span class="attr">version</span> = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="section">[cgroup]</span></span><br><span class="line">  path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">[debug]</span></span><br><span class="line">  address = ""</span><br><span class="line">  format = ""</span><br><span class="line">  gid = 0</span><br><span class="line">  level = ""</span><br><span class="line">  uid = 0</span><br><span class="line"></span><br><span class="line"><span class="section">[grpc]</span></span><br><span class="line">  address = "/run/containerd/containerd.sock"</span><br><span class="line">  gid = 0</span><br><span class="line">  max_recv_message_size = 16777216</span><br><span class="line">  max_send_message_size = 16777216</span><br><span class="line">  tcp_address = ""</span><br><span class="line">  tcp_tls_cert = ""</span><br><span class="line">  tcp_tls_key = ""</span><br><span class="line">  uid = 0</span><br><span class="line"></span><br><span class="line"><span class="section">[metrics]</span></span><br><span class="line">  address = ""</span><br><span class="line">  grpc_histogram = false</span><br><span class="line"></span><br><span class="line"><span class="section">[plugins]</span></span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.gc.v1.scheduler"]</span></span><br><span class="line">    deletion_threshold = 0</span><br><span class="line">    mutation_threshold = 100</span><br><span class="line">    pause_threshold = 0.02</span><br><span class="line">    schedule_delay = "0s"</span><br><span class="line">    startup_delay = "100ms"</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.grpc.v1.cri"]</span></span><br><span class="line">    disable_apparmor = false</span><br><span class="line">    disable_cgroup = false</span><br><span class="line">    disable_hugetlb_controller = true</span><br><span class="line">    disable_proc_mount = false</span><br><span class="line">    disable_tcp_service = true</span><br><span class="line">    enable_selinux = false</span><br><span class="line">    enable_tls_streaming = false</span><br><span class="line">    ignore_image_defined_volumes = false</span><br><span class="line">    max_concurrent_downloads = 3</span><br><span class="line">    max_container_log_line_size = 16384</span><br><span class="line">    netns_mounts_under_state_dir = false</span><br><span class="line">    restrict_oom_score_adj = false</span><br><span class="line">    sandbox_image = "registry.aliyuncs.com/k8sxio/pause:3.5"</span><br><span class="line">    selinux_category_range = 1024</span><br><span class="line">    stats_collect_period = 10</span><br><span class="line">    stream_idle_timeout = "4h0m0s"</span><br><span class="line">    stream_server_address = "127.0.0.1"</span><br><span class="line">    stream_server_port = "0"</span><br><span class="line">    systemd_cgroup = false</span><br><span class="line">    tolerate_missing_hugetlb_controller = true</span><br><span class="line">    unset_seccomp_profile = ""</span><br><span class="line"></span><br><span class="line"><span class="section">    [plugins."io.containerd.grpc.v1.cri".cni]</span></span><br><span class="line">      bin_dir = "/opt/cni/bin"</span><br><span class="line">      conf_dir = "/etc/cni/net.d"</span><br><span class="line">      conf_template = ""</span><br><span class="line">      max_conf_num = 1</span><br><span class="line"></span><br><span class="line"><span class="section">    [plugins."io.containerd.grpc.v1.cri".containerd]</span></span><br><span class="line">      default_runtime_name = "runc"</span><br><span class="line">      disable_snapshot_annotations = true</span><br><span class="line">      discard_unpacked_layers = false</span><br><span class="line">      no_pivot = false</span><br><span class="line">      snapshotter = "overlayfs"</span><br><span class="line"></span><br><span class="line"><span class="section">      [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime]</span></span><br><span class="line">        base_runtime_spec = ""</span><br><span class="line">        container_annotations = []</span><br><span class="line">        pod_annotations = []</span><br><span class="line">        privileged_without_host_devices = false</span><br><span class="line">        runtime_engine = ""</span><br><span class="line">        runtime_root = ""</span><br><span class="line">        runtime_type = ""</span><br><span class="line"></span><br><span class="line"><span class="section">        [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime.options]</span></span><br><span class="line"></span><br><span class="line"><span class="section">      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]</span></span><br><span class="line"></span><br><span class="line"><span class="section">        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]</span></span><br><span class="line">          base_runtime_spec = ""</span><br><span class="line">          container_annotations = []</span><br><span class="line">          pod_annotations = []</span><br><span class="line">          privileged_without_host_devices = false</span><br><span class="line">          runtime_engine = ""</span><br><span class="line">          runtime_root = ""</span><br><span class="line">          runtime_type = "io.containerd.runc.v2"</span><br><span class="line"></span><br><span class="line"><span class="section">          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]</span></span><br><span class="line">            BinaryName = ""</span><br><span class="line">            CriuImagePath = ""</span><br><span class="line">            CriuPath = ""</span><br><span class="line">            CriuWorkPath = ""</span><br><span class="line">            IoGid = 0</span><br><span class="line">            IoUid = 0</span><br><span class="line">            NoNewKeyring = false</span><br><span class="line">            NoPivotRoot = false</span><br><span class="line">            Root = ""</span><br><span class="line">            ShimCgroup = ""</span><br><span class="line">            SystemdCgroup = true</span><br><span class="line"></span><br><span class="line"><span class="section">      [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime]</span></span><br><span class="line">        base_runtime_spec = ""</span><br><span class="line">        container_annotations = []</span><br><span class="line">        pod_annotations = []</span><br><span class="line">        privileged_without_host_devices = false</span><br><span class="line">        runtime_engine = ""</span><br><span class="line">        runtime_root = ""</span><br><span class="line">        runtime_type = ""</span><br><span class="line"></span><br><span class="line"><span class="section">        [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime.options]</span></span><br><span class="line"></span><br><span class="line"><span class="section">    [plugins."io.containerd.grpc.v1.cri".image_decryption]</span></span><br><span class="line">      key_model = "node"</span><br><span class="line"></span><br><span class="line"><span class="section">    [plugins."io.containerd.grpc.v1.cri".registry]</span></span><br><span class="line">      config_path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">      [plugins."io.containerd.grpc.v1.cri".registry.auths]</span></span><br><span class="line"></span><br><span class="line"><span class="section">      [plugins."io.containerd.grpc.v1.cri".registry.configs]</span></span><br><span class="line"></span><br><span class="line"><span class="section">      [plugins."io.containerd.grpc.v1.cri".registry.headers]</span></span><br><span class="line"></span><br><span class="line"><span class="section">      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]</span></span><br><span class="line"><span class="section">        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]</span></span><br><span class="line">          endpoint = ["https://pqbap4ya.mirror.aliyuncs.com"]</span><br><span class="line"><span class="section">        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."k8s.gcr.io"]</span></span><br><span class="line">          endpoint = ["https://registry.aliyuncs.com/k8sxio"]</span><br><span class="line"></span><br><span class="line"><span class="section">    [plugins."io.containerd.grpc.v1.cri".x509_key_pair_streaming]</span></span><br><span class="line">      tls_cert_file = ""</span><br><span class="line">      tls_key_file = ""</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.internal.v1.opt"]</span></span><br><span class="line">    path = "/opt/containerd"</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.internal.v1.restart"]</span></span><br><span class="line">    interval = "10s"</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.metadata.v1.bolt"]</span></span><br><span class="line">    content_sharing_policy = "shared"</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.monitor.v1.cgroups"]</span></span><br><span class="line">    no_prometheus = false</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.runtime.v1.linux"]</span></span><br><span class="line">    no_shim = false</span><br><span class="line">    runtime = "runc"</span><br><span class="line">    runtime_root = ""</span><br><span class="line">    shim = "containerd-shim"</span><br><span class="line">    shim_debug = false</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.runtime.v2.task"]</span></span><br><span class="line">    platforms = ["linux/amd64"]</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.service.v1.diff-service"]</span></span><br><span class="line">    default = ["walking"]</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.snapshotter.v1.aufs"]</span></span><br><span class="line">    root_path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.snapshotter.v1.btrfs"]</span></span><br><span class="line">    root_path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.snapshotter.v1.devmapper"]</span></span><br><span class="line">    async_remove = false</span><br><span class="line">    base_image_size = ""</span><br><span class="line">    pool_name = ""</span><br><span class="line">    root_path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.snapshotter.v1.native"]</span></span><br><span class="line">    root_path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.snapshotter.v1.overlayfs"]</span></span><br><span class="line">    root_path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">  [plugins."io.containerd.snapshotter.v1.zfs"]</span></span><br><span class="line">    root_path = ""</span><br><span class="line"></span><br><span class="line"><span class="section">[proxy_plugins]</span></span><br><span class="line"></span><br><span class="line"><span class="section">[stream_processors]</span></span><br><span class="line"></span><br><span class="line"><span class="section">  [stream_processors."io.containerd.ocicrypt.decoder.v1.tar"]</span></span><br><span class="line">    accepts = ["application/vnd.oci.image.layer.v1.tar+encrypted"]</span><br><span class="line">    args = ["--decryption-keys-path", "/etc/containerd/ocicrypt/keys"]</span><br><span class="line">    env = ["OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf"]</span><br><span class="line">    path = "ctd-decoder"</span><br><span class="line">    returns = "application/vnd.oci.image.layer.v1.tar"</span><br><span class="line"></span><br><span class="line"><span class="section">  [stream_processors."io.containerd.ocicrypt.decoder.v1.tar.gzip"]</span></span><br><span class="line">    accepts = ["application/vnd.oci.image.layer.v1.tar+gzip+encrypted"]</span><br><span class="line">    args = ["--decryption-keys-path", "/etc/containerd/ocicrypt/keys"]</span><br><span class="line">    env = ["OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf"]</span><br><span class="line">    path = "ctd-decoder"</span><br><span class="line">    returns = "application/vnd.oci.image.layer.v1.tar+gzip"</span><br><span class="line"></span><br><span class="line"><span class="section">[timeouts]</span></span><br><span class="line">  "io.containerd.timeout.shim.cleanup" = "5s"</span><br><span class="line">  "io.containerd.timeout.shim.load" = "5s"</span><br><span class="line">  "io.containerd.timeout.shim.shutdown" = "3s"</span><br><span class="line">  "io.containerd.timeout.task.state" = "2s"</span><br><span class="line"></span><br><span class="line"><span class="section">[ttrpc]</span></span><br><span class="line">  address = ""</span><br><span class="line">  gid = 0</span><br><span class="line">  uid = 0</span><br></pre></td></tr></table></figure><h3 id="重启Containerd"><a href="#重启Containerd" class="headerlink" title="重启Containerd"></a>重启Containerd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable containerd.service</span><br><span class="line">systemctl restart containerd.service</span><br></pre></td></tr></table></figure><h3 id="验证配置生效"><a href="#验证配置生效" class="headerlink" title="验证配置生效"></a>验证配置生效</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crictl info | jq '.config.containerd.runtimes.runc.options.SystemdCgroup'</span><br><span class="line">crictl info | jq '.config.registry.mirrors."docker.io"'</span><br><span class="line">crictl info | jq '.config.sandboxImage'</span><br></pre></td></tr></table></figure><h1 id="kubeadm初始化"><a href="#kubeadm初始化" class="headerlink" title="kubeadm初始化"></a>kubeadm初始化</h1><h2 id="生成kubeadm配置文件"><a href="#生成kubeadm配置文件" class="headerlink" title="生成kubeadm配置文件"></a>生成kubeadm配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config print init-defaults &gt; kubeadm-init.yaml</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>修改之后如下文所示</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="comment"># 配置criSocket为containerd</span></span><br><span class="line"><span class="attr">  criSocket:</span> <span class="string">/run/containerd/containerd.sock</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line"><span class="attr">  timeoutForControlPlane:</span> <span class="number">4</span><span class="string">m0s</span></span><br><span class="line"><span class="attr">  certSANs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">localhost</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">kubernetes.default</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">kubernetes.default.svc</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">kubernetes.default.svc.cluster.local</span></span><br><span class="line">  <span class="comment"># 这里的主机名和IP地址自己定义</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">k8s-master</span></span><br><span class="line"><span class="bullet">  -</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="bullet">  -</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="bullet">  -</span> <span class="number">172.16</span><span class="number">.80</span><span class="number">.100</span></span><br><span class="line"><span class="attr">  extraArgs:</span></span><br><span class="line"><span class="attr">    authorization-mode:</span> <span class="string">"Node,RBAC"</span></span><br><span class="line"><span class="attr">    runtime-config:</span> <span class="string">"api/all=true"</span></span><br><span class="line"><span class="attr">  extraVolumes:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">"timezone-volume"</span></span><br><span class="line"><span class="attr">    hostPath:</span> <span class="string">"/usr/share/zoneinfo/Asia/Shanghai"</span></span><br><span class="line"><span class="attr">    mountPath:</span> <span class="string">"/etc/localtime"</span></span><br><span class="line"><span class="attr">    readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    pathType:</span> <span class="string">File</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controllerManager:</span></span><br><span class="line"><span class="attr">  extraArgs:</span></span><br><span class="line"><span class="attr">    allocate-node-cidrs:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">    bind-address:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="attr">    cluster-signing-duration:</span> <span class="string">"87600h"</span></span><br><span class="line"><span class="attr">  extraVolumes:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">"timezone-volume"</span></span><br><span class="line"><span class="attr">    hostPath:</span> <span class="string">"/usr/share/zoneinfo/Asia/Shanghai"</span></span><br><span class="line"><span class="attr">    mountPath:</span> <span class="string">"/etc/localtime"</span></span><br><span class="line"><span class="attr">    readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    pathType:</span> <span class="string">File</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">CoreDNS</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line"><span class="attr">  local:</span></span><br><span class="line"><span class="attr">    dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">    extraArgs:</span></span><br><span class="line"><span class="attr">      advertise-client-urls:</span> <span class="string">"https://172.16.80.100:2379"</span></span><br><span class="line"><span class="attr">      listen-client-urls:</span> <span class="string">"https://127.0.0.1:2379,https://172.16.80.100:2379"</span></span><br><span class="line"><span class="attr">      listen-peer-urls:</span> <span class="string">"https://172.16.80.100:2380"</span></span><br><span class="line">    <span class="comment"># 配置etcd server证书的SAN</span></span><br><span class="line"><span class="attr">    serverCertSANs:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">k8s-master</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">localhost</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">::1</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">172.16</span><span class="number">.80</span><span class="number">.100</span></span><br><span class="line">    <span class="comment"># 配置etcd peer证书的SAN</span></span><br><span class="line"><span class="attr">    peerCertSANs:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">k8s-master</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">localhost</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">::1</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">172.16</span><span class="number">.80</span><span class="number">.100</span></span><br><span class="line"><span class="comment"># 这里将k8s.gcr.io替换成馆长的registry.aliyuncs.com/k8sxio</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">registry.aliyuncs.com/k8sxio</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="comment"># 指定一下Kubernetes的镜像版本</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">v1.20.11</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="comment"># 配置集群域名、service网络地址和pod网络地址</span></span><br><span class="line"><span class="attr">  dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="comment"># kube-flannel默认是10.244.0.0/16</span></span><br><span class="line">  <span class="comment"># Calico默认是192.168.0.0/16</span></span><br><span class="line">  <span class="comment">#podSubnet: 10.244.0.0/16</span></span><br><span class="line"><span class="attr">  serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span></span><br><span class="line"><span class="attr">scheduler:</span></span><br><span class="line"><span class="attr">  extraArgs:</span></span><br><span class="line"><span class="attr">    bind-address:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="attr">  extraVolumes:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">"timezone-volume"</span></span><br><span class="line"><span class="attr">    hostPath:</span> <span class="string">"/usr/share/zoneinfo/Asia/Shanghai"</span></span><br><span class="line"><span class="attr">    mountPath:</span> <span class="string">"/etc/localtime"</span></span><br><span class="line"><span class="attr">    readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    pathType:</span> <span class="string">File</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">bindAddress:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">healthzBindAddress:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="attr">metricsBindAddress:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="comment"># 指定运行为IPVS模式</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">ipvs</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="comment"># 这里要跟containerd一样，使用systemd作为cgroups驱动</span></span><br><span class="line"><span class="attr">cgroupDriver:</span> <span class="string">systemd</span></span><br><span class="line"><span class="attr">clusterDNS:</span></span><br><span class="line"><span class="bullet">-</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.10</span></span><br><span class="line"><span class="attr">clusterDomain:</span> <span class="string">cluster.local</span></span><br><span class="line"><span class="attr">failSwapOn:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">healthzBindAddress:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">healthzPort:</span> <span class="number">10248</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">maxOpenFiles:</span> <span class="number">1048576</span></span><br><span class="line"><span class="comment"># kubelet节点Pod的最大数量，默认110</span></span><br><span class="line"><span class="attr">maxPods:</span> <span class="number">110</span></span><br><span class="line"><span class="attr">resolvConf:</span> <span class="string">/etc/resolv.conf</span></span><br><span class="line"><span class="attr">rotateCertificates:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">staticPodPath:</span> <span class="string">/etc/kubernetes/manifests</span></span><br></pre></td></tr></table></figure><h2 id="初始化集群"><a href="#初始化集群" class="headerlink" title="初始化集群"></a>初始化集群</h2><ul><li>检查一下是否报错</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config=kubeadm-init.yaml --dry-run</span><br></pre></td></tr></table></figure><ul><li>先拉取镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for img in $(kubeadm config --config=kubeadm-init.yaml images list | xargs);do</span><br><span class="line">  crictl pull $img</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>初始化k8s集群</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config=kubeadm-init.yaml</span><br></pre></td></tr></table></figure><blockquote><p>集群初始化完成之后，会给出kubeadm join命令，用于node节点加入集群</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, if you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.80.100:6443 --token wyoi59.me7ajasf4ilcmpgh \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:6b00aebd68220fec6ccce97c5a206cd331752cbeed7ca5701cfe8f883955fdb8</span><br></pre></td></tr></table></figure><h2 id="配置kubeconfig"><a href="#配置kubeconfig" class="headerlink" title="配置kubeconfig"></a>配置kubeconfig</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><h2 id="设置master可调度"><a href="#设置master可调度" class="headerlink" title="设置master可调度"></a>设置master可调度</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint node --all node-role.kubernetes.io/master-</span><br></pre></td></tr></table></figure><h2 id="添加CNI插件"><a href="#添加CNI插件" class="headerlink" title="添加CNI插件"></a>添加CNI插件</h2><blockquote><p>只需要装一个即可，同时装多个会出问题的！</p></blockquote><h3 id="kube-flannel"><a href="#kube-flannel" class="headerlink" title="kube-flannel"></a>kube-flannel</h3><blockquote><p>要用<code>kube-flannel</code>的话，<code>kubeadm-init.yaml</code>需要声明<code>networking.podSubnet=10.244.0.0/16</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="Calico"><a href="#Calico" class="headerlink" title="Calico"></a>Calico</h3><blockquote><p>calico默认的<code>podCIDR</code>是<code>192.168.0.0/16</code>，<code>kubeadm-init.yaml</code>需要声明<code>networking.podSubnet=192.168.0.0/16</code></p></blockquote><ul><li>安装operator</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml</span><br></pre></td></tr></table></figure><ul><li>部署CRD</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://docs.projectcalico.org/manifests/custom-resources.yaml</span><br></pre></td></tr></table></figure><h3 id="Cilium"><a href="#Cilium" class="headerlink" title="Cilium"></a>Cilium</h3><ul><li>下载</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz&#123;,.sha256sum&#125;</span><br><span class="line">sha256sum --check cilium-linux-amd64.tar.gz.sha256sum</span><br><span class="line">tar xzfC cilium-linux-amd64.tar.gz /usr/local/bin</span><br><span class="line">rm cilium-linux-amd64.tar.gz&#123;,.sha256sum&#125;</span><br></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cilium install</span><br></pre></td></tr></table></figure><ul><li>验证</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cilium status --wait</span><br><span class="line">cilium connectivity test</span><br></pre></td></tr></table></figure><h2 id="添加node节点"><a href="#添加node节点" class="headerlink" title="添加node节点"></a>添加node节点</h2><ul><li>完成服务器初始化</li><li>安装Kubernetes软件包和containerd</li><li>配置containerd</li><li>添加到集群，这里执行初始化集群成功之后输出的<code>kubeadm join</code>命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 172.16.80.100:6443 --token wyoi59.me7ajasf4ilcmpgh \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:6b00aebd68220fec6ccce97c5a206cd331752cbeed7ca5701cfe8f883955fdb8</span><br></pre></td></tr></table></figure><h2 id="获取节点状态"><a href="#获取节点状态" class="headerlink" title="获取节点状态"></a>获取节点状态</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node -o wide</span><br></pre></td></tr></table></figure><blockquote><p>节点状态如下</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NAME         STATUS   ROLES                  AGE    VERSION    INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION     CONTAINER-RUNTIME</span><br><span class="line">k8s-master   Ready    control-plane,master   105m   v1.20.11   172.16.80.100   &lt;none&gt;        Ubuntu 20.04.3 LTS   5.4.0-88-generic   containerd://1.5.2</span><br><span class="line">k8s-node1    Ready    control-plane,master   65m   v1.20.11   172.16.80.101   &lt;none&gt;        Ubuntu 20.04.3 LTS   5.4.0-88-generic   containerd://1.5.2</span><br><span class="line">k8s-node1    Ready    control-plane,master   65m   v1.20.11   172.16.80.102   &lt;none&gt;        Ubuntu 20.04.3 LTS   5.4.0-88-generic   containerd://1.5.2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;blockquote&gt;&lt;p&gt;仅记录我的部署流程，不一定满足各种需求！&lt;/p&gt;&lt;p&gt;如无说明，均使用root用户操作！&lt;/p&gt;&lt;/blockquo
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Kubernetes/"/>
    
      <category term="Containerd" scheme="https://luanlengli.github.io/categories/Kubernetes/Containerd/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
      <category term="Containerd" scheme="https://luanlengli.github.io/tags/Containerd/"/>
    
  </entry>
  
  <entry>
    <title>Jumpserver堡垒机v2.4.4升级到v2.10.4</title>
    <link href="https://luanlengli.github.io/2021/06/13/Jumpserver%E5%A0%A1%E5%9E%92%E6%9C%BAv2-4-4%E5%8D%87%E7%BA%A7%E5%88%B0v2-10-4.html"/>
    <id>https://luanlengli.github.io/2021/06/13/Jumpserver堡垒机v2-4-4升级到v2-10-4.html</id>
    <published>2021-06-13T07:38:14.000Z</published>
    <updated>2021-06-13T10:52:57.963Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>jumpserver服务器环境<ul><li>CentOS-7.9</li><li>Docker-CE 20.10.6</li><li>MySQL-5.7.31<ul><li>使用MySQL社区版</li></ul></li><li>Redis-3.12.0<ul><li>CentOS自带Redis-3.12.0</li></ul></li></ul></li><li>jumpserver部署情况，参考<a href="https://luanlengli.github.io/2020/07/06/Jumpserver%20v2.0.1%20%E5%AE%89%E8%A3%85%E5%AE%9E%E8%B7%B5.html">这里</a><ul><li>版本从原先的v2.0.1升级到了v2.4.4，改变镜像TAG就升级完成了</li><li>从v2.6.0开始统一采用新的部署项目来管理社区版和企业版，以前的项目不维护了</li><li>鉴于新的部署方式，容器镜像也不一样了，需要重新梳理一下jumpserver的部署</li></ul></li><li><p>新版本对基础设施版本的需求</p><ul><li>数据库：MySQL &gt;= 5.7 或者 MariaDB >= 10.2<ul><li>之前部署的时候已经是MySQL-5.7.31，不需要升级数据库版本</li></ul></li><li>缓存：Redis >= 6.0<ul><li>CentOS7自带的是3.12.0，需要<font color="red">更新Redis版本</font></li></ul></li><li>docker版本<ul><li>jmsctl.sh会检查docker-ce和docker-compose版本</li><li>自动更新docker-ce和docker-compose版本为18.06.3-ce和1.27.4</li><li>CentOS自带的docker-compose为1.18.0，执行命令会提示<code>ERROR: Version in &quot;././compose/docker-compose-app.yml&quot; is unsupported.</code></li></ul></li></ul></li><li><p>文档参考</p><ul><li><a href="https://docs.jumpserver.org/zh/master/install/upgrade/upgrade/" target="_blank" rel="noopener">升级文档</a></li><li><a href="https://github.com/jumpserver/installer" target="_blank" rel="noopener">新的部署项目仓库</a></li></ul></li></ul><h1 id="升级过程要求"><a href="#升级过程要求" class="headerlink" title="升级过程要求"></a>升级过程要求</h1><ul><li>保证旧版本的jumpserver保持在线不影响业务，升级平滑</li><li>保证回退老版本时不影响jumpserver使用</li><li>这里是另起一套环境练过手，才在正式环境上面做升级！</li></ul><h1 id="基础设施升级"><a href="#基础设施升级" class="headerlink" title="基础设施升级"></a>基础设施升级</h1><h2 id="Docker-compose升级"><a href="#Docker-compose升级" class="headerlink" title="Docker-compose升级"></a>Docker-compose升级</h2><h3 id="当前版本"><a href="#当前版本" class="headerlink" title="当前版本"></a>当前版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -v</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker-compose version 1.18.0, build 8dd22a9</span></span><br></pre></td></tr></table></figure><h3 id="下载1-29-2版本"><a href="#下载1-29-2版本" class="headerlink" title="下载1.29.2版本"></a>下载1.29.2版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -O /usr/bin/docker-compose-1.29.2</span><br></pre></td></tr></table></figure><h3 id="替换系统自带docker-compose"><a href="#替换系统自带docker-compose" class="headerlink" title="替换系统自带docker-compose"></a>替换系统自带docker-compose</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/bin/docker-compose /usr/bin/docker-compose-1.18.0</span><br><span class="line">ln -svf /usr/bin/docker-compose-1.29.2 /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="确认docker-compose版本"><a href="#确认docker-compose版本" class="headerlink" title="确认docker-compose版本"></a>确认docker-compose版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -v</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker-compose version 1.29.2, build 5becea4c</span></span><br></pre></td></tr></table></figure><h2 id="MySQL数据库迁移"><a href="#MySQL数据库迁移" class="headerlink" title="MySQL数据库迁移"></a>MySQL数据库迁移</h2><h3 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p 密码 -h 主机 -P 端口 --no-create-db --set-gtid-purged=ON --single-transaction --triggers --routines --events jumpserver &gt; jumpserver-full-dump.sql</span><br></pre></td></tr></table></figure><h3 id="修改数据库字符集"><a href="#修改数据库字符集" class="headerlink" title="修改数据库字符集"></a>修改数据库字符集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if grep -q 'COLLATE=utf8_bin' jmsdump.sql; then</span><br><span class="line">    cp /opt/jumpserver.sql jmsdump.sql</span><br><span class="line">    sed -e 's@COLLATE=utf8_bin@@g' -e 's@COLLATE utf8_bin@@g' -i.bak jmsdump.sql</span><br><span class="line">else</span><br><span class="line">    echo "备份数据库字符集正确";</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="确认数据库配置"><a href="#确认数据库配置" class="headerlink" title="确认数据库配置"></a>确认数据库配置</h3><p>参考部署项目的数据库配置文件<a href="https://github.com/jumpserver/installer/blob/master/config_init/mysql/my.cnf" target="_blank" rel="noopener">my.cnf</a>，针对性的修改一下数据库</p><font color="red">这里只列举此文需要修改的配置项，不要照抄！！！！</font><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line">...</span><br><span class="line"><span class="attr">character-set-server</span> = utf8</span><br><span class="line"><span class="attr">collation-server</span> = utf8_bin</span><br><span class="line"><span class="comment">#collation-server = utf8_general_ci</span></span><br><span class="line"><span class="attr">sql_mode</span>=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">...</span><br><span class="line"><span class="section">[mysqldump]</span></span><br><span class="line">quick</span><br><span class="line">quote-names</span><br><span class="line"><span class="attr">max_allowed_packet</span>      = <span class="number">16</span>M</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br></pre></td></tr></table></figure><font color="red">确保配置生效，重启数据库</font><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld.service</span><br></pre></td></tr></table></figure><font color="red">确认数据库配置</font><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; SHOW VARIABLES LIKE &apos;%character%&apos;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">&gt; SELECT @@sql_mode;</span><br><span class="line">+--------------------------------------------+</span><br><span class="line">| @@sql_mode                                 |</span><br><span class="line">+--------------------------------------------+</span><br><span class="line">| STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+--------------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>这里主要用于隔离新旧jumpserver的数据库，方便回退</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE newDB;</span><br></pre></td></tr></table></figure><h3 id="授权数据库"><a href="#授权数据库" class="headerlink" title="授权数据库"></a>授权数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON newDB.* to newUser@&apos;%&apos; identified by &apos;newPass&apos;;</span><br></pre></td></tr></table></figure><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u new_jms_user -p new_jms_db &lt; jmsdump.sql</span><br></pre></td></tr></table></figure><h2 id="Redis升级"><a href="#Redis升级" class="headerlink" title="Redis升级"></a>Redis升级</h2><h3 id="下载新版本Redis"><a href="#下载新版本Redis" class="headerlink" title="下载新版本Redis"></a>下载新版本Redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.redis.io/releases/redis-6.2.3.tar.gz -O - | tar xz</span><br><span class="line">cd redis-6.2.3</span><br></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make distclean &amp;&amp; make MALLOC=jemalloc &amp;&amp; make test</span><br><span class="line">cp src/&#123;redis-benchmark,redis-check-aof,redis-check-rdb,redis-cli,redis-sentinel,redis-server&#125; /usr/local/bin/</span><br><span class="line">chown -R redis:redis /usr/local/bin/redis-*</span><br></pre></td></tr></table></figure><h3 id="配置Redis"><a href="#配置Redis" class="headerlink" title="配置Redis"></a>配置Redis</h3><ul><li><code>/etc/redis/redis_6380.conf</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">bind 0.0.0.0</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6380</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize no</span><br><span class="line">supervised systemd</span><br><span class="line">pidfile /var/run/redis_6380.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile ""</span><br><span class="line">databases 16</span><br><span class="line">always-show-logo no</span><br><span class="line">set-proc-title yes</span><br><span class="line">proc-title-template "&#123;title&#125; &#123;listen-addr&#125; &#123;server-mode&#125;"</span><br><span class="line">save 3600 1</span><br><span class="line">save 300 100</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump_6380.rdb</span><br><span class="line">rdb-del-sync-files no</span><br><span class="line">dir /var/lib/redis</span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-diskless-load disabled</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">acllog-max-len 128</span><br><span class="line">requirepass newPass</span><br><span class="line">maxmemory 1G</span><br><span class="line">maxmemory-policy noeviction</span><br><span class="line">maxmemory-samples 5</span><br><span class="line">maxmemory-eviction-tenacity 10</span><br><span class="line">replica-ignore-maxmemory yes</span><br><span class="line">active-expire-effort 1</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">lazyfree-lazy-user-del no</span><br><span class="line">lazyfree-lazy-user-flush no</span><br><span class="line">oom-score-adj no</span><br><span class="line">oom-score-adj-values 0 200 800</span><br><span class="line">disable-thp yes</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename "appendonly_6380.aof"</span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events ""</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line">jemalloc-bg-thread yes</span><br></pre></td></tr></table></figure><h3 id="systemd配置"><a href="#systemd配置" class="headerlink" title="systemd配置"></a>systemd配置</h3><p><code>/usr/lib/systemd/system/redis_multiple_servers@.service</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis data structure server - instance %i</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/redis-server /etc/redis/redis_%i.conf --supervised systemd</span><br><span class="line">Pidfile=/var/run/redis_6380.pid</span><br><span class="line">Type=notify</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line">LimitNOFILE=10240</span><br></pre></td></tr></table></figure><h3 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable --now redis_multiple_servers@6380.service</span><br></pre></td></tr></table></figure><h3 id="停用CentOS自带Redis"><a href="#停用CentOS自带Redis" class="headerlink" title="停用CentOS自带Redis"></a>停用CentOS自带Redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable --now redis.service</span><br><span class="line">cp /etc/redis.conf /etc/redis/redis_6379.conf</span><br></pre></td></tr></table></figure><h3 id="切换到新的Redis"><a href="#切换到新的Redis" class="headerlink" title="切换到新的Redis"></a>切换到新的Redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now redis_multiple_servers@6379.service</span><br></pre></td></tr></table></figure><h1 id="jumpserver升级"><a href="#jumpserver升级" class="headerlink" title="jumpserver升级"></a>jumpserver升级</h1><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget https://github.com/jumpserver/installer/releases/download/v2.10.4/jumpserver-installer-v2.10.4.tar.gz -O - | tar xz</span><br><span class="line">cd jumpserver-installer-v2.10.4</span><br></pre></td></tr></table></figure><h2 id="配置jumpserver"><a href="#配置jumpserver" class="headerlink" title="配置jumpserver"></a>配置jumpserver</h2><h3 id="创建配置目录"><a href="#创建配置目录" class="headerlink" title="创建配置目录"></a>创建配置目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/jumpserver/config</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><blockquote><p><code>vim /opt/jumpserver/config/config.txt</code></p><p><a href="https://docs.jumpserver.org/zh/master/admin-guide/env/" target="_blank" rel="noopener">各组件参数列表</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 安装配置</span></span></span><br><span class="line">DOCKER_IMAGE_PREFIX=swr.cn-south-1.myhuaweicloud.com</span><br><span class="line">VOLUME_DIR=/opt/jumpserver</span><br><span class="line">DOCKER_DIR=/var/lib/docker</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 启动后不能再修改，否则密码等等信息无法解密</span></span></span><br><span class="line">SECRET_KEY=# 从旧版本的配置文件获取后填入 (*)</span><br><span class="line">BOOTSTRAP_TOKEN=# 从旧版本的配置文件获取后填入 (*)</span><br><span class="line">LOG_LEVEL=INFO</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里跟旧版本的jumpserver兼容，所以用不同的端口</span></span><br><span class="line">LB_HTTP_PORT=8080</span><br><span class="line">LB_HTTPS_PORT=8443</span><br><span class="line">LB_SSH_PORT=2223</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 使用外置 MySQL 配置</span></span></span><br><span class="line">USE_EXTERNAL_MYSQL=1</span><br><span class="line">DB_HOST=MYSQL地址</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_USER=newUser</span><br><span class="line">DB_PASSWORD=newPass</span><br><span class="line">DB_NAME=newDB</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 使用外置 Redis 配置</span></span></span><br><span class="line">USE_EXTERNAL_REDIS=1</span><br><span class="line">REDIS_HOST=Redis地址</span><br><span class="line">REDIS_PORT=6380</span><br><span class="line">REDIS_PASSWORD=newPass</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Compose 项目设置</span></span></span><br><span class="line">COMPOSE_PROJECT_NAME=jms</span><br><span class="line">COMPOSE_HTTP_TIMEOUT=3600</span><br><span class="line">DOCKER_CLIENT_TIMEOUT=3600</span><br><span class="line">DOCKER_SUBNET='172.19.0.0/24'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># IPV6</span></span></span><br><span class="line">DOCKER_SUBNET_IPV6=2001:db8:10::/64</span><br><span class="line">USE_IPV6=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Nginx 配置，这个 Nginx 是用来分发路径到不同的服务</span></span></span><br><span class="line">HTTP_PORT=80</span><br><span class="line">HTTPS_PORT=443</span><br><span class="line">SSH_PORT=2222</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># LB 配置, 这个 Nginx 是 HA 时可以启动负载均衡到不同的主机</span></span></span><br><span class="line">USE_LB=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Task 配置</span></span></span><br><span class="line">USE_TASK=1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># XPack</span></span></span><br><span class="line">USE_XPACK=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Mysql 容器配置</span></span><br><span class="line">MYSQL_ROOT_PASSWORD=</span><br><span class="line">MYSQL_DATABASE=jumpserver</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Core 配置</span></span><br><span class="line">SESSION_COOKIE_AGE=86400</span><br><span class="line">SESSION_EXPIRE_AT_BROWSER_CLOSE=true</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Keycloak 配置方式</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## AUTH_OPENID=true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## BASE_SITE_URL=https://jumpserver.company.com/</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## AUTH_OPENID_SERVER_URL=https://keycloak.company.com/auth</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## AUTH_OPENID_REALM_NAME=cmp</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## AUTH_OPENID_CLIENT_ID=jumpserver</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## AUTH_OPENID_CLIENT_SECRET=</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## AUTH_OPENID_SHARE_SESSION=true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## AUTH_OPENID_IGNORE_SSL_VERIFICATION=true</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Koko 配置</span></span><br><span class="line">CORE_HOST=http://core:8080</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> lion 配置</span></span><br><span class="line">CORE_HOST=http://core:8080</span><br></pre></td></tr></table></figure><h2 id="部署jumpserver"><a href="#部署jumpserver" class="headerlink" title="部署jumpserver"></a>部署jumpserver</h2><h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><blockquote><p>这里会识别到<code>/opt/jumpserver/config/config.txt</code>里面配置好的变量，可以直接用</p></blockquote><p><code>./jmsctl.sh install</code></p><h3 id="向导安装"><a href="#向导安装" class="headerlink" title="向导安装"></a>向导安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">       ██╗██╗   ██╗███╗   ███╗██████╗ ███████╗███████╗██████╗ ██╗   ██╗███████╗██████╗</span><br><span class="line">       ██║██║   ██║████╗ ████║██╔══██╗██╔════╝██╔════╝██╔══██╗██║   ██║██╔════╝██╔══██╗</span><br><span class="line">       ██║██║   ██║██╔████╔██║██████╔╝███████╗█████╗  ██████╔╝██║   ██║█████╗  ██████╔╝</span><br><span class="line">  ██   ██║██║   ██║██║╚██╔╝██║██╔═══╝ ╚════██║██╔══╝  ██╔══██╗╚██╗ ██╔╝██╔══╝  ██╔══██╗</span><br><span class="line">  ╚█████╔╝╚██████╔╝██║ ╚═╝ ██║██║     ███████║███████╗██║  ██║ ╚████╔╝ ███████╗██║  ██║</span><br><span class="line">   ╚════╝  ╚═════╝ ╚═╝    ╚═╝╚═╝     ╚══════╝╚══════╝╚═╝  ╚═╝  ╚═══╝  ╚══════╝╚═╝  ╚═╝</span><br><span class="line"></span><br><span class="line">                                                             Version:  v2.10.4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 安装配置 Docker</span></span><br><span class="line">1. 安装 Docker</span><br><span class="line">开始下载 Docker 程序 ...</span><br><span class="line">完成</span><br><span class="line">开始下载 Docker Compose 程序 ...</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">2. 配置 Docker</span><br><span class="line">是否需要自定义 Docker 数据目录, 默认将使用 /var/lib/docker 目录? (y/n)  (默认为 n): n</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">3. 启动 Docker</span><br><span class="line">Docker 版本发生改变 或 Docker 配置文件发生变化，是否要重启? (y/n)  (默认为 y): y</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 加载 Docker 镜像</span></span><br><span class="line">Docker: Pulling from jumpserver/core:v2.10.4        [ OK ]</span><br><span class="line">Docker: Pulling from jumpserver/koko:v2.10.4        [ OK ]</span><br><span class="line">Docker: Pulling from jumpserver/luna:v2.10.4        [ OK ]</span><br><span class="line">Docker: Pulling from jumpserver/nginx:alpine2       [ OK ]</span><br><span class="line">Docker: Pulling from jumpserver/redis:6-alpine      [ OK ]</span><br><span class="line">Docker: Pulling from jumpserver/lina:v2.10.4        [ OK ]</span><br><span class="line">Docker: Pulling from jumpserver/mysql:5             [ OK ]</span><br><span class="line">Docker: Pulling from jumpserver/lion:v2.10.4        [ OK ]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 安装配置 JumpServer</span></span><br><span class="line">1. 检查配置文件</span><br><span class="line">配置文件位置: /opt/jumpserver/config</span><br><span class="line">/opt/jumpserver/config/config.txt                 [ √ ]</span><br><span class="line">/opt/jumpserver/config/nginx/lb_http_server.conf  [ √ ]</span><br><span class="line">/opt/jumpserver/config/nginx/lb_ssh_server.conf   [ √ ]</span><br><span class="line">/opt/jumpserver/config/core/config.yml   [ √ ]</span><br><span class="line">/opt/jumpserver/config/koko/config.yml   [ √ ]</span><br><span class="line">/opt/jumpserver/config/mysql/my.cnf      [ √ ]</span><br><span class="line">/opt/jumpserver/config/redis/redis.conf  [ √ ]</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">2. 配置 Nginx</span><br><span class="line">配置文件位置:: /opt/jumpserver/config/nginx/cert</span><br><span class="line">/opt/jumpserver/config/nginx/cert/server.crt  [ √ ]</span><br><span class="line">/opt/jumpserver/config/nginx/cert/server.key  [ √ ]</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">3. 备份配置文件</span><br><span class="line">备份至 /opt/jumpserver/config/backup/config.txt.2021-03-19_08-01-51</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">4. 配置网络</span><br><span class="line">是否需要支持 IPv6? (y/n)  (默认为 n): n</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">5. 配置加密密钥</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">6. 配置持久化目录</span><br><span class="line">是否需要自定义持久化存储, 默认将使用目录 /opt/jumpserver? (y/n)  (默认为 n): n</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">7. 配置 MySQL</span><br><span class="line">是否使用外部mysql (y/n)  (默认为y): y</span><br><span class="line">请输入mysql的主机地址 (默认为MySQL地址): MySQL地址</span><br><span class="line">请输入mysql的端口 (默认为3306): 3306</span><br><span class="line">请输入mysql的数据库(事先做好授权) (默认为new_db): newDB</span><br><span class="line">请输入mysql的用户名 (默认为new_user): newUser</span><br><span class="line">请输入mysql的密码 (默认为new_pass): newPass</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">8. 配置 Redis</span><br><span class="line">是否使用外部redis  (y/n)  (默认为y): y</span><br><span class="line">请输入redis的主机地址 (默认为): Redis地址</span><br><span class="line">请输入redis的端口 (默认为6380): 6380</span><br><span class="line">请输入redis的密码 (默认为NewJMSRedisPass): newPass</span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 安装完成了</span></span><br></pre></td></tr></table></figure><h3 id="修改Nginx配置"><a href="#修改Nginx配置" class="headerlink" title="修改Nginx配置"></a>修改Nginx配置</h3><blockquote><p>这里主要修改主机名和SSL证书</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/jumpserver-installer-v2.10.4/compose/config_static/http_server.conf</span><br></pre></td></tr></table></figure><h3 id="添加HTTPS证书"><a href="#添加HTTPS证书" class="headerlink" title="添加HTTPS证书"></a>添加HTTPS证书</h3><blockquote><p>这里通过acme脚本部署证书到jumpserver目录</p><p>添加更新证书的操作，让Nginx重新加载证书</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~/.acme.sh/acme.sh --installcert \</span><br><span class="line">                   -d "jumpserver.example.com" \</span><br><span class="line">                   --ecc \</span><br><span class="line">                   --fullchainpath /opt/jumpserver/config/nginx/cert/jumpserver.crt \</span><br><span class="line">                   --keypath /opt/jumpserver/config/nginx/cert/jumpserver.key \</span><br><span class="line">                   --reloadcmd "/usr/bin/docker exec jms_nginx /usr/sbin/nginx -s reload" \</span><br><span class="line">                   --renew-hook "/usr/bin/docker exec jms-nginx /usr/sbin/nginx -s reload"</span><br></pre></td></tr></table></figure><h2 id="启动jumpserver"><a href="#启动jumpserver" class="headerlink" title="启动jumpserver"></a>启动jumpserver</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./jmsctl.sh start</span><br></pre></td></tr></table></figure><h1 id="验证jumpserver"><a href="#验证jumpserver" class="headerlink" title="验证jumpserver"></a>验证jumpserver</h1><h2 id="查看服务器证书"><a href="#查看服务器证书" class="headerlink" title="查看服务器证书"></a>查看服务器证书</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl s_client -showcerts -connect jumpserver.example.com:8443</span><br></pre></td></tr></table></figure><h2 id="测试连接jumpserver"><a href="#测试连接jumpserver" class="headerlink" title="测试连接jumpserver"></a>测试连接jumpserver</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 用户名@jumpserver.example.com -p 2223</span><br></pre></td></tr></table></figure><h2 id="登录网页端"><a href="#登录网页端" class="headerlink" title="登录网页端"></a>登录网页端</h2><p>浏览器打开 <a href="https://jumpserver.example.com:8443" target="_blank" rel="noopener">https://jumpserver.example.com:8443</a></p><h1 id="升级过程中碰到的问题"><a href="#升级过程中碰到的问题" class="headerlink" title="升级过程中碰到的问题"></a>升级过程中碰到的问题</h1><h2 id="jms-core无法启动"><a href="#jms-core无法启动" class="headerlink" title="jms_core无法启动"></a>jms_core无法启动</h2><ul><li><p>查看core日志/opt/jumpserver/core/logs/jumpserver.log</p></li><li><p>django做db migrate操作失败，导致jms_core无法完成db migration阻塞了启动</p></li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li><code>./jmsctl.sh stop</code>关闭堡垒机容器</li><li>重新导入数据库</li><li><code>./jmsctl.sh start</code>重新启动堡垒机容器</li></ul><h2 id="网页打开提示500内部错误"><a href="#网页打开提示500内部错误" class="headerlink" title="网页打开提示500内部错误"></a>网页打开提示500内部错误</h2><ul><li><p>浏览器按F12打开调试窗口，发现是<code>/api/v1/index/?total_count=1</code>请求500了</p></li><li><p>查看core日志/opt/jumpserver/core/logs/jumpserver.log</p></li><li>发现是Redis命令的错误，这个是Redis版本问题</li></ul><h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li>更新Redis版本&gt;=6.0</li></ul><h1 id="正式迁移"><a href="#正式迁移" class="headerlink" title="正式迁移"></a>正式迁移</h1><blockquote><p>简单测试jumpserver-v2.10.4版本，没什么大问题之后，就把老版本的jumpserver停了</p><p>修改新版本配置文件，用回正常的80/443/2222端口</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;jumpserver服务器环境&lt;ul&gt;&lt;li&gt;CentOS-7.9&lt;/li&gt;&lt;li&gt;Docker-CE 20.10.6&lt;/li&gt;&lt;
      
    
    </summary>
    
      <category term="JumpServer" scheme="https://luanlengli.github.io/categories/JumpServer/"/>
    
      <category term="CentOS" scheme="https://luanlengli.github.io/categories/JumpServer/CentOS/"/>
    
    
      <category term="JumpServer" scheme="https://luanlengli.github.io/tags/JumpServer/"/>
    
      <category term="CentOS" scheme="https://luanlengli.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>戴尔GPU工作站安装Ubuntu深度学习环境</title>
    <link href="https://luanlengli.github.io/2021/05/14/%E6%88%B4%E5%B0%94Precision7920%E5%B7%A5%E4%BD%9C%E7%AB%99%E5%AE%89%E8%A3%85Ubuntu%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83.html"/>
    <id>https://luanlengli.github.io/2021/05/14/戴尔Precision7920工作站安装Ubuntu深度学习环境.html</id>
    <published>2021-05-14T02:35:30.000Z</published>
    <updated>2021-05-14T05:58:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li><p>服务器配置：</p><ul><li>戴尔Precision 7920 Tower</li><li>双路英特尔至强银牌 4210R，20核40线程</li><li>两条DDR4-3200 REG-ECC 32GB内存</li><li>单块Nvidia RTX3090显卡</li><li>1400W电源</li></ul></li><li><p>操作系统：<a href="https://opentuna.cn/ubuntu-cdimage/releases/18.04.5/release/ubuntu-18.04.5-server-amd64.iso" target="_blank" rel="noopener">ubuntu-18.04.5-server-amd64.iso</a></p></li></ul><h1 id="安装所需软件"><a href="#安装所需软件" class="headerlink" title="安装所需软件"></a>安装所需软件</h1><ul><li>这里是后面会用到的软件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-get install apt-transport-https bash-completion ca-certificates curl git htop iotop jq nethogs tree vim</span><br></pre></td></tr></table></figure><ul><li>安装编译环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-get install build-essential dkms</span><br></pre></td></tr></table></figure><h1 id="安装Nvidia驱动"><a href="#安装Nvidia驱动" class="headerlink" title="安装Nvidia驱动"></a>安装Nvidia驱动</h1><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#abstract" target="_blank" rel="noopener">NVIDIA CUDA Installation Guide for Linux</a></p><h2 id="手动添加源"><a href="#手动添加源" class="headerlink" title="手动添加源"></a>手动添加源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# add-apt-repository "deb https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64 /"</span><br></pre></td></tr></table></figure><h2 id="添加源公钥"><a href="#添加源公钥" class="headerlink" title="添加源公钥"></a>添加源公钥</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-key adv --fetch-keys http://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub</span><br></pre></td></tr></table></figure><h2 id="更新APT缓存"><a href="#更新APT缓存" class="headerlink" title="更新APT缓存"></a>更新APT缓存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-get update</span><br></pre></td></tr></table></figure><h2 id="安装驱动程序"><a href="#安装驱动程序" class="headerlink" title="安装驱动程序"></a>安装驱动程序</h2><ul><li>先确认一下软件包的版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-cache madison cuda-drivers-460</span><br><span class="line">cuda-drivers-460 | 460.73.01-1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">cuda-drivers-460 | 460.32.03-1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">cuda-drivers-460 | 460.27.04-1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">cuda-drivers-460 | 460.27.04-1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">cuda-drivers-460 | 460.27.04-1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">[root@ubuntu:~]# apt-cache madison nvidia-driver-460</span><br><span class="line">nvidia-driver-460 | 460.73.01-0ubuntu1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">nvidia-driver-460 | 460.73.01-0ubuntu0.18.04.1 | https://opentuna.cn/ubuntu bionic-updates/restricted amd64 Packages</span><br><span class="line">nvidia-driver-460 | 460.73.01-0ubuntu0.18.04.1 | https://opentuna.cn/ubuntu bionic-security/restricted amd64 Packages</span><br><span class="line">nvidia-driver-460 | 460.32.03-0ubuntu1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">nvidia-driver-460 | 460.27.04-0ubuntu1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">nvidia-driver-460 | 460.27.04-0ubuntu1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">nvidia-driver-460 | 460.27.04-0ubuntu1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">[root@ubuntu:~]# apt-cache madison cuda-tools-11-2</span><br><span class="line">cuda-tools-11-3 |   11.3.0-1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">cuda-tools-11-3 |   11.3.0-1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">[root@ubuntu:~]# apt-cache madison libcudnn8</span><br><span class="line">libcudnn8 | 8.2.0.53-1+cuda11.3 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.2.0.53-1+cuda10.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.2.0.53-1+cuda10.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.1.1.33-1+cuda11.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.1.1.33-1+cuda10.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.1.1.33-1+cuda10.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.1.0.77-1+cuda11.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.1.0.77-1+cuda10.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.1.0.77-1+cuda10.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.0.5.39-1+cuda11.1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.0.5.39-1+cuda11.0 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.0.5.39-1+cuda11.0 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.0.5.39-1+cuda10.2 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br><span class="line">libcudnn8 | 8.0.5.39-1+cuda10.1 | https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64  Packages</span><br></pre></td></tr></table></figure><ul><li>安装指定版本驱动</li></ul><blockquote><p><font color="red">注意：</font> 如果电脑的BIOS里面开启了SecureBoot功能，在安装驱动时会要求添加key到UEFI，并且设置密码</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-get install cuda-drivers-460=460.73.01-1 nvidia-driver-460=460.73.01-0ubuntu1 cuda-tools-11-3=11.3.0-1 libcudnn8=8.2.0.53-1+cuda11.3</span><br></pre></td></tr></table></figure><h2 id="禁用nouveau"><a href="#禁用nouveau" class="headerlink" title="禁用nouveau"></a>禁用nouveau</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# cat &gt; /usr/lib/modprobe.d/blacklist-nouveau.conf &lt;&lt;EOF</span><br><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="重新生成内核initramfs"><a href="#重新生成内核initramfs" class="headerlink" title="重新生成内核initramfs"></a>重新生成内核initramfs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# update-initramfs -u</span><br></pre></td></tr></table></figure><h2 id="重启操作系统"><a href="#重启操作系统" class="headerlink" title="重启操作系统"></a>重启操作系统</h2><ul><li>重新启动操作系统，加载dkms Nvidia驱动模块，顺带禁用nouveau</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# reboot</span><br></pre></td></tr></table></figure><blockquote><p><font color="red">注意：</font> 第一次重启时，屏幕会提示”Perform MOK management”，选择”Enroll MOK”，选择”Continue”，选择”Yes”</p><p>屏幕提示”Enroll the key(s)?”，输入安装驱动时设置的密码，选择”OK”，重启电脑</p></blockquote><h2 id="检查驱动"><a href="#检查驱动" class="headerlink" title="检查驱动"></a>检查驱动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# nvidia-smi</span><br><span class="line">Fri May 14 11:26:32 2021       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 460.73.01    Driver Version: 460.73.01    CUDA Version: 11.2     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  GeForce RTX 3090    On   | 00000000:D5:00.0 Off |                  N/A |</span><br><span class="line">|  0%   51C    P8    19W / 350W |      1MiB / 24259MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h2 id="检查GPU持久化服务"><a href="#检查GPU持久化服务" class="headerlink" title="检查GPU持久化服务"></a>检查GPU持久化服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# systemctl status nvidia-persistenced.service </span><br><span class="line">● nvidia-persistenced.service - NVIDIA Persistence Daemon</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nvidia-persistenced.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Wed 2021-05-12 15:13:29 CST; 1 day 20h ago</span><br><span class="line"> Main PID: 1305 (nvidia-persiste)</span><br><span class="line">    Tasks: 1 (limit: 6143)</span><br><span class="line">   CGroup: /system.slice/nvidia-persistenced.service</span><br><span class="line">           └─1305 /usr/bin/nvidia-persistenced --verbose</span><br><span class="line"></span><br><span class="line">May 12 15:13:27 ubuntu systemd[1]: Starting NVIDIA Persistence Daemon...</span><br><span class="line">May 12 15:13:27 ubuntu nvidia-persistenced[1305]: Verbose syslog connection opened</span><br><span class="line">May 12 15:13:27 ubuntu nvidia-persistenced[1305]: Started (1305)</span><br><span class="line">May 12 15:13:27 ubuntu nvidia-persistenced[1305]: device 0000:d5:00.0 - registered</span><br><span class="line">May 12 15:13:29 ubuntu nvidia-persistenced[1305]: device 0000:d5:00.0 - persistence mode enabled.</span><br><span class="line">May 12 15:13:29 ubuntu nvidia-persistenced[1305]: device 0000:d5:00.0 - NUMA memory onlined.</span><br><span class="line">May 12 15:13:29 ubuntu nvidia-persistenced[1305]: Local RPC services initialized</span><br><span class="line">May 12 15:13:29 ubuntu systemd[1]: Started NVIDIA Persistence Daemon.</span><br></pre></td></tr></table></figure><h2 id="验证CUDA"><a href="#验证CUDA" class="headerlink" title="验证CUDA"></a>验证CUDA</h2><ul><li>安装cuda-samples</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-get install cuda-samples-11-3</span><br></pre></td></tr></table></figure><ul><li>运行deviceQuery</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# cd /usr/local/cuda-11.3/samples/1_Utilities/deviceQuery</span><br><span class="line">[root@ubuntu:~]# make &amp;&amp; ./deviceQuery</span><br><span class="line">...</span><br><span class="line">Detected 1 CUDA Capable device(s)</span><br><span class="line"></span><br><span class="line">Device 0: "GeForce RTX 3090"</span><br><span class="line">  CUDA Driver Version / Runtime Version          11.2 / 11.3</span><br><span class="line">  CUDA Capability Major/Minor version number:    8.6</span><br><span class="line">  Total amount of global memory:                 24260 MBytes (25438322688 bytes)</span><br><span class="line">  (082) Multiprocessors, (128) CUDA Cores/MP:    10496 CUDA Cores</span><br><span class="line">  GPU Max Clock rate:                            1695 MHz (1.70 GHz)</span><br><span class="line">  Memory Clock rate:                             9751 Mhz</span><br><span class="line">  Memory Bus Width:                              384-bit</span><br><span class="line">  L2 Cache Size:                                 6291456 bytes</span><br><span class="line">  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)</span><br><span class="line">  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers</span><br><span class="line">  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers</span><br><span class="line">  Total amount of constant memory:               65536 bytes</span><br><span class="line">  Total amount of shared memory per block:       49152 bytes</span><br><span class="line">  Total shared memory per multiprocessor:        102400 bytes</span><br><span class="line">  Total number of registers available per block: 65536</span><br><span class="line">  Warp size:                                     32</span><br><span class="line">  Maximum number of threads per multiprocessor:  1536</span><br><span class="line">  Maximum number of threads per block:           1024</span><br><span class="line">  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)</span><br><span class="line">  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)</span><br><span class="line">  Maximum memory pitch:                          2147483647 bytes</span><br><span class="line">  Texture alignment:                             512 bytes</span><br><span class="line">  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)</span><br><span class="line">  Run time limit on kernels:                     No</span><br><span class="line">  Integrated GPU sharing Host Memory:            No</span><br><span class="line">  Support host page-locked memory mapping:       Yes</span><br><span class="line">  Alignment requirement for Surfaces:            Yes</span><br><span class="line">  Device has ECC support:                        Disabled</span><br><span class="line">  Device supports Unified Addressing (UVA):      Yes</span><br><span class="line">  Device supports Managed Memory:                Yes</span><br><span class="line">  Device supports Compute Preemption:            Yes</span><br><span class="line">  Supports Cooperative Kernel Launch:            Yes</span><br><span class="line">  Supports MultiDevice Co-op Kernel Launch:      Yes</span><br><span class="line">  Device PCI Domain ID / Bus ID / location ID:   0 / 213 / 0</span><br><span class="line">  Compute Mode:</span><br><span class="line">     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;</span><br><span class="line"></span><br><span class="line">deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 11.2, CUDA Runtime Version = 11.3, NumDevs = 1</span><br><span class="line">Result = PASS</span><br></pre></td></tr></table></figure><ul><li>运行bandwidthTest</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# cd /usr/local/cuda-11.3/samples/1_Utilities/bandwidthTest</span><br><span class="line">[root@ubuntu:~]# make &amp;&amp; ./bandwidthTest</span><br><span class="line">...</span><br><span class="line">[CUDA Bandwidth Test] - Starting...</span><br><span class="line">Running on...</span><br><span class="line"></span><br><span class="line"> Device 0: GeForce RTX 3090</span><br><span class="line"> Quick Mode</span><br><span class="line"></span><br><span class="line"> Host to Device Bandwidth, 1 Device(s)</span><br><span class="line"> PINNED Memory Transfers</span><br><span class="line">   Transfer Size (Bytes)Bandwidth(GB/s)</span><br><span class="line">   3200000012.3</span><br><span class="line"></span><br><span class="line"> Device to Host Bandwidth, 1 Device(s)</span><br><span class="line"> PINNED Memory Transfers</span><br><span class="line">   Transfer Size (Bytes)Bandwidth(GB/s)</span><br><span class="line">   320000009.0</span><br><span class="line"></span><br><span class="line"> Device to Device Bandwidth, 1 Device(s)</span><br><span class="line"> PINNED Memory Transfers</span><br><span class="line">   Transfer Size (Bytes)Bandwidth(GB/s)</span><br><span class="line">   32000000787.5</span><br><span class="line"></span><br><span class="line">Result = PASS</span><br><span class="line"></span><br><span class="line">NOTE: The CUDA Samples are not meant for performance measurements. Results may vary when GPU Boost is enabled.</span><br></pre></td></tr></table></figure><h1 id="安装Nvidia-Docker2"><a href="#安装Nvidia-Docker2" class="headerlink" title="安装Nvidia-Docker2"></a>安装Nvidia-Docker2</h1><h2 id="参考文档-1"><a href="#参考文档-1" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html" target="_blank" rel="noopener">Installation Guide</a></p><h2 id="添加Docker-CE源"><a href="#添加Docker-CE源" class="headerlink" title="添加Docker-CE源"></a>添加Docker-CE源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | apt-key add -</span><br><span class="line">[root@ubuntu:~]# add-apt-repository "deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"</span><br></pre></td></tr></table></figure><h2 id="安装Docker-CE"><a href="#安装Docker-CE" class="headerlink" title="安装Docker-CE"></a>安装Docker-CE</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-get update</span><br><span class="line">[root@ubuntu:~]# apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h2 id="添加Nvidia-Docker源"><a href="#添加Nvidia-Docker源" class="headerlink" title="添加Nvidia-Docker源"></a>添加Nvidia-Docker源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# distribution=$(. /etc/os-release;echo $ID$VERSION_ID)</span><br><span class="line">[root@ubuntu:~]# curl -sSL https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add -</span><br><span class="line">[root@ubuntu:~]# curl -sSL https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list</span><br></pre></td></tr></table></figure><h2 id="安装Nvidia-Docker2-1"><a href="#安装Nvidia-Docker2-1" class="headerlink" title="安装Nvidia-Docker2"></a>安装Nvidia-Docker2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# apt-get update</span><br><span class="line">[root@ubuntu:~]# apt-get nvidia-docker2</span><br></pre></td></tr></table></figure><h2 id="编辑docker配置文件"><a href="#编辑docker配置文件" class="headerlink" title="编辑docker配置文件"></a>编辑docker配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# cat /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  "data-root": "/var/lib/docker",</span><br><span class="line">  "exec-opts": [</span><br><span class="line">    "native.cgroupdriver=systemd"</span><br><span class="line">  ],</span><br><span class="line">  "insecure-registries": [],</span><br><span class="line">  "log-driver": "json-file",</span><br><span class="line">  "log-opts": &#123;</span><br><span class="line">    "max-file": "3",</span><br><span class="line">    "max-size": "100m"</span><br><span class="line">  &#125;,</span><br><span class="line">  "max-concurrent-downloads": 10,</span><br><span class="line">  "registry-mirrors": [</span><br><span class="line">    "https://pqbap4ya.mirror.aliyuncs.com",</span><br><span class="line">    "https://mirror.ccs.tencentyun.com"</span><br><span class="line">  ],</span><br><span class="line">  "runtimes": &#123;</span><br><span class="line">    "nvidia": &#123;</span><br><span class="line">      "path": "nvidia-container-runtime",</span><br><span class="line">      "runtimeArgs": []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  "storage-driver": "overlay2",</span><br><span class="line">  "storage-opts": [</span><br><span class="line">    "overlay2.override_kernel_check=true"</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重启Docker服务"><a href="#重启Docker服务" class="headerlink" title="重启Docker服务"></a>重启Docker服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# systemctl restart docker.service</span><br></pre></td></tr></table></figure><h2 id="验证Nvidia-Docker"><a href="#验证Nvidia-Docker" class="headerlink" title="验证Nvidia-Docker"></a>验证Nvidia-Docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu:~]# docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi</span><br><span class="line">Unable to find image 'nvidia/cuda:11.0-base' locally</span><br><span class="line">11.0-base: Pulling from nvidia/cuda</span><br><span class="line">54ee1f796a1e: Pull complete </span><br><span class="line">f7bfea53ad12: Pull complete </span><br><span class="line">46d371e02073: Pull complete </span><br><span class="line">b66c17bbf772: Pull complete </span><br><span class="line">3642f1a6dfb3: Pull complete </span><br><span class="line">e5ce55b8b4b9: Pull complete </span><br><span class="line">155bc0332b0a: Pull complete </span><br><span class="line">Digest: sha256:774ca3d612de15213102c2dbbba55df44dc5cf9870ca2be6c6e9c627fa63d67a</span><br><span class="line">Status: Downloaded newer image for nvidia/cuda:11.0-base</span><br><span class="line">Fri May 14 03:39:41 2021       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 460.73.01    Driver Version: 460.73.01    CUDA Version: 11.2     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  GeForce RTX 3090    On   | 00000000:D5:00.0 Off |                  N/A |</span><br><span class="line">|  0%   51C    P8    18W / 350W |      1MiB / 24259MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;服务器配置：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;戴尔Precision 7920 Tower&lt;/li&gt;&lt;li&gt;双路英特尔至强银牌 421
      
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://luanlengli.github.io/tags/Ubuntu/"/>
    
      <category term="Nvidia" scheme="https://luanlengli.github.io/tags/Nvidia/"/>
    
      <category term="深度学习" scheme="https://luanlengli.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes基于virtual-kubelet实现弹性Pod</title>
    <link href="https://luanlengli.github.io/2020/11/10/kubernetes%E5%9F%BA%E4%BA%8Evirtual-kubelet%E5%AE%9E%E7%8E%B0%E5%BC%B9%E6%80%A7Pod.html"/>
    <id>https://luanlengli.github.io/2020/11/10/kubernetes基于virtual-kubelet实现弹性Pod.html</id>
    <published>2020-11-10T08:10:47.000Z</published>
    <updated>2020-11-10T09:41:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>virtual-kubelet 是一个开源的社区主导型项目，是Kubernetes kubelet的一种实现</li><li>它伪装成kubelet，与Kubernetes集群API通信</li><li>实现Kubernetes API向阿里云的ECI、AWS的Fargate等serverless平台扩展</li><li>Github项目地址<a href="https://github.com/virtual-kubelet/virtual-kubelet" target="_blank" rel="noopener">virtual-kubelet</a></li><li><font color="red">默认看此文的都具备一定的能力，抄作业不会把名字都抄了</font></li></ul><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><ul><li>一般情况下，kubelet为每个node节点实现Pod的操作，所有操作都基于本地的计算资源。</li><li>Virtual-kubelet在Kubernetes API看来，跟普通的kubelet API差不多，区别在于可以在其他地方调度容器。</li><li>某种程度上来讲，可以把Virtual-kubelet理解为一个<font color="red">功能受限的、资源近乎无限的</font>node节点</li><li>所有的Pod并不会跑在一个集中式的“真实”节点上，而是被打散到云平台资源池里面。</li><li>为了实现kubelet API，Virtual-kubelet提供插件式的Provider接口，允许开发者去根据自身情况自定义的实现普通kubelet功能</li><li>这里简单罗列一下公有云的Provider实现，更多的Provider实现，看<a href="https://github.com/virtual-kubelet/virtual-kubelet#Providers" target="_blank" rel="noopener">项目文档</a><ul><li><a href="https://github.com/virtual-kubelet/alibabacloud-eci" target="_blank" rel="noopener">阿里云 ECI Provider</a></li><li><a href="https://github.com/virtual-kubelet/azure-aci" target="_blank" rel="noopener">Azure Container Instances Provider</a></li><li><a href="https://github.com/virtual-kubelet/aws-fargate" target="_blank" rel="noopener">AWS Fargate Provider</a></li></ul></li></ul><h3 id="跟普通kubelet区别"><a href="#跟普通kubelet区别" class="headerlink" title="跟普通kubelet区别"></a>跟普通kubelet区别</h3><blockquote><p>由于Virtual-kubelet需要考虑安全性问题，并不会实现所有kubelet功能，例如特权容器，因此没法挂载宿主机的docker</p><p>这里以<font color="red">阿里云的ECI</font>为例</p></blockquote><table><thead><tr><th>不支持的功能</th><th>具体内容</th><th>推荐方案</th></tr></thead><tbody><tr><td>HostPath</td><td>Mount本地宿主机文件到容器中</td><td>使用emptyDir，或者NAS存储</td></tr><tr><td>HostNetwork</td><td>将宿主机端口映射到容器中</td><td>使用type=LoadBalancer的负载均衡</td></tr><tr><td>DaemonSet</td><td>在容器所在宿主机上部署static pod</td><td>通过sidecar形式在pod中部署多个镜像</td></tr><tr><td>Privileged权限</td><td>容器拥有privileged权限</td><td>使用securityContext为pod添加Capability</td></tr><tr><td>type=NodePort的Service</td><td>通过宿主机端口映射到容器端口</td><td>使用type=LoadBalancer的负载均衡</td></tr></tbody></table><h3 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h3><h4 id="Virtual-Kubelet架构图"><a href="#Virtual-Kubelet架构图" class="headerlink" title="Virtual-Kubelet架构图"></a>Virtual-Kubelet架构图</h4><p><img src="/2020/11/10/./kubernetes基于virtual-kubelet实现弹性Pod/diagram.svg" alt="项目架构图"></p><h4 id="阿里云ECI架构图"><a href="#阿里云ECI架构图" class="headerlink" title="阿里云ECI架构图"></a>阿里云ECI架构图</h4><p><img src="/2020/11/10/./kubernetes基于virtual-kubelet实现弹性Pod/aliyun-eci.png" alt="阿里云ECI架构图"></p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li>业务容器弹性扩容，用在集群资源不足时，弹性扩展到Virtual-kubelet</li><li>业务容器完全托管</li><li>数据处理任务</li><li>CI/CD任务</li><li>定时任务</li></ul><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>对于很多 Kubernetes 集群，通常同时支撑在线和离线多种负载，在线负载流量的波动性和离线计算任务的时间不确定性，导致在不同时刻负载的资源需求呈波峰波谷状，比如很多企业需要在周末、月中和月末进行大批量的数据计算，在特定的时间点需要大量的计算力，以应对突发的计算资源需求。</p><p>目前k8s通常的做法是通过autoscaler自动扩容节点（约3 min启动一个新节点），直到pod被成功调度运行，当pod执行完成后会自动回收临时节点。这种扩容方式pod往往需要等待 &gt; 3 min才能被调度运行。</p><p>通过 Virtual kubelet ，可以用最小的运维成本（无需调整节点数量），来应对集群计算资源高峰压力。</p><h1 id="简单演示"><a href="#简单演示" class="headerlink" title="简单演示"></a>简单演示</h1><blockquote><p>这里基于阿里云的ACK进行演示，以Nginx作为容器镜像</p></blockquote><h2 id="阿里云ACK对接ECI"><a href="#阿里云ACK对接ECI" class="headerlink" title="阿里云ACK对接ECI"></a>阿里云ACK对接ECI</h2><p>参考此<a href="https://help.aliyun.com/document_detail/119207.html?spm=a2c4g.11186623.6.563.41be1ee9T4EvDD" target="_blank" rel="noopener">文档</a></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>阿里云的virtual-kubelet节点默认是带上了污点<code>virtual-kubelet.io/provider=alibabacloud:NoSchedule</code></li><li>确保一般情况下，Pod不会被调度Virtual-kubelet节点</li></ul><h2 id="QuickStart"><a href="#QuickStart" class="headerlink" title="QuickStart"></a>QuickStart</h2><ul><li>指定nodeName，跳过k8s调度，手动调度到Virtual-kubelet节点</li><li>定义resources字段，只指定容器CPU和内存规格，ECI会尝试使用多种ECS规格进行支撑。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      nodeName:</span> <span class="string">virtual-node-eci-0</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - image:</span> <span class="attr">nginx:1.18</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">250</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">512</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">250</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">512</span><span class="string">Mi</span></span><br></pre></td></tr></table></figure><ul><li>通过annotations，指定使用ECS规格<ul><li>实例内容器可以不用限制资源上限</li><li>容器resource定义可以不用指定request和limit</li><li>各容器可以最大程度的共享申请的资源。</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="comment"># 只指定CPU和内存，会自动匹配多个同规格的ECS</span></span><br><span class="line">        <span class="string">k8s.aliyun.com/eci-use-specs</span> <span class="string">:</span> <span class="string">"2-4Gi"</span></span><br><span class="line">        <span class="comment"># 指定ECS具体的规格，多个实例规格用逗号隔开</span></span><br><span class="line">        <span class="string">k8s.aliyun.com/eci-use-specs</span> <span class="string">:</span> <span class="string">"ecs.c5.large,ecs.c6.large"</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      nodeName:</span> <span class="string">virtual-node-eci-0</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - image:</span> <span class="attr">nginx:1.18</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">250</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">512</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">250</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">512</span><span class="string">Mi</span></span><br></pre></td></tr></table></figure><ul><li>通过annotations，指定使用SPOT实例，限制出价</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="string">k8s.aliyun.com/eci-use-specs</span> <span class="string">:</span> <span class="string">"ecs.c5.large"</span>  <span class="comment">#根据需要替换您接受的 ECS 规格</span></span><br><span class="line">        <span class="string">k8s.aliyun.com/eci-spot-strategy:</span> <span class="string">"SpotWithPriceLimit"</span>  <span class="comment">#最高价限定策略</span></span><br><span class="line">        <span class="string">k8s.aliyun.com/eci-spot-price-limit:</span> <span class="string">"0.250"</span> <span class="comment">#小时最高单价</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      nodeName:</span> <span class="string">virtual-node-eci-0</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - image:</span> <span class="attr">nginx:1.18</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">250</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">512</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">250</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">512</span><span class="string">Mi</span></span><br></pre></td></tr></table></figure><h1 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h1><h2 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h2><ul><li>假定jenkins的master节点已经有权限访问Kubernetes API增删改查Pod</li><li>jenkins调用Kubernetes API创建Pod，作为Jenkins slave节点加入到jenkins</li><li>直接指定nodeName强制调度到Virtual-kubelet节点，指定SPOT实例的规格，价格上限</li><li>构建过程使用kaniko构建容器镜像，推送到自建的harbor镜像源服务器</li></ul><h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><h3 id="创建Secret"><a href="#创建Secret" class="headerlink" title="创建Secret"></a>创建Secret</h3><ul><li>命名空间根据自己的情况灵活调整</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n jenkins create secret docker-registry \</span><br><span class="line">harbor-registry-secret \</span><br><span class="line">--docker-server=DOCKER_REGISTRY_SERVER \</span><br><span class="line">--docker-username=DOCKER_USER \</span><br><span class="line">--docker-password=DOCKER_PASSWORD \</span><br><span class="line">--docker-email=DOCKER_EMAIL</span><br></pre></td></tr></table></figure><h3 id="配置jenkinsfile"><a href="#配置jenkinsfile" class="headerlink" title="配置jenkinsfile"></a>配置jenkinsfile</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 指定nodeName调度到ECI</span></span><br><span class="line"><span class="comment">2. 指定annotations使用spot实例，配置最高出价</span></span><br><span class="line"><span class="comment">3. 挂载dockerconfigjson到kaniko实现免密</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">def</span> PodTemplate = <span class="string">'''</span></span><br><span class="line"><span class="string">apiVersion: "v1"</span></span><br><span class="line"><span class="string">kind: "Pod"</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  annotations:</span></span><br><span class="line"><span class="string">    k8s.aliyun.com/eci-use-specs : "ecs.c6.xlarge"</span></span><br><span class="line"><span class="string">    k8s.aliyun.com/eci-spot-strategy: "SpotWithPriceLimit"</span></span><br><span class="line"><span class="string">    k8s.aliyun.com/eci-spot-price-limit: "0.250"</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    jenkins: "slave"</span></span><br><span class="line"><span class="string">    jenkins/jnlp-agent: "true"</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - env:</span></span><br><span class="line"><span class="string">    - name: "TZ"</span></span><br><span class="line"><span class="string">      value: "Asia/Shanghai"</span></span><br><span class="line"><span class="string">    - name: "JENKINS_AGENT_WORKDIR"</span></span><br><span class="line"><span class="string">      value: "/home/jenkins/agent"</span></span><br><span class="line"><span class="string">    - name: "JENKINS_URL"</span></span><br><span class="line"><span class="string">      value: "http://jenkins-service/"</span></span><br><span class="line"><span class="string">    image: "jenkins/jnlp-slave:4.3-9"</span></span><br><span class="line"><span class="string">    imagePullPolicy: "IfNotPresent"</span></span><br><span class="line"><span class="string">    name: "jnlp"</span></span><br><span class="line"><span class="string">    tty: true</span></span><br><span class="line"><span class="string">    volumeMounts:</span></span><br><span class="line"><span class="string">    - name: "jenkins-nfs"</span></span><br><span class="line"><span class="string">      mountPath: "/jenkins_outputs"</span></span><br><span class="line"><span class="string">      readOnly: false</span></span><br><span class="line"><span class="string">    - name: timezone</span></span><br><span class="line"><span class="string">      mountPath: /etc/localtime</span></span><br><span class="line"><span class="string">      subPath: Shanghai</span></span><br><span class="line"><span class="string">    - mountPath: /root/.docker</span></span><br><span class="line"><span class="string">      name: dockerconfigjson</span></span><br><span class="line"><span class="string">      readOnly: true</span></span><br><span class="line"><span class="string">    workingDir: "/home/jenkins/agent"</span></span><br><span class="line"><span class="string">  - command:</span></span><br><span class="line"><span class="string">    - /busybox/cat</span></span><br><span class="line"><span class="string">    env:</span></span><br><span class="line"><span class="string">    - name: TZ</span></span><br><span class="line"><span class="string">      value: Asia/Shanghai</span></span><br><span class="line"><span class="string">    - name: LANG</span></span><br><span class="line"><span class="string">      value: C.UTF-8</span></span><br><span class="line"><span class="string">    image: gcr.io/kaniko-project/executor:debug-v1.0.0</span></span><br><span class="line"><span class="string">    imagePullPolicy: IfNotPresent</span></span><br><span class="line"><span class="string">    name: kaniko</span></span><br><span class="line"><span class="string">    tty: true</span></span><br><span class="line"><span class="string">    volumeMounts:</span></span><br><span class="line"><span class="string">    - mountPath: /kaniko/.docker</span></span><br><span class="line"><span class="string">      name: dockerconfigjson</span></span><br><span class="line"><span class="string">      readOnly: true</span></span><br><span class="line"><span class="string">    workingDir: /home/jenkins/agent</span></span><br><span class="line"><span class="string">  hostNetwork: false</span></span><br><span class="line"><span class="string">  nodeName: virtual-node-eci-0</span></span><br><span class="line"><span class="string">  restartPolicy: "Never"</span></span><br><span class="line"><span class="string">  serviceAccount: "jenkins"</span></span><br><span class="line"><span class="string">  volumes:</span></span><br><span class="line"><span class="string">  - name: dockerconfigjson</span></span><br><span class="line"><span class="string">    secret:</span></span><br><span class="line"><span class="string">      secretName: harbor-registry-secret</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">pipeline &#123;</span><br><span class="line">    agent&#123;</span><br><span class="line">        kubernetes &#123;</span><br><span class="line">            yaml PodTemplate</span><br><span class="line">            defaultContainer <span class="string">"jnlp"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage (<span class="string">"拉取代码"</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    echo <span class="string">"拉代码"</span></span><br><span class="line">                &#125;</span><br><span class="line">                script &#123;</span><br><span class="line">                    <span class="comment">/* 这里简单写一个FROM nginx:1.18 */</span></span><br><span class="line">                    writeFile <span class="string">encoding:</span> <span class="string">'UTF8'</span>, <span class="string">file:</span> <span class="string">'./Dockerfile'</span>, <span class="string">text:</span> <span class="string">'FROM nginx:1.18'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage (<span class="string">"构建docker镜像"</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="comment">/* 切到kaniko构建docker镜像 */</span></span><br><span class="line">                <span class="comment">/* 构建过程使用阿里云容器镜像代理 */</span></span><br><span class="line">                <span class="comment">/* 同时推送到多个不同的镜像仓库 */</span></span><br><span class="line">                container(<span class="string">name:</span> <span class="string">'kaniko'</span>, <span class="string">shell:</span> <span class="string">'/busybox/sh'</span>) &#123;</span><br><span class="line">                    script &#123;</span><br><span class="line">                        sh <span class="string">'''</span></span><br><span class="line"><span class="string">                        #!/busybox/sh</span></span><br><span class="line"><span class="string">                        /kaniko/executor \</span></span><br><span class="line"><span class="string">                        --context \$(pwd) \</span></span><br><span class="line"><span class="string">                        --verbosity "info" \</span></span><br><span class="line"><span class="string">                        --registry-mirror "pqbap4ya.mirror.aliyuncs.com" \</span></span><br><span class="line"><span class="string">                        --destination "dockerregistry/nginx:1.18" \</span></span><br><span class="line"><span class="string">                        --destination "dockerregistry/nginx:1.18-debian" \</span></span><br><span class="line"><span class="string">                        --destination "dockerregistry/nginx:latest"</span></span><br><span class="line"><span class="string">                        '''</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;&lt;l
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Kubernetes/"/>
    
      <category term="Virtual-Kubelet" scheme="https://luanlengli.github.io/categories/Kubernetes/Virtual-Kubelet/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
      <category term="Virtual-Kubelet" scheme="https://luanlengli.github.io/tags/Virtual-Kubelet/"/>
    
  </entry>
  
  <entry>
    <title>使用fail2ban保护jumpserver不被暴力破解</title>
    <link href="https://luanlengli.github.io/2020/08/30/%E4%BD%BF%E7%94%A8fail2ban%E4%BF%9D%E6%8A%A4jumpserver%E4%B8%8D%E8%A2%AB%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3.html"/>
    <id>https://luanlengli.github.io/2020/08/30/使用fail2ban保护jumpserver不被暴力破解.html</id>
    <published>2020-08-30T12:27:16.000Z</published>
    <updated>2020-09-27T03:35:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>操作系统<code>CentOS-7</code></li><li><code>jumpserver</code>版本<code>2.0.1</code>。</li><li>根据<code>jumpserver</code>官方文档里的<a href="https://docs.jumpserver.org/zh/master/install/install_security/" target="_blank" rel="noopener">安全建议</a>，做了以下加固措施<ul><li>操作系统保持最新的软件版本</li><li>仅开放<code>443</code>和<code>2222</code>端口</li><li>禁止公网PING响应</li></ul></li><li>可是使用一段时间之后，在网页端管理后台，查看<code>日志审计</code>-&gt;<code>登录日志</code>，发现有很多<code>password_failed</code>的日志。</li><li>登录<code>jumpserver</code>服务器仔细查看<code>koko</code>的日志后，发现基本都是来自同一个IP地址对多个常见用户名进行暴力登录破解。</li><li>看来<code>jumpserver</code>名气挺大的，默认<code>2222</code>端口被暴力登录破解还是挺频繁的，建议修改成其他端口。</li><li><code>jumpserver</code>默认的安全设置只能限制同一用户的<code>登录失败次数</code>、<code>禁止登录时间间隔</code>，这就有点不能忍了。</li><li>于是乎祭出<code>fail2ban</code>配置自定义过滤器来收拾收拾。</li><li>这里不仅限于JumpServer，其他应用也可以参考此方法一通百通</li></ul><h1 id="安装fail2ban"><a href="#安装fail2ban" class="headerlink" title="安装fail2ban"></a>安装fail2ban</h1><ul><li>添加EPEL源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure><ul><li>安装fail2ban</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y fail2ban</span><br></pre></td></tr></table></figure><h1 id="jms-koko日志解析"><a href="#jms-koko日志解析" class="headerlink" title="jms-koko日志解析"></a>jms-koko日志解析</h1><ul><li><p><code>koko</code>的日志文件存放在<code>/opt/koko/data/logs/koko.log</code></p></li><li><p>这里放一段koko日志的内容</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">YYYY-MM-DD 20:22:24 [INFO] SSH conn[a521be6ef6f8849382c3e4e3a6ae37b3836ebda0] Failed password for games from 172.105.86.202</span><br><span class="line">YYYY-MM-DD 20:23:09 [INFO] SSH conn[1a7a38b23a7763014829ce550b3d9c8e6f6da59f] authenticating user user1 password</span><br><span class="line">YYYY-MM-DD 20:23:09 [ERRO] User user1 Authenticate err: POST http://127.0.0.1:8080/api/v1/authentication/tokens/ failed, get code: 400, &#123;"error":"password_failed","msg":"您输入的用户名或密码不正确，请重新输入。 您还可以尝试 4 次（账号将被临时 锁定 15 分钟）"&#125;</span><br><span class="line">YYYY-MM-DD 20:23:09 [INFO] SSH conn[1a7a38b23a7763014829ce550b3d9c8e6f6da59f] Failed password for user1 from 172.105.86.202</span><br><span class="line">YYYY-MM-DD 20:23:29 [INFO] SSH conn[a97528c3a63c613831cf6f3702bc5cefdddbe798] authenticating user pythia password</span><br><span class="line">YYYY-MM-DD 20:23:30 [ERRO] User pythia Authenticate err: POST http://127.0.0.1:8080/api/v1/authentication/tokens/ failed, get code: 400, &#123;"error":"password_failed","msg":"您输入的用户名或密码不正确，请重新输入。 您还可以尝试 4 次（账号将被临时 锁定 15 分钟）"&#125;</span><br><span class="line">YYYY-MM-DD 20:23:30 [INFO] SSH conn[a97528c3a63c613831cf6f3702bc5cefdddbe798] Failed password for pythia from 211.99.229.3</span><br><span class="line">YYYY-MM-DD 20:23:54 [INFO] SSH conn[30a806d6168f01f798524727a1be285a8a280b77] authenticating user pc password</span><br><span class="line">YYYY-MM-DD 20:23:54 [ERRO] User pc Authenticate err: POST http://127.0.0.1:8080/api/v1/authentication/tokens/ failed, get code: 400, &#123;"error":"password_failed","msg":"您输入的用户名或密码不正确，请重新输入。 您还可以尝试 4 次（账号将被临时 锁定 15 分钟）"&#125;</span><br><span class="line">YYYY-MM-DD 20:23:54 [INFO] SSH conn[30a806d6168f01f798524727a1be285a8a280b77] Failed password for pc from 172.105.86.202</span><br><span class="line">YYYY-MM-DD 20:24:34 [INFO] SSH conn[f8e65cd6ecce476a902b4a2d60596d59bd94558a] authenticating user pollinate password</span><br><span class="line">YYYY-MM-DD 20:24:34 [ERRO] User pollinate Authenticate err: POST http://127.0.0.1:8080/api/v1/authentication/tokens/ failed, get code: 400, &#123;"error":"password_failed","msg":"您输入的用户名或密码不正确，请重新输入。 您还可以尝试 4 次（账号将被临时 锁定 15 分钟）"&#125;</span><br><span class="line">YYYY-MM-DD 20:24:34 [INFO] SSH conn[f8e65cd6ecce476a902b4a2d60596d59bd94558a] Failed password for pollinate from 211.99.229.3</span><br><span class="line">YYYY-MM-DD 20:24:40 [INFO] SSH conn[89b6e5d651dbca4ec13f311f84efbc96d7bdc140] authenticating user cuf password</span><br><span class="line">YYYY-MM-DD 20:24:40 [ERRO] User cuf Authenticate err: POST http://127.0.0.1:8080/api/v1/authentication/tokens/ failed, get code: 400, &#123;"error":"password_failed","msg":"您输入的用户名或密码不正确，请重新输入。 您还可以尝试 4 次（账号将被临时 锁定 15 分钟）"&#125;</span><br><span class="line">YYYY-MM-DD 20:24:40 [INFO] SSH conn[89b6e5d651dbca4ec13f311f84efbc96d7bdc140] Failed password for cuf from 172.105.86.202</span><br><span class="line">YYYY-MM-DD 20:25:25 [INFO] SSH conn[ab15f086f2bea09db3109e1355460384c618f569] authenticating user test password</span><br><span class="line">YYYY-MM-DD 20:25:25 [ERRO] User test Authenticate err: POST http://127.0.0.1:8080/api/v1/authentication/tokens/ failed, get code: 400, &#123;"error":"password_failed","msg":"您输入的用户名或密码不正确，请重新输入。 您还可以尝试 4 次（账号将被临时 锁定 15 分钟）"&#125;</span><br><span class="line">YYYY-MM-DD 20:25:25 [INFO] SSH conn[ab15f086f2bea09db3109e1355460384c618f569] Failed password for test from 172.105.86.202</span><br></pre></td></tr></table></figure><ul><li>可以看到登录失败的日志格式是统一的以<code>Failed password for &lt;用户名&gt; from &lt;IP地址&gt;</code>结尾</li><li>那么可以开始准备配置fail2ban的自定义过滤器了</li></ul><h1 id="fail2ban自定义过滤器"><a href="#fail2ban自定义过滤器" class="headerlink" title="fail2ban自定义过滤器"></a>fail2ban自定义过滤器</h1><ul><li><p>fail2ban自带了很多常见服务的过滤器，但是jumpserver不在其中，于是乎自己弄一个吧</p></li><li><p>fai2ban支持基于正则表达式的过滤，因此可以先用正则表达式匹配一下登录失败的日志</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-regex /opt/koko/data/logs/koko.log 'Failed password for [A-Za-z0-9]+ from &lt;HOST&gt;'</span><br></pre></td></tr></table></figure><ul><li>命令运行之后会显示结果<ul><li><code>Failregex: 8234 total</code>代表有8234条记录被匹配</li><li><code>Date template hits</code>指该日志中有满足格式的日期</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Running tests</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">Use   failregex line : Failed password for [A-Za-z0-9]+ from &lt;HOST&gt;</span><br><span class="line">Use         log file : /opt/koko/data/logs/koko.log</span><br><span class="line">Use         encoding : UTF-8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Results</span><br><span class="line">=======</span><br><span class="line"></span><br><span class="line">Failregex: 8234 total</span><br><span class="line">|-  #) [# of hits] regular expression</span><br><span class="line">|   1) [8234] Failed password for [A-Za-z0-9]+ from &lt;HOST&gt;</span><br><span class="line">`-</span><br><span class="line"></span><br><span class="line">Ignoreregex: 0 total</span><br><span class="line"></span><br><span class="line">Date template hits:</span><br><span class="line">|- [# of hits] date format</span><br><span class="line">|  [27451] &#123;^LN-BEG&#125;ExYear(?P&lt;_sep&gt;[-/.])Month(?P=_sep)Day(?:T|  ?)24hour:Minute:Second(?:[.,]Microseconds)?(?:\s*Zone offset)?</span><br><span class="line">`-</span><br><span class="line"></span><br><span class="line">Lines: 27451 lines, 0 ignored, 8234 matched, 19217 missed</span><br><span class="line">[processed in 1.62 sec]</span><br><span class="line"></span><br><span class="line">Missed line(s): too many to print.  Use --print-all-missed to print all 19217 lines</span><br></pre></td></tr></table></figure><ul><li>既然正则匹配已经ok了，那么就可以配置自定义过滤器了</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/fail2ban/filter.d/jms-koko.conf</span><br></pre></td></tr></table></figure><ul><li>添加如下内容</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Definition]</span><br><span class="line">failregex = Failed password for [A-Za-z0-9]+ from &lt;HOST&gt;</span><br><span class="line">ignoreregex =</span><br></pre></td></tr></table></figure><h1 id="配置fail2ban服务"><a href="#配置fail2ban服务" class="headerlink" title="配置fail2ban服务"></a>配置fail2ban服务</h1><h2 id="添加fail2ban配置"><a href="#添加fail2ban配置" class="headerlink" title="添加fail2ban配置"></a>添加fail2ban配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fail2ban/jail.local</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认禁止IP地址15天，单位是秒:</span></span><br><span class="line">bantime = 1296000</span><br><span class="line"><span class="meta">#</span><span class="bash"> ban的动作使用iptables-multiport</span></span><br><span class="line">banaction = iptables-multiport</span><br><span class="line"><span class="meta">#</span><span class="bash"> 忽略IP，注意加上自己的IP，不然被误封就麻烦了</span></span><br><span class="line">ignoreip = 127.0.0.1/8 192.168.0.0/24</span><br><span class="line">[jms-koko]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 直接所有协议drop包，覆盖上面的banaction</span></span><br><span class="line">action  = iptables-allports[protocol=all,blocktype=DROP]</span><br><span class="line">enabled = true</span><br><span class="line"><span class="meta">#</span><span class="bash"> filter指定刚才配置的自定义过滤器</span></span><br><span class="line">filter = jms-koko</span><br><span class="line"><span class="meta">#</span><span class="bash"> koko端口默认是2222</span></span><br><span class="line">port    = 2222</span><br><span class="line"><span class="meta">#</span><span class="bash"> koko的日志路径，请修改成自己的路径地址</span></span><br><span class="line">logpath = /opt/koko/data/logs/koko.log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大重试次数</span></span><br><span class="line">maxretry = 5</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止12小时，这里会覆盖上面default定义的bantime</span></span><br><span class="line">bantime = 43200</span><br></pre></td></tr></table></figure><h2 id="检查配置"><a href="#检查配置" class="headerlink" title="检查配置"></a>检查配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client -t</span><br></pre></td></tr></table></figure><ul><li>输出示例</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OK: configuration test is successful</span><br></pre></td></tr></table></figure><ul><li>可以通过加<code>-v</code>或者<code>-d</code>输出详细日志</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client -t -v</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client -t -d</span><br></pre></td></tr></table></figure><h2 id="启动fail2ban"><a href="#启动fail2ban" class="headerlink" title="启动fail2ban"></a>启动fail2ban</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now fail2ban.service</span><br></pre></td></tr></table></figure><h2 id="查看fail2ban的状态"><a href="#查看fail2ban的状态" class="headerlink" title="查看fail2ban的状态"></a>查看fail2ban的状态</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client status jms-koko</span><br></pre></td></tr></table></figure><ul><li>根据输出结果可以看到<code>172.105.86.202</code>已经被ban了</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Status for the jail: jms-koko</span><br><span class="line">|- Filter</span><br><span class="line">|  |- Currently failed:1</span><br><span class="line">|  |- Total failed:24</span><br><span class="line">|  `- File list:/opt/koko/data/logs/koko.log</span><br><span class="line">`- Actions</span><br><span class="line">   |- Currently banned:1</span><br><span class="line">   |- Total banned:1</span><br><span class="line">   `- Banned IP list:172.105.86.202</span><br></pre></td></tr></table></figure><h2 id="查看fail2ban日志"><a href="#查看fail2ban日志" class="headerlink" title="查看fail2ban日志"></a>查看fail2ban日志</h2><ul><li>/var/log/fail2ban.log</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">2020-08-30 20:25:33,924 fail2ban.server         [1346]: INFO    --------------------------------------------------</span><br><span class="line">2020-08-30 20:25:33,924 fail2ban.server         [1346]: INFO    Starting Fail2ban v0.11.1</span><br><span class="line">2020-08-30 20:25:33,924 fail2ban.observer       [1346]: INFO    Observer start...</span><br><span class="line">2020-08-30 20:25:33,931 fail2ban.database       [1346]: INFO    Connected to fail2ban persistent database '/var/lib/fail2ban/fail2ban.sqlite3'</span><br><span class="line">2020-08-30 20:25:33,933 fail2ban.database       [1346]: WARNING New database created. Version '4'</span><br><span class="line">2020-08-30 20:25:33,975 fail2ban.filter         [1346]: INFO      maxRetry: 5</span><br><span class="line">2020-08-30 20:25:33,975 fail2ban.filter         [1346]: INFO      encoding: UTF-8</span><br><span class="line">2020-08-30 20:25:33,976 fail2ban.filter         [1346]: INFO      findtime: 600</span><br><span class="line">2020-08-30 20:25:33,976 fail2ban.actions        [1346]: INFO      banTime: 1296000</span><br><span class="line">2020-08-30 20:25:33,976 fail2ban.jail           [1346]: INFO    Creating new jail 'jms-koko'</span><br><span class="line">2020-08-30 20:25:33,977 fail2ban.jail           [1346]: INFO    Jail 'jms-koko' uses poller &#123;&#125;</span><br><span class="line">2020-08-30 20:25:33,978 fail2ban.jail           [1346]: INFO    Initiated 'polling' backend</span><br><span class="line">2020-08-30 20:25:33,979 fail2ban.filter         [1346]: INFO      maxRetry: 5</span><br><span class="line">2020-08-30 20:25:33,980 fail2ban.filter         [1346]: INFO      encoding: UTF-8</span><br><span class="line">2020-08-30 20:25:33,980 fail2ban.filter         [1346]: INFO      findtime: 600</span><br><span class="line">2020-08-30 20:25:33,980 fail2ban.actions        [1346]: INFO      banTime: 43200</span><br><span class="line">2020-08-30 20:25:33,980 fail2ban.filter         [1346]: INFO    Added logfile: '/opt/koko/data/logs/koko.log' (pos = 0, hash = f52047cfc39a7880f2301858f7172d30)</span><br><span class="line">2020-08-30 20:25:33,987 fail2ban.jail           [1346]: INFO    Jail 'jms-koko' started</span><br><span class="line">2020-08-30 22:32:23,861 fail2ban.filter         [1346]: INFO    [jms-koko] Found 172.105.86.202 - 2020-08-30 22:32:23</span><br><span class="line">2020-08-30 22:33:17,912 fail2ban.filter         [1346]: INFO    [jms-koko] Found 172.105.86.202 - 2020-08-30 22:33:17</span><br><span class="line">2020-08-30 22:34:05,961 fail2ban.filter         [1346]: INFO    [jms-koko] Found 172.105.86.202 - 2020-08-30 22:34:05</span><br><span class="line">2020-08-30 22:34:58,023 fail2ban.filter         [1346]: INFO    [jms-koko] Found 172.105.86.202 - 2020-08-30 22:34:57</span><br><span class="line">2020-08-30 22:35:49,282 fail2ban.filter         [1346]: INFO    [jms-koko] Found 172.105.86.202 - 2020-08-30 22:35:49</span><br><span class="line">2020-08-30 22:35:49,374 fail2ban.actions        [1346]: NOTICE  [jms-koko] Ban 172.105.86.202</span><br><span class="line">....</span><br></pre></td></tr></table></figure><h2 id="查看防火墙规则"><a href="#查看防火墙规则" class="headerlink" title="查看防火墙规则"></a>查看防火墙规则</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -L -n -v</span><br></pre></td></tr></table></figure><ul><li>输出如下<ul><li>被ban的ip会提示端口不可达</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Chain INPUT (policy ACCEPT 779K packets, 71M bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line"> 8516  498K f2b-jms-koko  tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 2222</span><br><span class="line"></span><br><span class="line">&lt;此处忽略很多行&gt;</span><br><span class="line"></span><br><span class="line">Chain f2b-jms-koko (1 references)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line">   30  1800 REJECT     all  --  *      *       172.105.86.202       0.0.0.0/0            reject-with icmp-port-unreachable</span><br><span class="line"> 8461  495K RETURN     all  --  *      *       0.0.0.0/0            0.0.0.0/0</span><br></pre></td></tr></table></figure><h1 id="事前"><a href="#事前" class="headerlink" title="事前"></a>事前</h1><ul><li>根据截图可以看到同一个IP疯狂尝试登录</li></ul><p><img src="/2020/08/30/./使用fail2ban保护jumpserver不被暴力破解/事前.jpg" alt="事前"></p><h1 id="事后"><a href="#事后" class="headerlink" title="事后"></a>事后</h1><ul><li>一晚上功夫就新增了十几个被ban的ip</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Status for the jail: jms-koko</span><br><span class="line">|- Filter</span><br><span class="line">|  |- Currently failed:1</span><br><span class="line">|  |- Total failed:116</span><br><span class="line">|  `- File list:/opt/koko/data/logs/koko.log</span><br><span class="line">`- Actions</span><br><span class="line">   |- Currently banned:16</span><br><span class="line">   |- Total banned:20</span><br><span class="line">   `- Banned IP list:52.130.66.202 202.107.251.28 222.186.10.49 149.202.3.113 59.42.36.243 139.129.230.201 92.246.16.39 47.110.225.78 219.84.203.57 165.227.5.140 37.139.9.23 39.104.163.108 190.144.100.58 94.228.182.244 89.228.59.72 91.205.217.22</span><br></pre></td></tr></table></figure><ul><li>单个IP最多试5次就拜拜了</li></ul><p><img src="/2020/08/30/./使用fail2ban保护jumpserver不被暴力破解/事后.jpg" alt="事后"></p><h1 id="解封操作"><a href="#解封操作" class="headerlink" title="解封操作"></a>解封操作</h1><ul><li>说不准有时候会有倒霉蛋输错密码导致IP被ban，可以通过用<code>fail2ban-client</code>命令解封IP地址</li><li>JumpServer账号锁定的话要在JumpServer里面解锁账号</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client set jms-koko unbanip IP地址</span><br></pre></td></tr></table></figure><h1 id="docker环境配置"><a href="#docker环境配置" class="headerlink" title="docker环境配置"></a>docker环境配置</h1><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><ul><li>docker会创建两个chain，DOCKER和DOCKER-USE，并且会由这两个chain优先处理数据包</li><li>其中DOCKER由docker进程维护，DOCKER-USER由用户自己管理</li><li>默认情况下，通往容器的数据包不会经过fail2ban的chain处理</li><li>需要修改actionstart和actionstop，将fail2ban的chain插入到DOCKER-USER这个chain里面</li><li>这样数据包处理路径为 <font color="red">DOCKER-USER</font> ===&gt; <font color="red">f2b-jms-koko</font> ===&gt; <font color="red">DOCKER</font></li></ul><h2 id="添加action"><a href="#添加action" class="headerlink" title="添加action"></a>添加action</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fail2ban/actions.d/iptables-allports-with-docker.conf</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[INCLUDES]</span></span><br><span class="line"><span class="attr">before</span> = iptables-common.conf</span><br><span class="line"><span class="section">[Definition]</span></span><br><span class="line"><span class="attr">actionstart</span> = &lt;iptables&gt; -N f2b-&lt;name&gt;</span><br><span class="line">              &lt;iptables&gt; -A f2b-&lt;name&gt; -j &lt;returntype&gt;</span><br><span class="line">              &lt;iptables&gt; -I &lt;chain&gt; -p &lt;protocol&gt; -j f2b-&lt;name&gt;</span><br><span class="line">              &lt;iptables&gt; -t filter -I DOCKER-USER -p &lt;protocol&gt; -j f2b-&lt;name&gt;</span><br><span class="line"><span class="attr">actionstop</span> = &lt;iptables&gt; -D &lt;chain&gt; -p &lt;protocol&gt; -j f2b-&lt;name&gt;</span><br><span class="line">             &lt;iptables&gt; -t filter -D DOCKER-USER -p &lt;protocol&gt; -j f2b-&lt;name&gt;</span><br><span class="line">             &lt;actionflush&gt;</span><br><span class="line">             &lt;iptables&gt; -X f2b-&lt;name&gt;</span><br><span class="line"><span class="attr">actioncheck</span> = &lt;iptables&gt; -n -L &lt;chain&gt; | grep -q <span class="string">'f2b-&lt;name&gt;[ \t]'</span></span><br><span class="line">              &lt;iptables&gt; -t filter -n -L DOCKER-USER | grep -q 'f2b-&lt;name&gt;[ \t]'</span><br><span class="line"><span class="attr">actionban</span> = &lt;iptables&gt; -I f2b-&lt;name&gt; <span class="number">1</span> -s &lt;ip&gt; -j &lt;blocktype&gt;</span><br><span class="line"><span class="attr">actionunban</span> = &lt;iptables&gt; -D f2b-&lt;name&gt; -s &lt;ip&gt; -j &lt;blocktype&gt;</span><br><span class="line"><span class="section">[Init]</span></span><br></pre></td></tr></table></figure><h2 id="修改jail-local"><a href="#修改jail-local" class="headerlink" title="修改jail.local"></a>修改jail.local</h2><ul><li>把<code>action = iptables-allports</code> 改为 <code>iptables-allports-with-docker</code></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="comment"># 默认禁止IP地址15天，单位是秒:</span></span><br><span class="line"><span class="attr">bantime</span> = <span class="number">1296000</span></span><br><span class="line"><span class="comment"># ban的动作使用iptables-multiport</span></span><br><span class="line"><span class="attr">banaction</span> = iptables-multiport</span><br><span class="line"><span class="comment"># 忽略IP，注意加上自己的IP，不然被误封就麻烦了</span></span><br><span class="line"><span class="attr">ignoreip</span> = <span class="number">127.0</span>.<span class="number">0.1</span>/<span class="number">8</span> <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span></span><br><span class="line"><span class="section">[jms-koko]</span></span><br><span class="line"><span class="comment"># 直接所有协议drop包，覆盖上面的banaction</span></span><br><span class="line"><span class="attr">action</span>  = iptables-allports-with-docker[protocol=all,blocktype=DROP]</span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># filter指定刚才配置的自定义过滤器</span></span><br><span class="line"><span class="attr">filter</span> = jms-koko</span><br><span class="line"><span class="comment"># koko端口默认是2222</span></span><br><span class="line"><span class="attr">port</span>    = <span class="number">2222</span></span><br><span class="line"><span class="comment"># koko的日志路径，请修改成自己的路径地址</span></span><br><span class="line"><span class="attr">logpath</span> = /opt/koko/data/logs/koko.log</span><br><span class="line"><span class="comment"># 最大重试次数</span></span><br><span class="line"><span class="attr">maxretry</span> = <span class="number">5</span></span><br><span class="line"><span class="comment"># 禁止12小时，这里会覆盖上面default定义的bantime</span></span><br><span class="line"><span class="attr">bantime</span> = <span class="number">43200</span></span><br></pre></td></tr></table></figure><h2 id="重启fail2ban服务"><a href="#重启fail2ban服务" class="headerlink" title="重启fail2ban服务"></a>重启fail2ban服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart fail2ban.service</span><br></pre></td></tr></table></figure><h2 id="查看防火墙规则-1"><a href="#查看防火墙规则-1" class="headerlink" title="查看防火墙规则"></a>查看防火墙规则</h2><ul><li>f2b-jms-koko链</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -n -v -L f2b-jms-koko</span><br><span class="line"></span><br><span class="line">Chain f2b-jms-koko (2 references)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination         </span><br><span class="line">    0     0 DROP       all  --  *      *       46.249.32.138        0.0.0.0/0           </span><br><span class="line">    0     0 DROP       all  --  *      *       39.98.132.227        0.0.0.0/0           </span><br><span class="line">    0     0 DROP       all  --  *      *       39.108.215.9         0.0.0.0/0           </span><br><span class="line">    0     0 DROP       all  --  *      *       39.106.119.140       0.0.0.0/0           </span><br><span class="line">    0     0 DROP       all  --  *      *       39.104.178.110       0.0.0.0/0           </span><br><span class="line">    0     0 DROP       all  --  *      *       222.186.57.205       0.0.0.0/0           </span><br><span class="line">    0     0 DROP       all  --  *      *       199.195.254.185      0.0.0.0/0           </span><br><span class="line">  313 26414 RETURN     all  --  *      *       0.0.0.0/0            0.0.0.0/0</span><br></pre></td></tr></table></figure><ul><li>DOCKER-USER链</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -n -v -L DOCKER-USER</span><br><span class="line"></span><br><span class="line">Chain DOCKER-USER (1 references)</span><br><span class="line">pkts   bytes        target        prot         opt  in  out  source     destination</span><br><span class="line">5166   672K         f2b-jms-koko  all          --   *   *    0.0.0.0/0  0.0.0.0/0</span><br><span class="line">38M    31G          RETURN        all          --   *   *    0.0.0.0/0  0.0.0.0/0</span><br></pre></td></tr></table></figure><h1 id="至此大功告成"><a href="#至此大功告成" class="headerlink" title="至此大功告成"></a>至此大功告成</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;操作系统&lt;code&gt;CentOS-7&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;jumpserver&lt;/code&gt;版本&lt;code&gt;
      
    
    </summary>
    
    
      <category term="jumpserver" scheme="https://luanlengli.github.io/tags/jumpserver/"/>
    
      <category term="fail2ban" scheme="https://luanlengli.github.io/tags/fail2ban/"/>
    
  </entry>
  
  <entry>
    <title>使用systemd托管Podman容器</title>
    <link href="https://luanlengli.github.io/2020/08/24/%E4%BD%BF%E7%94%A8systemd%E6%89%98%E7%AE%A1Podman%E5%AE%B9%E5%99%A8.html"/>
    <id>https://luanlengli.github.io/2020/08/24/使用systemd托管Podman容器.html</id>
    <published>2020-08-24T01:48:12.000Z</published>
    <updated>2020-08-24T02:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>一提到容器技术，肯定无法绕开 Docker，Docker 是一个著名的开源容器引擎，在容器技术已经在逐步普及的现在，Docker 几乎也成了容器的代名词。</li><li>作为目前主流的容器引擎，Docker 有着丰富的使用场景和解决方案，但也有一些问题。<ul><li>Docker 需要运行一个守护进程，所有容器都是守护进程的子进程<ul><li>即存在单点风险，Docker进程炸了，容器也炸了</li></ul></li><li>Docker 需要 <code>root</code> 身份运行守护进程</li></ul></li><li>按红帽文档里面的说法<ul><li>生产环境中，并不需要关注在命令行中运行容器，而是通过容器编排平台（Kubernetes/Openshift）来管理容器</li><li>作为容器引擎，最终用户不需要直接访问他们</li><li>Podman相比Docker引擎，只保留核心功能，无需守护进程</li></ul></li><li><code>RHEL/CentOS-8.0</code>不包含docker容器引擎（可以通过安装CentOS7的docker-ce），使用Podman、Buildah、Skopeo三剑客来替代docker容器引擎</li><li><code>RHEL/CentOS-7</code>官方源也有Podman三剑客的RPM包</li></ul><h1 id="Podman简易教程"><a href="#Podman简易教程" class="headerlink" title="Podman简易教程"></a>Podman简易教程</h1><h2 id="安装Podman"><a href="#安装Podman" class="headerlink" title="安装Podman"></a>安装Podman</h2><ul><li>For RHEL/CentOS-7.x</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y podman</span><br></pre></td></tr></table></figure><ul><li>For RHEL/CentOS-8.x</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install -y podman</span><br></pre></td></tr></table></figure><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">podman pull docker.io/library/nginx:1.18.0-alpine</span><br></pre></td></tr></table></figure><h2 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">podman run -d --name=nginx -p 80:80 -p 443:443 docker.io/library/nginx:1.18.0-alpine</span><br></pre></td></tr></table></figure><h2 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">podman ps</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID  IMAGE                                  COMMAND               CREATED        STATUS            PORTS               NAMES</span><br><span class="line">06e5f12549fd  docker.io/library/nginx:1.18.0-alpine  nginx -g daemon o...  5 seconds ago  Up 4 seconds ago  0.0.0.0:80-&gt;80/tcp  nginx</span><br></pre></td></tr></table></figure><h1 id="使用systemd托管Podman容器"><a href="#使用systemd托管Podman容器" class="headerlink" title="使用systemd托管Podman容器"></a>使用systemd托管Podman容器</h1><p>这里介绍两种方式</p><ul><li>自己写systemd unit文件</li><li>Podman根据现有容器创建systemd unit文件</li></ul><h2 id="手动创建systemd-unit文件"><a href="#手动创建systemd-unit文件" class="headerlink" title="手动创建systemd unit文件"></a>手动创建systemd unit文件</h2><ul><li>创建service文件<ul><li><code>--conmon-pidfile</code>指向conmon进程的进程ID</li><li><code>--cidfile</code>指向容器ID</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/podman-nginx.service &lt;&lt;EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> container-nginx.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Mon Aug 24 10:12:00 CST 2020</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Podman container-nginx.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStartPre=/usr/bin/rm -f /var/run/podman-nginx.pid /var/run/podman-nginx.cid</span><br><span class="line">ExecStart=/usr/bin/podman run \</span><br><span class="line">          --conmon-pidfile /var/run/podman-nginx.pid \</span><br><span class="line">          --cidfile /var/run/podman-nginx.cid \</span><br><span class="line">          --name nginx \</span><br><span class="line">          --rm \</span><br><span class="line">          -p 80:80 \</span><br><span class="line">          -p 443:443 \</span><br><span class="line">          docker.io/library/nginx:1.18.0-alpine</span><br><span class="line">ExecStop=/usr/bin/podman stop -t 10 nginx</span><br><span class="line">KillMode=none</span><br><span class="line">Type=simple</span><br><span class="line">PIDFile=/var/run/podman-nginx.pid</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>配置服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start podman-nginx.service</span><br></pre></td></tr></table></figure><ul><li>查看服务状态</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status podman-nginx.service</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">● podman-nginx.service - Podman container-nginx.service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/podman-nginx.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Mon 2020-08-24 10:31:13 CST; 5s ago</span><br><span class="line">  Process: 10723 ExecStartPre=/usr/bin/rm -f /var/run/podman-nginx.pid /var/run/podman-nginx.cid (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 10725 (podman)</span><br><span class="line">    Tasks: 10</span><br><span class="line">   Memory: 28.5M</span><br><span class="line">   CGroup: /system.slice/podman-nginx.service</span><br><span class="line">           └─10725 /usr/bin/podman run --conmon-pidfile /var/run/podman-nginx.pid --cidfile /var/run/podman-nginx.cid --name nginx --rm -p 80:80 -p 443:443 docker.io/library/nginx:1.18.0...</span><br><span class="line"></span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: 2020-08-24 10:31:13.508439319 +0800 CST m=+0.340313773 container init c4a71a54237bdbf0a051751a0888915f57a0f300cddd2f91444dc46c625c1f5... name=nginx)</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: 2020-08-24 10:31:13.524099452 +0800 CST m=+0.355973960 container start c4a71a54237bdbf0a051751a0888915f57a0f300cddd2f91444dc46c625c1f... name=nginx)</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: 2020-08-24 10:31:13.524229998 +0800 CST m=+0.356104468 container attach c4a71a54237bdbf0a051751a0888915f57a0f300cddd2f91444dc46c625c1... name=nginx)</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: 10-listen-on-ipv6-by-default.sh: Getting the checksum of /etc/nginx/conf.d/default.conf</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: 10-listen-on-ipv6-by-default.sh: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh</span><br><span class="line">Aug 24 10:31:13 localhost.localhost podman[10725]: /docker-entrypoint.sh: Configuration complete; ready for start up</span><br></pre></td></tr></table></figure><h2 id="使用Podman生成systemd-unit文件"><a href="#使用Podman生成systemd-unit文件" class="headerlink" title="使用Podman生成systemd unit文件"></a>使用Podman生成systemd unit文件</h2><blockquote><p>这里用上面运行的Nginx容器作为示例</p></blockquote><ul><li>创建service文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">podman generate systemd --name nginx | tee /usr/lib/systemd/system/podman-nginx.service</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> container-nginx.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> autogenerated by Podman 1.6.4</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Mon Aug 24 10:12:00 CST 2020</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Podman container-nginx.service</span><br><span class="line">Documentation=man:podman-generate-systemd(1)</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/bin/podman start nginx</span><br><span class="line">ExecStop=/usr/bin/podman stop -t 10 nginx</span><br><span class="line">KillMode=none</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/var/run/containers/storage/overlay-containers/bffcbc9a7ed4a7d2211a4a96ddeb34ddfda5e1062778679cc612e75fda87f97a/userdata/conmon.pid</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ul><li>配置systemd服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable podman-nginx.service</span><br></pre></td></tr></table></figure><ul><li>查看服务状态</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status podman-nginx.service</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">● podman-nginx.service - Podman container-nginx.service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/podman-nginx.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Mon 2020-08-24 10:16:50 CST; 9s ago</span><br><span class="line">     Docs: man:podman-generate-systemd(1)</span><br><span class="line">  Process: 9620 ExecStart=/usr/bin/podman start nginx (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 9752 (conmon)</span><br><span class="line">    Tasks: 0</span><br><span class="line">   Memory: 340.0K</span><br><span class="line">   CGroup: /system.slice/podman-nginx.service</span><br><span class="line">           ‣ 9752 /usr/bin/conmon --api-version 1 -s -c bffcbc9a7ed4a7d2211a4a96ddeb34ddfda5e1062778679cc612e75fda87f97a -u bffcbc9a7ed4a7d2211a4a96ddeb34ddfda5e1062778679cc612e75fda87f9...</span><br><span class="line"></span><br><span class="line">Aug 24 10:16:49 localhost.localhost systemd[1]: Starting Podman container-nginx.service...</span><br><span class="line">Aug 24 10:16:50 localhost.localhost podman[9620]: 2020-08-24 10:16:50.325501293 +0800 CST m=+0.305787189 container init bffcbc9a7ed4a7d2211a4a96ddeb34ddfda5e1062778679cc612e75fda87f97a... name=nginx)</span><br><span class="line">Aug 24 10:16:50 localhost.localhost podman[9620]: nginx</span><br><span class="line">Aug 24 10:16:50 localhost.localhost systemd[1]: Started Podman container-nginx.service.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show in full.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;一提到容器技术，肯定无法绕开 Docker，Docker 是一个著名的开源容器引擎，在容器技术已经在逐步普及的现在，Docker 
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://luanlengli.github.io/tags/Docker/"/>
    
      <category term="Podman" scheme="https://luanlengli.github.io/tags/Podman/"/>
    
  </entry>
  
  <entry>
    <title>容器化部署Jenkins</title>
    <link href="https://luanlengli.github.io/2020/08/19/%E5%9F%BA%E4%BA%8E%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2Jenkins.html"/>
    <id>https://luanlengli.github.io/2020/08/19/基于容器化部署Jenkins.html</id>
    <published>2020-08-19T05:17:14.000Z</published>
    <updated>2020-09-12T12:43:28.255Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>基于容器来快速部署Jenkins</li><li>jenkins版本使用LTS</li><li>jenkins版本说明<ul><li>LTS（长期支持）：每12周从常规版本流中选择，作为该时间段的稳定版本。 每隔 4 周，我们会发布稳定版本，其中包括错误和安全修复反向移植。</li><li>Weekly（定期发布）：每周都会发布一个新版本，为用户和插件开发人员提供错误修复和功能。</li></ul></li><li>jenkins官方镜像默认不带任何插件，启动的时候设置向导默认会下载最新的，可能跟LTS版本不兼容</li><li>jenkins插件配置方法<font color="red">仅限于当前时间点，后面有变更可能会不适用</font></li><li>由于需要使用宿主机的Docker程序，因此容器运行的用户设置为root</li><li>通过传入<code>JAVA_OPTS</code>和<code>JENKINS_OPTS</code>设置以下内容<ul><li>跳过初始化启动时的设置向导，跳过设置向导的话，jenkins会关闭安全功能，匿名用户可以做任何事，建议部署后打开安全功能</li><li>修改默认<code>update.json</code>地址</li><li>监听地址和监听端口</li></ul></li></ul><h1 id="列出jenkins已安装的插件"><a href="#列出jenkins已安装的插件" class="headerlink" title="列出jenkins已安装的插件"></a>列出jenkins已安装的插件</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Jenkins.instance.pluginManager.plugins.each&#123;</span><br><span class="line">  plugin -&gt; </span><br><span class="line">    println (<span class="string">"$&#123;plugin.getShortName()&#125;:$&#123;plugin.getVersion()&#125;"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="install-plugins-sh脚本说明"><a href="#install-plugins-sh脚本说明" class="headerlink" title="install-plugins.sh脚本说明"></a>install-plugins.sh脚本说明</h1><ul><li><p>借助jenkins官方容器内置的<a href="https://raw.githubusercontent.com/jenkinsci/docker/master/install-plugins.sh" target="_blank" rel="noopener">install-plugins.sh</a>和<a href="https://raw.githubusercontent.com/jenkinsci/docker/master/jenkins-support" target="_blank" rel="noopener">jenkins-support</a>脚本下载插件，并且自动处理依赖</p></li><li><p>脚本内置的环境变量支持</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Environment variables:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> REF: directory with preinstalled plugins. Default: /usr/share/jenkins/ref/plugins</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> JENKINS_WAR: full path to the jenkins.war. Default: /usr/share/jenkins/jenkins.war</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> JENKINS_UC: url of the Update Center. Default: <span class="string">""</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> JENKINS_UC_EXPERIMENTAL: url of the Experimental Update Center <span class="keyword">for</span> experimental versions of plugins. Default: <span class="string">""</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> JENKINS_INCREMENTALS_REPO_MIRROR: url of the incrementals repo mirror. Default: <span class="string">""</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> JENKINS_UC_DOWNLOAD: download url of the Update Center. Default: JENKINS_UC/download</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CURL_OPTIONS When downloading the plugins with curl. Curl options. Default: -sSfL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CURL_CONNECTION_TIMEOUT When downloading the plugins with curl. &lt;seconds&gt; Maximum time allowed <span class="keyword">for</span> connection. Default: 20</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CURL_RETRY When downloading the plugins with curl. Retry request <span class="keyword">if</span> transient problems occur. Default: 3</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CURL_RETRY_DELAY When downloading the plugins with curl. &lt;seconds&gt; Wait time between retries. Default: 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CURL_RETRY_MAX_TIME When downloading the plugins with curl. &lt;seconds&gt; Retry only within this period. Default: 60</span></span><br></pre></td></tr></table></figure><ul><li>这里基本只需要声明<code>JENKINS_UC</code>和<code>JENKINS_UC_DOWNLOAD</code>这两个环境变量即可</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JENKINS_UC='https://mirrors.huaweicloud.com' \</span><br><span class="line">       JENKINS_UC_DOWNLOAD='https://mirrors.huaweicloud.com/jenkins'</span><br></pre></td></tr></table></figure><ul><li>如果是用来覆盖当前环境的jenkins插件，可以声明<code>REF</code>变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export REF="$&#123;JENKINS_HOME&#125;"</span><br></pre></td></tr></table></figure><ul><li>然后就是安装插件了</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install-plugins.sh localization-zh-cn:1.0.17 git:latest</span><br></pre></td></tr></table></figure><h1 id="创建容器镜像"><a href="#创建容器镜像" class="headerlink" title="创建容器镜像"></a>创建容器镜像</h1><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><ul><li>指定环境变量，指向jenkins国内镜像源（这里用的华为云）</li><li>关于插件安装脚本说明，请看<a href="https://github.com/jenkinsci/docker/blob/master/README.md#Preinstalling%20plugins" target="_blank" rel="noopener">Preinstalling plugins</a></li><li>这里演示安装jenkins中文社区的插件和git插件</li><li>下载的插件会默认放在<code>/usr/share/jenkins/ref/plugins</code></li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> jenkins/jenkins:lts</span><br><span class="line"><span class="keyword">ENV</span> \</span><br><span class="line">    JENKINS_UC=<span class="string">'https://mirrors.huaweicloud.com'</span> \</span><br><span class="line">    JENKINS_UC_DOWNLOAD=<span class="string">'https://mirrors.huaweicloud.com/jenkins'</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> \</span></span><br><span class="line"><span class="bash">    /usr/<span class="built_in">local</span>/bin/install-plugins.sh \</span></span><br><span class="line"><span class="bash">    localization-zh-cn:1.0.17 \</span></span><br><span class="line"><span class="bash">    git:latest</span></span><br></pre></td></tr></table></figure><h2 id="构建容器"><a href="#构建容器" class="headerlink" title="构建容器"></a>构建容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build --force-rm --no-cache -t jenkins:lts-with-plugins .</span><br></pre></td></tr></table></figure><h1 id="容器化部署jenkins"><a href="#容器化部署jenkins" class="headerlink" title="容器化部署jenkins"></a>容器化部署jenkins</h1><h2 id="Docker启动"><a href="#Docker启动" class="headerlink" title="Docker启动"></a>Docker启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">       -d \</span><br><span class="line">       --user=root \</span><br><span class="line">       --name=jenkins \</span><br><span class="line">       -e TZ='Asia/Shanghai' \</span><br><span class="line">       -e JAVA_OPTS='-Djenkins.install.runSetupWizard=false -Duser.timezone=Asia/Shanghai -Dhudson.model.UpdateCenter.updateCenterUrl="https://mirrors.huaweicloud.com/jenkins/updates/" -Dhudson.Functions.autoRefreshSeconds=10 -Dhudson.model.DownloadService.noSignatureCheck=false' \</span><br><span class="line">       -e JENKINS_OPTS='--prefix=/ --sessionTimeout=60 --httpPort=8080 --httpListenAddress=0.0.0.0'</span><br><span class="line">       -e JENKINS_UC='https://mirrors.huaweicloud.com/jenkins' \</span><br><span class="line">       -e JENKINS_UC_DOWNLOAD='https://mirrors.huaweicloud.com/jenkins' \</span><br><span class="line">       -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">       -v /opt/jenkins-home/:/var/jenkins_home \</span><br><span class="line">       -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">       -v /usr/bin/docker:/usr/local/bin/docker \</span><br><span class="line">       -v /usr/lib64/libltdl.so.7:/usr/lib/libltdl.so.7 、</span><br><span class="line">       -p 8080:8080 \</span><br><span class="line">       -p 50000:50000 \</span><br><span class="line">       --privileged \</span><br><span class="line">       jenkins:lts-with-plugins</span><br></pre></td></tr></table></figure><h2 id="docker-compose启动"><a href="#docker-compose启动" class="headerlink" title="docker-compose启动"></a>docker-compose启动</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jenkins:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">jenkins:lts-with-plugins</span></span><br><span class="line"><span class="attr">  container_name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    TZ:</span> <span class="string">'Asia/Shanghai'</span></span><br><span class="line"><span class="attr">    JAVA_OPTS:</span> <span class="string">'-Djenkins.install.runSetupWizard=false -Duser.timezone=Asia/Shanghai -Dhudson.model.UpdateCenter.updateCenterUrl="https://mirrors.huaweicloud.com/jenkins/updates/" -Dhudson.Functions.autoRefreshSeconds=10 -Dhudson.model.DownloadService.noSignatureCheck=false'</span></span><br><span class="line"><span class="attr">    JENKINS_OPTS:</span> <span class="string">'--prefix=/ --sessionTimeout=60 --httpPort=8080 --httpListenAddress=0.0.0.0'</span></span><br><span class="line"><span class="attr">    JENKINS_UC:</span> <span class="string">'https://mirrors.huaweicloud.com/jenkins'</span></span><br><span class="line"><span class="attr">    JENKINS_UC_DOWNLOAD:</span> <span class="string">'https://mirrors.huaweicloud.com/jenkins'</span></span><br><span class="line"><span class="attr">  privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">50000</span><span class="string">:50000</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'/etc/localtime:/etc/localtime'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'/opt/jenkins-home/:/var/jenkins_home'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'/var/run/docker.sock:/var/run/docker.sock'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'/usr/bin/docker:/usr/local/bin/docker'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'/usr/lib64/libltdl.so.7:/usr/lib/libltdl.so.7'</span></span><br></pre></td></tr></table></figure><h2 id="修改jenkins插件地址"><a href="#修改jenkins插件地址" class="headerlink" title="修改jenkins插件地址"></a>修改jenkins插件地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's#http://updates.jenkins-ci.org/download#https://mirrors.huaweicloud.com/jenkins#g' \</span><br><span class="line">    -e 's#https://www.google.com#https://www.baidu.com#g' \</span><br><span class="line">    -i $&#123;JENKINS_HOME&#125;/updates/default.json</span><br></pre></td></tr></table></figure><h1 id="部署到K8S"><a href="#部署到K8S" class="headerlink" title="部署到K8S"></a>部署到K8S</h1><ul><li>这里不用Helm部署，Helm部署的另起一文</li><li><p>调用阿里云的高效云盘作为数据盘</p></li><li><p>YAML文件如下</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins-master-data</span><br><span class="line">  namespace: jenkins</span><br><span class="line">  labels:</span><br><span class="line">    app: jenkins</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">  - "ReadWriteOnce"</span><br><span class="line">  storageClassName: alicloud-disk-efficiency</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: "100Gi"</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins-master</span><br><span class="line">  namespace: jenkins</span><br><span class="line">  labels:</span><br><span class="line">    app: jenkins-master</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: jenkins-master</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: jenkins-master</span><br><span class="line">    spec:      </span><br><span class="line">      containers:</span><br><span class="line">      - name: jenkins</span><br><span class="line">        image: jenkins/jenkins:2.235.4-lts</span><br><span class="line">        imagePullPolicy: "IfNotPresent"</span><br><span class="line">        env:</span><br><span class="line">        - name: TZ</span><br><span class="line">          value: 'Asia/Shanghai'</span><br><span class="line">        - name: JAVA_OPTS</span><br><span class="line">          value: '-Djenkins.install.runSetupWizard=false -Duser.timezone=Asia/Shanghai -Dhudson.model.UpdateCenter.updateCenterUrl="https://mirrors.huaweicloud.com/jenkins/updates/" -Dhudson.Functions.autoRefreshSeconds=10 -Dhudson.model.DownloadService.noSignatureCheck=false'</span><br><span class="line">        - name: JENKINS_OPTS</span><br><span class="line">          value: '--prefix=/ --sessionTimeout=60 --httpPort=8080 --httpListenAddress=0.0.0.0'</span><br><span class="line">        - name: JENKINS_UC</span><br><span class="line">          value: 'https://mirrors.huaweicloud.com/jenkins'</span><br><span class="line">        - name: JENKINS_UC_DOWNLOAD</span><br><span class="line">          value: 'https://mirrors.huaweicloud.com/jenkins'</span><br><span class="line">        ports:</span><br><span class="line">        - name: http</span><br><span class="line">          containerPort: 8080</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /login</span><br><span class="line">            port: http</span><br><span class="line">          initialDelaySeconds: 180</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 6</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /login</span><br><span class="line">            port: http</span><br><span class="line">          initialDelaySeconds: 30</span><br><span class="line">          periodSeconds: 5</span><br><span class="line">          timeoutSeconds: 3</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 500m</span><br><span class="line">            memory: 1Gi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 300m</span><br><span class="line">            memory: 512Mi</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: jenkins-data</span><br><span class="line">          mountPath: /var/jenkins_home</span><br><span class="line">      volumes:</span><br><span class="line">      - name: jenkins-master-data</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: jenkins-master-data</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: jenkins-master</span><br><span class="line">  labels:</span><br><span class="line">    app: jenkins</span><br><span class="line">spec:</span><br><span class="line">  type: ClusterIP</span><br><span class="line">  ports:</span><br><span class="line">    - name: http</span><br><span class="line">      port: 8080</span><br><span class="line">      targetPort: http</span><br><span class="line">  selector:</span><br><span class="line">    app: jenkins-master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;基于容器来快速部署Jenkins&lt;/li&gt;&lt;li&gt;jenkins版本使用LTS&lt;/li&gt;&lt;li&gt;jenkins版本说明&lt;ul&gt;&lt;l
      
    
    </summary>
    
      <category term="jenkins" scheme="https://luanlengli.github.io/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://luanlengli.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>基于K8S的GitLab自动定时备份</title>
    <link href="https://luanlengli.github.io/2020/08/11/%E5%9F%BA%E4%BA%8EK8S%E7%9A%84GitLab%E8%87%AA%E5%8A%A8%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"/>
    <id>https://luanlengli.github.io/2020/08/11/基于K8S的GitLab自动定时备份.html</id>
    <published>2020-08-11T13:09:55.000Z</published>
    <updated>2020-08-12T00:06:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>参考官方文档 <a href="https://docs.gitlab.com/ce/raketasks/backup_restore.html#back-up-gitlab" target="_blank" rel="noopener">Back up and restore GitLab</a></li><li>使用<a href="https://hub.docker.com/r/gitlab/gitlab-ce/" target="_blank" rel="noopener">Gitlab-CE镜像</a>部署到K8S，Gitlab版本<code>12.1.3-ce.0</code></li><li>传统部署是使用<code>Omnibus</code>方式安装Gitlab，一般通过<code>crontab+shell脚本</code>的方式定期备份Gitlab</li><li>在K8S环境下，没法这么做，于是想到用<code>CronJob</code>调用<code>kubectl</code>执行容器内部命令的方式备份Gitlab</li></ul><h1 id="准备RBAC"><a href="#准备RBAC" class="headerlink" title="准备RBAC"></a>准备RBAC</h1><h2 id="创建Role"><a href="#创建Role" class="headerlink" title="创建Role"></a>创建Role</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">gitlab</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">  resources:</span> <span class="string">["pods",</span> <span class="string">"pods/log"</span><span class="string">]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">]</span></span><br><span class="line"><span class="attr">- apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">  resources:</span> <span class="string">["pods/exec"]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["create"]</span></span><br></pre></td></tr></table></figure><h2 id="创建ServiceAccount"><a href="#创建ServiceAccount" class="headerlink" title="创建ServiceAccount"></a>创建ServiceAccount</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">gitlab</span></span><br></pre></td></tr></table></figure><h2 id="创建RoleBinding"><a href="#创建RoleBinding" class="headerlink" title="创建RoleBinding"></a>创建RoleBinding</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">gitlab</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">gitlab</span></span><br></pre></td></tr></table></figure><h1 id="创建ConfigMap"><a href="#创建ConfigMap" class="headerlink" title="创建ConfigMap"></a>创建ConfigMap</h1><blockquote><p>这里用来设置时区<code>Asia/Shanghai</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">timezone</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">gitlab</span></span><br><span class="line"><span class="attr">binaryData:</span></span><br><span class="line"><span class="attr">  Shanghai:</span> <span class="string">VFppZjIAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAAAAAAcAAAAAgAAAAigl6KAoXkE8MhZXoDJCflwydO9AMsFivDLfEAA0js+8NOLe4DUQq3w1UUiANZMv/DXPL8A2AZmcNkd8oDZQXzwHrpSIB9pm5AgfoSgIUl9kCJnoSAjKV+QJEeDICUSfBAmJ2UgJvJeECgHRyAo0kAQAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAAfpABAAAAcIAABENEVABDU1QAAAAAAFRaaWYyAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAHQAAAAMAAAAM/////342Qyn/////oJeigP////+heQTw/////8hZXoD/////yQn5cP/////J070A/////8sFivD/////y3xAAP/////SOz7w/////9OLe4D/////1EKt8P/////VRSIA/////9ZMv/D/////1zy/AP/////YBmZw/////9kd8oD/////2UF88AAAAAAeulIgAAAAAB9pm5AAAAAAIH6EoAAAAAAhSX2QAAAAACJnoSAAAAAAIylfkAAAAAAkR4MgAAAAACUSfBAAAAAAJidlIAAAAAAm8l4QAAAAACgHRyAAAAAAKNJAEAIBAgECAQIBAgECAQIBAgECAQIBAgECAQIBAgECAABx1wAAAAB+kAEEAABwgAAITE1UAENEVABDU1QAAAAAAAAACkNTVC04Cg==</span></span><br></pre></td></tr></table></figure><h1 id="创建CronJob"><a href="#创建CronJob" class="headerlink" title="创建CronJob"></a>创建CronJob</h1><ul><li>kubectl没有官方镜像，需要自己构建</li><li>每天1点0分启动任务</li><li>根据标签<code>app=gitlab</code>过滤出需要的Pod名字</li><li>调用kubectl执行命令</li><li>备份默认存放在<code>/var/opt/gitlab/backups</code>，因此最好将此目录挂载到外部存储，避免备份丢失！</li><li>Gitlab备份命令不包含<code>/etc/gitlab/</code>目录，因此需要手工备份，这里就不展示了</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CronJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gitlab-backup-schedule</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">gitlab</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  schedule:</span> <span class="string">"0 1 * * *"</span></span><br><span class="line"><span class="attr">  failedJobsHistoryLimit:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  concurrencyPolicy:</span> <span class="string">Forbid</span></span><br><span class="line"><span class="attr">  successfulJobsHistoryLimit:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  suspend:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  jobTemplate:</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      template:</span></span><br><span class="line"><span class="attr">        spec:</span></span><br><span class="line"><span class="attr">          serviceAccount:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">          serviceAccountName:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">          dnsConfig:</span></span><br><span class="line"><span class="attr">            options:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">single-request-reopen</span></span><br><span class="line"><span class="attr">          containers:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">gitlab-backup</span></span><br><span class="line"><span class="attr">            image:</span> <span class="attr">kubectl:v1.14.8</span></span><br><span class="line"><span class="attr">            command:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/bin/sh</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">-c</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">|-</span></span><br><span class="line">              <span class="comment">#!/bin/bash</span></span><br><span class="line">              <span class="comment"># For More Information, https://docs.gitlab.com/ce/raketasks/backup_restore.html#back-up-gitlab</span></span><br><span class="line">              <span class="comment"># For GitLab 12.1 and earlier, use `gitlab-rake gitlab:backup:create`</span></span><br><span class="line">              <span class="comment"># For later, use `gitlab-backup create`</span></span><br><span class="line">              <span class="string">echo</span> <span class="string">"======Start Backup GitLab======"</span></span><br><span class="line">              <span class="string">POD_NAME=$(kubectl</span> <span class="bullet">-n</span> <span class="string">gitlab</span> <span class="string">get</span> <span class="string">pods</span> <span class="bullet">-l</span> <span class="string">app=gitlab</span> <span class="bullet">-o</span> <span class="string">jsonpath='&#123;.items[*].metadata.name&#125;')</span></span><br><span class="line">              <span class="string">kubectl</span> <span class="bullet">-n</span> <span class="string">gitlab</span> <span class="string">exec</span> <span class="string">$&#123;POD_NAME&#125;</span> <span class="bullet">--</span> <span class="string">gitlab-rake</span> <span class="attr">gitlab:backup:create</span></span><br><span class="line">              <span class="string">echo</span> <span class="string">"======End Backup GitLab======"</span></span><br><span class="line">              <span class="string">echo</span> <span class="string">"======Clean Expired Backup======"</span></span><br><span class="line">              <span class="comment"># find files which modified before 15 days ago and delete its</span></span><br><span class="line">              <span class="string">kubectl</span> <span class="bullet">-n</span> <span class="string">gitlab</span> <span class="string">exec</span> <span class="string">$&#123;POD_NAME&#125;</span> <span class="bullet">--</span> <span class="string">find</span> <span class="string">/var/opt/gitlab/backups</span> <span class="bullet">-name</span> <span class="meta">*tar</span> <span class="bullet">-mtime</span> <span class="string">+15</span> <span class="bullet">-exec</span> <span class="string">ls</span> <span class="string">&#123;&#125;</span> <span class="string">\;</span></span><br><span class="line">              <span class="string">kubectl</span> <span class="bullet">-n</span> <span class="string">gitlab</span> <span class="string">exec</span> <span class="string">$&#123;POD_NAME&#125;</span> <span class="bullet">--</span> <span class="string">find</span> <span class="string">/var/opt/gitlab/backups</span> <span class="bullet">-name</span> <span class="meta">*tar</span> <span class="bullet">-mtime</span> <span class="string">+15</span> <span class="bullet">-exec</span> <span class="string">rm</span> <span class="bullet">-f</span> <span class="string">&#123;&#125;</span> <span class="string">\;</span></span><br><span class="line"><span class="attr">            volumeMounts:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">timezone</span></span><br><span class="line"><span class="attr">              mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line"><span class="attr">              subPath:</span> <span class="string">Shanghai</span></span><br><span class="line"><span class="attr">          volumes:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">timezone</span></span><br><span class="line"><span class="attr">            configMap:</span></span><br><span class="line"><span class="attr">              name:</span> <span class="string">timezone</span></span><br><span class="line"><span class="attr">          restartPolicy:</span> <span class="string">OnFailure</span></span><br><span class="line"><span class="attr">          dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line"><span class="attr">          securityContext:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">          terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br></pre></td></tr></table></figure><h1 id="验证备份"><a href="#验证备份" class="headerlink" title="验证备份"></a>验证备份</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">======Start Backup GitLab======</span><br><span class="line">2020-08-11 13:24:30 +0000 -- Dumping database ...</span><br><span class="line">Dumping PostgreSQL database gitlabhq_production ... [DONE]</span><br><span class="line">2020-08-11 13:24:40 +0000 -- done</span><br><span class="line">2020-08-11 13:24:40 +0000 -- Dumping repositories ...</span><br><span class="line">* xxxxxx/yyyyyy (@hashed/45/23/4523540f1504cd17100c4835e85b7eefd49911580f8efff0599a8f283be6b9e3) ... [DONE]</span><br><span class="line">[SKIPPED] Wiki</span><br><span class="line">* xxxxxx/yyyyyy (@hashed/45/23/4523540f1504cd17100c4835e85b7eefd49911580f8efff0599a8f283be6b9e3) ... [DONE]</span><br><span class="line">[SKIPPED] Wiki</span><br><span class="line"> * xxxxxx/yyyyyy (@hashed/45/23/4523540f1504cd17100c4835e85b7eefd49911580f8efff0599a8f283be6b9e3) ... [DONE]</span><br><span class="line">2020-08-11 13:30:05 +0000 -- done</span><br><span class="line">2020-08-11 13:30:05 +0000 -- Dumping uploads ...</span><br><span class="line">2020-08-11 13:30:06 +0000 -- done</span><br><span class="line">2020-08-11 13:30:06 +0000 -- Dumping builds ...</span><br><span class="line">2020-08-11 13:30:06 +0000 -- done</span><br><span class="line">2020-08-11 13:30:06 +0000 -- Dumping artifacts ...</span><br><span class="line">2020-08-11 13:30:06 +0000 -- done</span><br><span class="line">2020-08-11 13:30:06 +0000 -- Dumping pages ...</span><br><span class="line">2020-08-11 13:30:06 +0000 -- done</span><br><span class="line">2020-08-11 13:30:06 +0000 -- Dumping lfs objects ...</span><br><span class="line">2020-08-11 13:30:06 +0000 -- done</span><br><span class="line">2020-08-11 13:30:06 +0000 -- Dumping container registry images ...</span><br><span class="line">2020-08-11 13:30:06 +0000 -- [DISABLED]</span><br><span class="line">Creating backup archive: 1597152606_2020_08_11_12.1.3_gitlab_backup.tar ... done</span><br><span class="line">Uploading backup archive to remote storage  ... skipped</span><br><span class="line">Deleting tmp directories ... done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">Deleting old backups ... skipping</span><br><span class="line">Warning: Your gitlab.rb and gitlab-secrets.json files contain sensitive data</span><br><span class="line">and are not included in this backup. You will need these files to restore a backup.</span><br><span class="line">Please back them up manually.</span><br><span class="line">Backup task is done.</span><br><span class="line">======End Backup GitLab======</span><br><span class="line">======Clean Expired Backup======</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;参考官方文档 &lt;a href=&quot;https://docs.gitlab.com/ce/raketasks/backup_resto
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Kubernetes/"/>
    
      <category term="Gitlab" scheme="https://luanlengli.github.io/categories/Kubernetes/Gitlab/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
      <category term="Gitlab" scheme="https://luanlengli.github.io/tags/Gitlab/"/>
    
  </entry>
  
  <entry>
    <title>使用WinSW将CoreDNS托管到Windows系统服务</title>
    <link href="https://luanlengli.github.io/2020/07/14/%E4%BD%BF%E7%94%A8WinSW%E5%B0%86CoreDNS%E6%89%98%E7%AE%A1%E5%88%B0Windows%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.html"/>
    <id>https://luanlengli.github.io/2020/07/14/使用WinSW将CoreDNS托管到Windows系统服务.html</id>
    <published>2020-07-14T01:44:52.000Z</published>
    <updated>2020-07-14T07:08:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>将一个简单的exe可执行文件，作为Windows服务启动，不需要登录用户</li><li>以CoreDNS为例做个说明<ul><li>CoreDNS通过Windows自带的sc命令创建服务，启动会失败</li><li>启动CoreDNS是一个命令提示符窗口</li><li>只有单一exe可执行文件和一个配置文件</li></ul></li></ul><h1 id="CoreDNS"><a href="#CoreDNS" class="headerlink" title="CoreDNS"></a>CoreDNS</h1><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/coredns/coredns" target="_blank" rel="noopener">https://github.com/coredns/coredns</a></p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://github.com/coredns/coredns/releases/download/v1.7.0/coredns_1.7.0_windows_amd64.tgz" target="_blank" rel="noopener">https://github.com/coredns/coredns/releases/download/v1.7.0/coredns_1.7.0_windows_amd64.tgz</a></p><h3 id="创建工作目录"><a href="#创建工作目录" class="headerlink" title="创建工作目录"></a>创建工作目录</h3><p><code>D:\Program Files\CoreDNS</code></p><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><p><code>D:\Program Files\CoreDNS\Corefile</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.:53 &#123;</span><br><span class="line">    errors</span><br><span class="line">    forward . 114.114.114.114:53</span><br><span class="line">    cache 30</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="WinSW"><a href="#WinSW" class="headerlink" title="WinSW"></a>WinSW</h1><h2 id="项目地址-1"><a href="#项目地址-1" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/winsw/winsw" target="_blank" rel="noopener">https://github.com/winsw/winsw</a></p><h2 id="下载地址-1"><a href="#下载地址-1" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://github.com/winsw/winsw/releases" target="_blank" rel="noopener">https://github.com/winsw/winsw/releases</a></p><h3 id="二进制文件"><a href="#二进制文件" class="headerlink" title="二进制文件"></a>二进制文件</h3><p>Windows7及之前的版本 下载 <a href="https://github.com/winsw/winsw/releases/download/v2.9.0/WinSW.NET2.exe" target="_blank" rel="noopener">WinSW.NET2.exe</a></p><p>Windows8及之后的版本 下载 <a href="https://github.com/winsw/winsw/releases/download/v2.9.0/WinSW.NET4.exe" target="_blank" rel="noopener">WinSW.NET4.exe</a></p><p>Windows10 下载 <a href="https://github.com/winsw/winsw/releases/download/v2.9.0/WinSW.NET461.exe" target="_blank" rel="noopener">WinSW.NET461.exe</a></p><h3 id="配置文件模板"><a href="#配置文件模板" class="headerlink" title="配置文件模板"></a>配置文件模板</h3><p><a href="https://github.com/winsw/winsw/releases/download/v2.9.0/sample-allOptions.xml" target="_blank" rel="noopener">sample-allOptions.xml</a></p><p><a href="https://github.com/winsw/winsw/releases/download/v2.9.0/sample-minimal.xml" target="_blank" rel="noopener">sample-minimal.xml</a></p><h1 id="配置Windows服务"><a href="#配置Windows服务" class="headerlink" title="配置Windows服务"></a>配置Windows服务</h1><h2 id="配置WinSW"><a href="#配置WinSW" class="headerlink" title="配置WinSW"></a>配置WinSW</h2><h3 id="拷贝winsw"><a href="#拷贝winsw" class="headerlink" title="拷贝winsw"></a>拷贝winsw</h3><p>将winsw可执行文件拷贝到CoreDNS的目录，并且重命名为<code>D:\Program Files\CoreDNS\CoreDNS-service.exe</code></p><h3 id="创建winsw配置"><a href="#创建winsw配置" class="headerlink" title="创建winsw配置"></a>创建winsw配置</h3><blockquote><p>更多的配置项可以参考<code>sample-allOptions.xml</code></p></blockquote><p><code>D:\Program Files\CoreDNS\CoreDNS-service.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>CoreDNS<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>CoreDNS Service (powered by WinSW)<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>This service is a CoreDNS service<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executable</span>&gt;</span>D:\Program Files\CoreDNS\coredns.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">workingdirectory</span>&gt;</span>D:\Program Files\CoreDNS\<span class="tag">&lt;/<span class="name">workingdirectory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">"restart"</span> <span class="attr">delay</span>=<span class="string">"10 sec"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">startmode</span>&gt;</span>Automatic<span class="tag">&lt;/<span class="name">startmode</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">log</span> <span class="attr">mode</span>=<span class="string">"reset"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置系统服务"><a href="#配置系统服务" class="headerlink" title="配置系统服务"></a>配置系统服务</h2><ul><li>以管理员模式打开命令行提示符</li><li>安装服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\CoreDNS\CoreDNS-service.exe install</span><br></pre></td></tr></table></figure><ul><li>启动服务</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\CoreDNS\CoreDNS-service.exe start</span><br></pre></td></tr></table></figure><ul><li>检查服务状态</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\CoreDNS\CoreDNS-service.exe status</span><br></pre></td></tr></table></figure><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><ul><li>重启操作系统</li><li>打开命令行提示符</li><li>输入<code>nslookup www.baidu.com 127.0.0.1</code>，返回以下内容即可</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">服务器:  localhost</span><br><span class="line">Address:  <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">非权威应答:</span><br><span class="line">名称:    www.a.shifen.com</span><br><span class="line">Addresses:  <span class="number">163.177</span>.<span class="number">151.109</span></span><br><span class="line">          <span class="number">163.177</span>.<span class="number">151.110</span></span><br><span class="line">Aliases:  www.baidu.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;将一个简单的exe可执行文件，作为Windows服务启动，不需要登录用户&lt;/li&gt;&lt;li&gt;以CoreDNS为例做个说明&lt;ul&gt;&lt;l
      
    
    </summary>
    
      <category term="Windows" scheme="https://luanlengli.github.io/categories/Windows/"/>
    
    
      <category term="Windows" scheme="https://luanlengli.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Jumpserver v2.0.1 安装实践【！！废弃！！】</title>
    <link href="https://luanlengli.github.io/2020/07/06/Jumpserver%20v2.0.1%20%E5%AE%89%E8%A3%85%E5%AE%9E%E8%B7%B5.html"/>
    <id>https://luanlengli.github.io/2020/07/06/Jumpserver v2.0.1 安装实践.html</id>
    <published>2020-07-06T14:15:11.000Z</published>
    <updated>2021-06-13T07:57:37.367Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><ul><li>操作系统版本：<code>CentOS-7.8.2003</code></li><li>JumpServer版本：<code>2.0.1</code></li><li>MySQL数据库版本：<code>5.7.30</code></li><li>Redis版本（CentOS7自带）：<code>3.2.12</code></li><li>Nginx版本（CentOS7自带）：<code>1.16.1</code></li></ul><h2 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h2><ul><li>单机部署</li><li>容器化<code>jumpserver</code>、<code>KoKo</code>、<code>Guacamol</code></li><li>MySQL数据库使用yum安装</li><li>Redis使用yum安装</li><li>Nginx使用yum安装，托管JumpServer前端静态资源<code>lina</code> ，通过websocket方式访问<code>luna</code></li></ul><h2 id="安全加固"><a href="#安全加固" class="headerlink" title="安全加固"></a>安全加固</h2><ul><li>强制HTTP跳转HTTPS</li><li>使用acme申请HTTPS证书，用于Nginx配置HTTPS</li><li>暴露公网，因此禁ping，降低被扫几率</li></ul><h1 id="操作系统环境准备"><a href="#操作系统环境准备" class="headerlink" title="操作系统环境准备"></a>操作系统环境准备</h1><h2 id="更新操作系统"><a href="#更新操作系统" class="headerlink" title="更新操作系统"></a>更新操作系统</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><h2 id="安装base包"><a href="#安装base包" class="headerlink" title="安装base包"></a>安装base包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groups install base -y</span><br></pre></td></tr></table></figure><h2 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nc \</span><br><span class="line">            git \</span><br><span class="line">            vim \</span><br><span class="line">            tree \</span><br><span class="line">            dstat \</span><br><span class="line">            iotop \</span><br><span class="line">            htop \</span><br><span class="line">            socat \</span><br><span class="line">            ipset \</span><br><span class="line">            conntrack \</span><br><span class="line">            bash-completion-extras \</span><br><span class="line">            tcpdump \</span><br><span class="line">            wireshark \</span><br><span class="line">            bcc-tools \</span><br><span class="line">            perf \</span><br><span class="line">            trace-cmd \</span><br><span class="line">            systemtap \</span><br><span class="line">            nethogs</span><br></pre></td></tr></table></figure><h2 id="配置禁ping"><a href="#配置禁ping" class="headerlink" title="配置禁ping"></a>配置禁ping</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/99-disable-icmp.conf &lt;&lt;EOF</span><br><span class="line">net.ipv4.icmp_echo_ignore_all=1</span><br><span class="line">net.ipv4.icmp_echo_ignore_broadcasts=1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装Docker-CE"><a href="#安装Docker-CE" class="headerlink" title="安装Docker-CE"></a>安装Docker-CE</h2><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum remove -y docker \</span><br><span class="line">              docker-client \</span><br><span class="line">              docker-client-latest \</span><br><span class="line">              docker-common \</span><br><span class="line">              docker-latest \</span><br><span class="line">              docker-latest-logrotate \</span><br><span class="line">              docker-logrotate \</span><br><span class="line">              docker-selinux \</span><br><span class="line">              docker-engine-selinux \</span><br><span class="line">              docker-engine</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h3 id="添加YUM源"><a href="#添加YUM源" class="headerlink" title="添加YUM源"></a>添加YUM源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="使用阿里云的YUM源"><a href="#使用阿里云的YUM源" class="headerlink" title="使用阿里云的YUM源"></a>使用阿里云的YUM源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's,https://download.docker.com,https://mirrors.aliyun.com/docker-ce,g' -i /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="安装Docker-CE-1"><a href="#安装Docker-CE-1" class="headerlink" title="安装Docker-CE"></a>安装Docker-CE</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce</span><br></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    "exec-opts": ["native.cgroupdriver=systemd"],</span><br><span class="line">    "registry-mirrors": ["https://pqbap4ya.mirror.aliyuncs.com"],</span><br><span class="line">    "insecure-registries": [],</span><br><span class="line">    "log-driver": "json-file",</span><br><span class="line">    "log-opts": &#123;</span><br><span class="line">        "max-size": "100m",</span><br><span class="line">        "max-file": "3"</span><br><span class="line">    &#125;,</span><br><span class="line">    "storage-driver": "overlay2",</span><br><span class="line">    "storage-opts": [</span><br><span class="line">        "overlay2.override_kernel_check=true"</span><br><span class="line">    ],</span><br><span class="line">    "data-root": "/var/lib/docker",</span><br><span class="line">    "max-concurrent-downloads": 10</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><h3 id="添加YUM源-1"><a href="#添加YUM源-1" class="headerlink" title="添加YUM源"></a>添加YUM源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="禁用MySQL-8-0源"><a href="#禁用MySQL-8-0源" class="headerlink" title="禁用MySQL-8.0源"></a>禁用MySQL-8.0源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --disable mysql80-community</span><br></pre></td></tr></table></figure><h3 id="启用MySQL-5-7源"><a href="#启用MySQL-5-7源" class="headerlink" title="启用MySQL-5.7源"></a>启用MySQL-5.7源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --enable mysql57-community</span><br></pre></td></tr></table></figure><h3 id="安装MySQL-5-7"><a href="#安装MySQL-5-7" class="headerlink" title="安装MySQL-5.7"></a>安装MySQL-5.7</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mysql-community-server-5.7.30-1.el7.x86_64 \</span><br><span class="line">               mysql-community-libs-5.7.30-1.el7.x86_64 \</span><br><span class="line">               mysql-community-libs-compat-5.7.30-1.el7.x86_64 \</span><br><span class="line">               mysql-community-client-5.7.30-1.el7.x86_64 \</span><br><span class="line">               mysql-community-common-5.7.30-1.el7.x86_64 \</span><br><span class="line">               mysql-community-devel-5.7.30-1.el7</span><br></pre></td></tr></table></figure><h3 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h3><ul><li>修改<code>/etc/my.cnf</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt="\u@JumpServerDB \R:\m:\s [\d]&gt; "</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">symbolic-links=0</span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">slow_query_log = 1</span><br><span class="line">slow_query_log_file = slow.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">skip_name_resolve = 1</span><br><span class="line">back_log = 1024</span><br><span class="line">max_connections = 512</span><br><span class="line">max_connect_errors = 1000000</span><br><span class="line">table_open_cache = 1024</span><br><span class="line">table_definition_cache = 1024</span><br><span class="line">table_open_cache_instances = 64</span><br><span class="line">thread_stack = 512K</span><br><span class="line">external-locking = FALSE</span><br><span class="line">max_allowed_packet = 32M</span><br><span class="line">sort_buffer_size = 16M</span><br><span class="line">join_buffer_size = 16M</span><br><span class="line">thread_cache_size = 768</span><br><span class="line">interactive_timeout = 600</span><br><span class="line">wait_timeout = 600</span><br><span class="line">tmp_table_size = 96M</span><br><span class="line">max_heap_table_size = 96M</span><br><span class="line">long_query_time = 0.1</span><br><span class="line">log_queries_not_using_indexes =1</span><br><span class="line">log_throttle_queries_not_using_indexes = 60</span><br><span class="line">min_examined_row_limit = 100</span><br><span class="line">log_slow_admin_statements = 1</span><br><span class="line">log_slow_slave_statements = 1</span><br><span class="line">server-id = 3306</span><br><span class="line">log-bin = binlog</span><br><span class="line">sync_binlog = 1</span><br><span class="line">binlog_cache_size = 4M</span><br><span class="line">max_binlog_cache_size = 1G</span><br><span class="line">max_binlog_size = 1G</span><br><span class="line">expire_logs_days = 3</span><br><span class="line">master_info_repository = TABLE</span><br><span class="line">relay_log_info_repository = TABLE</span><br><span class="line">gtid_mode = on</span><br><span class="line">enforce_gtid_consistency = 1</span><br><span class="line">binlog_format = row</span><br><span class="line">binlog_checksum = 1</span><br><span class="line">relay_log_recovery = 1</span><br><span class="line">relay-log-purge = 1</span><br><span class="line">key_buffer_size = 32M</span><br><span class="line">read_buffer_size = 8M</span><br><span class="line">read_rnd_buffer_size = 16M</span><br><span class="line">bulk_insert_buffer_size = 64M</span><br><span class="line">lock_wait_timeout = 3600</span><br><span class="line">explicit_defaults_for_timestamp = 1</span><br><span class="line">transaction_isolation = REPEATABLE-READ</span><br><span class="line"><span class="meta">#</span><span class="bash">innodb_additional_mem_pool_size = 16M</span></span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line"></span><br><span class="line">[mysqld_multi]</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 32M</span><br></pre></td></tr></table></figure><h3 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld.service</span><br></pre></td></tr></table></figure><h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysqld.service</span><br></pre></td></tr></table></figure><h3 id="获取数据库root密码"><a href="#获取数据库root密码" class="headerlink" title="获取数据库root密码"></a>获取数据库root密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep 'temporary password' /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h3 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h3><ul><li>这里使用上面获取的root密码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><h3 id="添加数据库和用户"><a href="#添加数据库和用户" class="headerlink" title="添加数据库和用户"></a>添加数据库和用户</h3><ul><li>这里根据JumpServer的要求创建</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE jumpserver DEFAULT CHARSET &apos;utf8&apos; COLLATE &apos;utf8_bin&apos;;</span><br><span class="line">GRANT ALL PRIVILEGES ON jumpserver.* to &apos;jumpserver&apos;@&apos;%&apos; IDENTIFIED BY &apos;这里填密码&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h2 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h2><h3 id="YUM安装"><a href="#YUM安装" class="headerlink" title="YUM安装"></a>YUM安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y redis</span><br></pre></td></tr></table></figure><h3 id="配置Redis"><a href="#配置Redis" class="headerlink" title="配置Redis"></a>配置Redis</h3><ul><li><code>/etc/redis.conf</code>添加一行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass "Redis连接密码"</span><br></pre></td></tr></table></figure><h2 id="创建jumpserver目录"><a href="#创建jumpserver目录" class="headerlink" title="创建jumpserver目录"></a>创建jumpserver目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/jumpserver /opt/jumpserver/data</span><br><span class="line">mkdir -p /opt/koko /opt/koko/data</span><br><span class="line">mkdir -p /opt/guacamol /opt/guacamol/keys /opt/guacamol/data</span><br><span class="line">mkdir -p /opt/nginx /opt/nginx/tls.d</span><br></pre></td></tr></table></figure><h1 id="部署证书"><a href="#部署证书" class="headerlink" title="部署证书"></a>部署证书</h1><h2 id="安装acme-sh"><a href="#安装acme-sh" class="headerlink" title="安装acme.sh"></a>安装acme.sh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.acme.sh | sh</span><br></pre></td></tr></table></figure><h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><ul><li>这里用阿里云的AccessKey和AccessSecretKey访问</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export Ali_Key="阿里云Accesskey"</span><br><span class="line">export Ali_Secret="阿里云Secret"</span><br><span class="line"></span><br><span class="line">~/.acme.sh/acme.sh --issue \</span><br><span class="line">                   -d "jumpserver.example.com" \</span><br><span class="line">                   --dns dns_ali \</span><br><span class="line">                   --standalone \</span><br><span class="line">                   -k ec-256</span><br></pre></td></tr></table></figure><h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~/.acme.sh/acme.sh --installcert \</span><br><span class="line">                   -d "jumpserver.example.com" \</span><br><span class="line">                   --fullchainpath /opt/jms_nginx/tls.d/jumpserver.crt \</span><br><span class="line">                   --keypath /opt/jms_nginx/tls.d/jumpserver.key --ecc</span><br></pre></td></tr></table></figure><h2 id="配置acme-sh自动更新"><a href="#配置acme-sh自动更新" class="headerlink" title="配置acme.sh自动更新"></a>配置acme.sh自动更新</h2><blockquote><p>由于 acme 协议和 Let’sEncrypt CA 都在频繁的更新, 因此 acme.sh 也经常更新以保持同步！</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.acme.sh/acme.sh --upgrade --auto-upgrade</span><br></pre></td></tr></table></figure><h1 id="容器化部署"><a href="#容器化部署" class="headerlink" title="容器化部署"></a>容器化部署</h1><h2 id="JumpServer"><a href="#JumpServer" class="headerlink" title="JumpServer"></a>JumpServer</h2><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull jumpserver/jms_core:2.0.1</span><br></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><ul><li><code>/opt/jumpserver/config.yml</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SECURITY WARNING: keep the secret key used in production secret!</span></span><br><span class="line"><span class="comment"># 加密秘钥 生产环境中请修改为随机字符串，请勿外泄, 可使用命令生成 </span></span><br><span class="line"><span class="comment"># $ cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 49;echo</span></span><br><span class="line"><span class="attr">SECRET_KEY:</span> <span class="string">这里替换成上一步生成的随机字符串</span></span><br><span class="line"><span class="comment"># SECURITY WARNING: keep the bootstrap token used in production secret!</span></span><br><span class="line"><span class="comment"># 预共享Token coco和guacamole用来注册服务账号，不在使用原来的注册接受机制</span></span><br><span class="line"><span class="attr">BOOTSTRAP_TOKEN:</span> <span class="string">这里替换成上一步生成的随机字符串</span></span><br><span class="line"><span class="comment"># Development env open this, when error occur display the full process track, Production disable it</span></span><br><span class="line"><span class="comment"># DEBUG 模式 开启DEBUG后遇到错误时可以看到更多日志</span></span><br><span class="line"><span class="attr">DEBUG:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># DEBUG, INFO, WARNING, ERROR, CRITICAL can set. See https://docs.djangoproject.com/en/1.10/topics/logging/</span></span><br><span class="line"><span class="comment"># 日志级别</span></span><br><span class="line"><span class="attr">LOG_LEVEL:</span> <span class="string">INFO</span></span><br><span class="line"><span class="comment"># LOG_DIR: </span></span><br><span class="line"><span class="comment"># Session expiration setting, Default 24 hour, Also set expired on on browser close</span></span><br><span class="line"><span class="comment"># 浏览器Session过期时间，默认24小时, 也可以设置浏览器关闭则过期</span></span><br><span class="line"><span class="comment"># SESSION_COOKIE_AGE: 86400</span></span><br><span class="line"><span class="comment"># SESSION_EXPIRE_AT_BROWSER_CLOSE: false</span></span><br><span class="line"><span class="comment"># Database setting, Support sqlite3, mysql, postgres ....</span></span><br><span class="line"><span class="comment"># 数据库设置</span></span><br><span class="line"><span class="comment"># See https://docs.djangoproject.com/en/1.10/ref/settings/#databases</span></span><br><span class="line"><span class="comment"># SQLite setting:</span></span><br><span class="line"><span class="comment"># 使用单文件sqlite数据库</span></span><br><span class="line"><span class="comment"># DB_ENGINE: sqlite3</span></span><br><span class="line"><span class="comment"># DB_NAME: </span></span><br><span class="line"><span class="comment"># MySQL or postgres setting like:</span></span><br><span class="line"><span class="comment"># 使用Mysql作为数据库</span></span><br><span class="line"><span class="attr">DB_ENGINE:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">DB_HOST:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">DB_PORT:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">DB_USER:</span> <span class="string">jumpserver</span></span><br><span class="line"><span class="attr">DB_PASSWORD:</span> <span class="string">"数据库密码"</span></span><br><span class="line"><span class="attr">DB_NAME:</span> <span class="string">jumpserver</span></span><br><span class="line"><span class="comment"># When Django start it will bind this host and port</span></span><br><span class="line"><span class="comment"># ./manage.py runserver 127.0.0.1:8080</span></span><br><span class="line"><span class="comment"># 运行时绑定端口</span></span><br><span class="line"><span class="attr">HTTP_BIND_HOST:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">HTTP_LISTEN_PORT:</span> <span class="number">8079</span></span><br><span class="line"><span class="attr">WS_LISTEN_PORT:</span> <span class="number">8070</span></span><br><span class="line"><span class="comment"># Use Redis as broker for celery and web socket</span></span><br><span class="line"><span class="comment"># Redis配置</span></span><br><span class="line"><span class="attr">REDIS_HOST:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">REDIS_PORT:</span> <span class="number">6379</span></span><br><span class="line"><span class="attr">REDIS_PASSWORD:</span> <span class="string">"Redis密码"</span></span><br><span class="line"><span class="comment"># REDIS_DB_CELERY: 3</span></span><br><span class="line"><span class="comment"># REDIS_DB_CACHE: 4</span></span><br><span class="line"><span class="comment"># Use OpenID Authorization</span></span><br><span class="line"><span class="comment"># 使用 OpenID 进行认证设置</span></span><br><span class="line"><span class="comment"># BASE_SITE_URL: http://localhost:8080</span></span><br><span class="line"><span class="comment"># AUTH_OPENID: false  # True or False</span></span><br><span class="line"><span class="comment"># AUTH_OPENID_SERVER_URL: https://openid-auth-server.com/</span></span><br><span class="line"><span class="comment"># AUTH_OPENID_REALM_NAME: realm-name</span></span><br><span class="line"><span class="comment"># AUTH_OPENID_CLIENT_ID: client-id</span></span><br><span class="line"><span class="comment"># AUTH_OPENID_CLIENT_SECRET: client-secret</span></span><br><span class="line"><span class="comment"># AUTH_OPENID_IGNORE_SSL_VERIFICATION: True</span></span><br><span class="line"><span class="comment"># AUTH_OPENID_SHARE_SESSION: True</span></span><br><span class="line"><span class="comment"># Perm show single asset to ungrouped node</span></span><br><span class="line"><span class="comment"># 是否把未授权节点资产放入到 未分组 节点中</span></span><br><span class="line"><span class="comment"># PERM_SINGLE_ASSET_TO_UNGROUP_NODE: false</span></span><br><span class="line"><span class="comment"># 启用定时任务</span></span><br><span class="line"><span class="comment"># PERIOD_TASK_ENABLE: True</span></span><br><span class="line"><span class="comment"># 启用二次复合认证配置</span></span><br><span class="line"><span class="comment"># LOGIN_CONFIRM_ENABLE: False</span></span><br><span class="line"><span class="comment"># Windows 登录跳过手动输入密码</span></span><br><span class="line"><span class="attr">WINDOWS_SKIP_ALL_MANUAL_PASSWORD:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">LOGIN_LOG_KEEP_DAYS:</span> <span class="number">180</span></span><br><span class="line"><span class="attr">TASK_LOG_KEEP_DAYS:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">DISPLAY_PER_PAGE:</span> <span class="number">50</span></span><br></pre></td></tr></table></figure><h3 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd \</span><br><span class="line">           --name jms_core \</span><br><span class="line">           --restart=always \</span><br><span class="line">           --net=host \</span><br><span class="line">           -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">           -v /opt/jumpserver/config.yml:/opt/jumpserver/config.yml:ro \</span><br><span class="line">           -v /opt/jumpserver/data:/opt/jumpserver/data \</span><br><span class="line">           -v /opt/jumpserver/logs:/opt/jumpserver/logs \</span><br><span class="line">           -w /opt/jumpserver \</span><br><span class="line">           jumpserver/jms_core:2.0.1 \</span><br><span class="line">           /bin/bash -c "source /opt/py3/bin/activate &amp;&amp; ./jms start"</span><br></pre></td></tr></table></figure><h2 id="KoKo"><a href="#KoKo" class="headerlink" title="KoKo"></a>KoKo</h2><h3 id="下载镜像-1"><a href="#下载镜像-1" class="headerlink" title="下载镜像"></a>下载镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull jumpserver/jms_koko:2.0.1</span><br></pre></td></tr></table></figure><h3 id="创建配置文件-1"><a href="#创建配置文件-1" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/koko/config.yml</span><br></pre></td></tr></table></figure><ul><li>配置如下</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NAME: &#123;&#123; Hostname &#125;&#125;</span></span><br><span class="line"><span class="comment"># Jumpserver项目的url, api请求注册会使用</span></span><br><span class="line"><span class="attr">CORE_HOST:</span> <span class="attr">http://127.0.0.1:8079</span></span><br><span class="line"><span class="comment"># Bootstrap Token, 预共享秘钥, 用来注册coco使用的service account和terminal</span></span><br><span class="line"><span class="comment"># 请和jumpserver 配置文件中保持一致，注册完成后可以删除</span></span><br><span class="line"><span class="attr">BOOTSTRAP_TOKEN:</span> <span class="string">"这里跟JumpServer的配置一样"</span></span><br><span class="line"><span class="comment"># 启动时绑定的ip, 默认 0.0.0.0</span></span><br><span class="line"><span class="attr">BIND_HOST:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment"># 监听的SSH端口号, 默认2222</span></span><br><span class="line"><span class="attr">SSHD_PORT:</span> <span class="number">2222</span></span><br><span class="line"><span class="comment"># 监听的HTTP/WS端口号，默认5000</span></span><br><span class="line"><span class="attr">HTTPD_PORT:</span> <span class="number">5000</span></span><br><span class="line"><span class="comment"># 项目使用的ACCESS KEY, 默认会注册,并保存到 ACCESS_KEY_STORE中,</span></span><br><span class="line"><span class="comment"># 如果有需求, 可以写到配置文件中, 格式 access_key_id:access_key_secret</span></span><br><span class="line"><span class="comment"># ACCESS_KEY: null</span></span><br><span class="line"><span class="comment"># ACCESS KEY 保存的地址, 默认注册后会保存到该文件中</span></span><br><span class="line"><span class="comment"># ACCESS_KEY_FILE: data/keys/.access_key</span></span><br><span class="line"><span class="comment"># 设置日志级别 [DEBUG, INFO, WARN, ERROR, FATAL, CRITICAL]</span></span><br><span class="line"><span class="attr">LOG_LEVEL:</span> <span class="string">INFO</span></span><br><span class="line"><span class="comment"># SSH连接超时时间 (default 15 seconds)</span></span><br><span class="line"><span class="attr">SSH_TIMEOUT:</span> <span class="number">15</span></span><br><span class="line"><span class="comment"># 语言 [en,zh]</span></span><br><span class="line"><span class="attr">LANG:</span> <span class="string">zh</span></span><br><span class="line"><span class="comment"># SFTP的根目录, 可选 /tmp, Home其他自定义目录</span></span><br><span class="line"><span class="attr">SFTP_ROOT:</span> <span class="string">/opt/kokodata/data/tmp</span></span><br><span class="line"><span class="comment"># SFTP是否显示隐藏文件</span></span><br><span class="line"><span class="comment"># SFTP_SHOW_HIDDEN_FILE: false</span></span><br><span class="line"><span class="comment"># 是否复用和用户后端资产已建立的连接(用户不会复用其他用户的连接)</span></span><br><span class="line"><span class="comment"># REUSE_CONNECTION: true</span></span><br><span class="line"><span class="comment"># 资产加载策略, 可根据资产规模自行调整. 默认异步加载资产, 异步搜索分页; 如果为all, 则资产全部加载, 本地搜索分页.</span></span><br><span class="line"><span class="comment"># ASSET_LOAD_POLICY:</span></span><br><span class="line"><span class="comment"># zip压缩的最大额度 (单位: M)</span></span><br><span class="line"><span class="attr">ZIP_MAX_SIZE:</span> <span class="number">1024</span><span class="string">M</span></span><br><span class="line"><span class="comment"># zip压缩存放的临时目录 /tmp</span></span><br><span class="line"><span class="comment"># ZIP_TMP_PATH: /tmp</span></span><br><span class="line"><span class="comment"># 向 SSH Client 连接发送心跳的时间间隔 (单位: 秒)，默认为30, 0则表示不发送</span></span><br><span class="line"><span class="attr">CLIENT_ALIVE_INTERVAL:</span> <span class="number">30</span></span><br><span class="line"><span class="comment"># 向资产发送心跳包的重试次数，默认为3</span></span><br><span class="line"><span class="attr">RETRY_ALIVE_COUNT_MAX:</span> <span class="number">3</span></span><br><span class="line"><span class="comment"># 会话共享使用的类型 [local, redis], 默认local</span></span><br><span class="line"><span class="attr">SHARE_ROOM_TYPE:</span> <span class="string">redis</span></span><br><span class="line"><span class="comment"># Redis配置</span></span><br><span class="line"><span class="attr">REDIS_HOST:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">REDIS_PORT:</span> <span class="number">6379</span></span><br><span class="line"><span class="attr">REDIS_PASSWORD:</span> <span class="string">"Redis连接密码"</span></span><br><span class="line"><span class="comment"># REDIS_CLUSTERS:</span></span><br><span class="line"><span class="attr">REDIS_DB_ROOM:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="运行容器-1"><a href="#运行容器-1" class="headerlink" title="运行容器"></a>运行容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd \</span><br><span class="line">           --name=jms_koko \</span><br><span class="line">           --restart=always \</span><br><span class="line">           --net=host \</span><br><span class="line">           -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">           -v /opt/koko/config.yml:/opt/koko/config.yml:ro \</span><br><span class="line">           -v /opt/koko/data:/opt/koko/data \</span><br><span class="line">           -w /opt/koko \</span><br><span class="line">           jumpserver/jms_koko:2.0.1 \</span><br><span class="line">           /opt/koko/koko -s start</span><br></pre></td></tr></table></figure><h2 id="Guacamol"><a href="#Guacamol" class="headerlink" title="Guacamol"></a>Guacamol</h2><h3 id="下载镜像-2"><a href="#下载镜像-2" class="headerlink" title="下载镜像"></a>下载镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull jumpserver/jms_guacamol:2.0.1</span><br></pre></td></tr></table></figure><h3 id="运行容器-2"><a href="#运行容器-2" class="headerlink" title="运行容器"></a>运行容器</h3><ul><li>需要启动guacd，监听<code>127.0.0.1:4822</code></li><li>修改tomcat9默认启动端口，从8080改成8081</li><li>前台启动tomcat</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd \</span><br><span class="line">           --name=jms_guacamol \</span><br><span class="line">           --restart=always \</span><br><span class="line">           --net=host \</span><br><span class="line">           -e JUMPSERVER_SERVER="http://127.0.0.1:8079" \</span><br><span class="line">           -e BOOTSTRAP_TOKEN="这里跟JumpServer的BOOTSTRAP_TOKEN一样" \</span><br><span class="line">           -e GUACAMOLE_LOG_LEVEL="INFO" \</span><br><span class="line">           -e JUMPSERVER_KEY_DIR="/config/guacamole/keys" \</span><br><span class="line">           -e GUACAMOLE_HOME="/config/guacamole" \</span><br><span class="line">           -e JUMPSERVER_ENABLE_DRIVE=true \</span><br><span class="line">           -e JUMPSERVER_CLEAR_DRIVE_SESSION=true \</span><br><span class="line">           -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">           -v /opt/guacamol/keys:/config/guacamole/keys \</span><br><span class="line">           -v /opt/guacamol/data:/config/guacamole/data \</span><br><span class="line">           -v /opt/guacamol/drive:/config/guacamole/drive \</span><br><span class="line">           -v /opt/guacamol/record:/config/guacamole/record \</span><br><span class="line">           -w /config/tomcat9/bin \</span><br><span class="line">           jumpserver/jms_guacamole:2.0.1 \</span><br><span class="line">           /bin/bash \</span><br><span class="line">           -c \</span><br><span class="line">           "sed -i 's/Connector port="8080"/Connector port="8081"/g' /config/tomcat9/conf/server.xml &amp;&amp; /usr/local/sbin/guacd -l 4822 -b 127.0.0.1 -L debug &amp;&amp; /config/tomcat9/bin/catalina.sh run"</span><br></pre></td></tr></table></figure><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>包含了<code>Luna</code>和<code>Lina</code>两个项目的代码</p><h3 id="下载镜像-3"><a href="#下载镜像-3" class="headerlink" title="下载镜像"></a>下载镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull jumpserver/jms_nginx:2.0.1</span><br></pre></td></tr></table></figure><h3 id="创建配置文件-2"><a href="#创建配置文件-2" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/jms_nginx/nginx.conf</span><br></pre></td></tr></table></figure><ul><li>添加以下内容</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">                      '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">                      '"$http_user_agent" "$http_x_forwarded_for" "$upstream_addr"';</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line">    # include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name jumpserver.example.com;</span><br><span class="line">        return 301 https://$server_name$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 443 ssl http2;</span><br><span class="line">        server_name jumpserver.example.com;</span><br><span class="line">        ssl_certificate tls.d/jumpserver.crt;</span><br><span class="line">        ssl_certificate_key tls.d/jumpserver.key;</span><br><span class="line">        ssl_session_timeout 1d;</span><br><span class="line">        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions</span><br><span class="line">        ssl_session_tickets off;</span><br><span class="line">        ssl_ecdh_curve prime256v1:secp384r1;</span><br><span class="line">        ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class="line">        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line">        ssl_prefer_server_ciphers off;</span><br><span class="line">        add_header Strict-Transport-Security "max-age=63072000" always;</span><br><span class="line">        ssl_stapling on;</span><br><span class="line">        ssl_stapling_verify on;</span><br><span class="line">        client_max_body_size 100m;  # 录像及文件上传大小限制</span><br><span class="line"></span><br><span class="line">        location /ui/ &#123;</span><br><span class="line">            try_files $uri / /index.html;</span><br><span class="line">            alias /opt/lina/;</span><br><span class="line">        &#125;</span><br><span class="line">        location /luna/ &#123;</span><br><span class="line">            try_files $uri / /index.html;</span><br><span class="line">            alias /opt/luna/;</span><br><span class="line">        &#125;</span><br><span class="line">        location /media/ &#123;</span><br><span class="line">            add_header Content-Encoding gzip;</span><br><span class="line">            root /opt/jumpserver/data/;</span><br><span class="line">        &#125;</span><br><span class="line">        location /static/ &#123;</span><br><span class="line">            root /opt/jumpserver/data/;</span><br><span class="line">        &#125;</span><br><span class="line">        location /koko/ &#123;</span><br><span class="line">            proxy_pass       http://jms_koko:5000;</span><br><span class="line">            proxy_buffering off;</span><br><span class="line">            proxy_http_version 1.1;</span><br><span class="line">            proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">            proxy_set_header Connection "upgrade";</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            access_log off;</span><br><span class="line">        &#125;</span><br><span class="line">        location /guacamole/ &#123;</span><br><span class="line">            proxy_pass       http://jms_guacamole:8080/;</span><br><span class="line">            proxy_buffering off;</span><br><span class="line">            proxy_http_version 1.1;</span><br><span class="line">            proxy_request_buffering off;</span><br><span class="line">            proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">            proxy_set_header Connection $http_connection;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            access_log off;</span><br><span class="line">        &#125;</span><br><span class="line">        location /ws/ &#123;</span><br><span class="line">            proxy_pass http://jms_core:8070;</span><br><span class="line">            proxy_buffering off;</span><br><span class="line">            proxy_http_version 1.1;</span><br><span class="line">            proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">            proxy_set_header Connection "upgrade";</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            access_log off;</span><br><span class="line">        &#125;</span><br><span class="line">        location /api/ &#123;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_pass http://jms_core:8080;</span><br><span class="line">        &#125;</span><br><span class="line">        location /core/ &#123;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_pass http://jms_core:8080;</span><br><span class="line">        &#125;</span><br><span class="line">        location / &#123;</span><br><span class="line">            rewrite ^/(.*)$ /ui/$1 last;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行容器-3"><a href="#运行容器-3" class="headerlink" title="运行容器"></a>运行容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd \</span><br><span class="line">           --name=jms_nginx \</span><br><span class="line">           --restart=always \</span><br><span class="line">           --net=host \</span><br><span class="line">           -e TZ=Asia/Shanghai \</span><br><span class="line">           -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">           -v /opt/jumpserver/data:/opt/jumpserver/data \</span><br><span class="line">           -v /opt/jms_nginx/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">           -v /opt/jms_nginx/tls.d:/etc/nginx/tls.d \</span><br><span class="line">           jumpserver/jms_nginx:2.0.1</span><br></pre></td></tr></table></figure><h1 id="Docker-compose统一管理"><a href="#Docker-compose统一管理" class="headerlink" title="Docker-compose统一管理"></a>Docker-compose统一管理</h1><blockquote><p>官方提供了Docker-Compose方式启动，这里配合上面的写好的配置文件魔改一下</p></blockquote><h2 id="env文件"><a href="#env文件" class="headerlink" title=".env文件"></a>.env文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 版本号可以自己根据项目的版本修改</span></span><br><span class="line"><span class="string">Version=v2.0.1</span></span><br><span class="line"><span class="string">BOOTSTRAP_TOKEN=随机字符串</span></span><br><span class="line"><span class="string">LOG_LEVEL=DEBUG</span></span><br></pre></td></tr></table></figure><h2 id="docker-compose文件"><a href="#docker-compose文件" class="headerlink" title="docker-compose文件"></a>docker-compose文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="comment"># networks:</span></span><br><span class="line"><span class="comment">#   jumpserver:</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  jms_core:</span></span><br><span class="line"><span class="attr">    command:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/bin/bash</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"-c"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"source /opt/py3/bin/activate &amp;&amp; ./jms start"</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">jms_core</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">"jumpserver/jms_core:$&#123;Version&#125;"</span></span><br><span class="line"><span class="attr">    network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="comment"># networks:</span></span><br><span class="line">    <span class="comment">#   - jumpserver</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    tty:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/etc/localtime:/etc/localtime:ro"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/jumpserver/config.yml:/opt/jumpserver/config.yml"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/jumpserver/data:/opt/jumpserver/data"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/jumpserver/logs:/opt/jumpserver/logs"</span></span><br><span class="line"><span class="attr">    working_dir:</span> <span class="string">/opt/jumpserver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  jms_guacamole:</span></span><br><span class="line"><span class="attr">    command:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/bin/bash</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"-c"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/usr/local/sbin/guacd -l 4822 -b 127.0.0.1 -L debug &amp;&amp; /config/tomcat9/bin/catalina.sh run"</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">jms_guacamole</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">jms_core</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      BOOTSTRAP_TOKEN:</span> <span class="string">"$BOOTSTRAP_TOKEN"</span></span><br><span class="line"><span class="attr">      GUACAMOLE_HOME:</span> <span class="string">"/config/guacamole"</span></span><br><span class="line"><span class="attr">      GUACAMOLE_LOG_LEVEL:</span> <span class="string">"$LOG_LEVEL"</span></span><br><span class="line"><span class="attr">      JUMPSERVER_CLEAR_DRIVE_SESSION:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">      JUMPSERVER_ENABLE_DRIVE:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">      JUMPSERVER_KEY_DIR:</span> <span class="string">"/config/guacamole/keys"</span></span><br><span class="line"><span class="attr">      JUMPSERVER_SERVER:</span> <span class="string">"http://jms_core:8080"</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">"jumpserver/jms_guacamole:$&#123;Version&#125;"</span></span><br><span class="line"><span class="attr">    network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="comment"># networks:</span></span><br><span class="line">    <span class="comment">#   - jumpserver</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    tty:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/etc/localtime:/etc/localtime:ro"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/guacamol/keys:/config/guacamole/keys"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/guacamol/data:/config/guacamole/data"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/guacamol/drive:/config/guacamole/drive"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/guacamol/record:/config/guacamole/record"</span></span><br><span class="line"><span class="attr">    working_dir:</span> <span class="string">/config/tomcat9/bin</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  jms_koko:</span></span><br><span class="line"><span class="attr">    command:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/opt/koko/koko</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"-s"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">start</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">jms_koko</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">jms_core</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">"jumpserver/jms_koko:$&#123;Version&#125;"</span></span><br><span class="line"><span class="attr">    network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="comment"># networks:</span></span><br><span class="line">    <span class="comment">#   - jumpserver</span></span><br><span class="line">    <span class="comment"># ports:</span></span><br><span class="line">    <span class="comment">#   - "2222:2222"</span></span><br><span class="line"><span class="attr">    privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    tty:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/etc/localtime:/etc/localtime:ro"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/koko/config.yml:/opt/koko/config.yml"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/koko/data:/opt/koko/data"</span></span><br><span class="line"><span class="attr">    working_dir:</span> <span class="string">/opt/koko</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  jms_nginx:</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">jms_nginx</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">jms_core</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">jms_koko</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">"jumpserver/jms_nginx:$&#123;Version&#125;"</span></span><br><span class="line"><span class="attr">    network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="comment"># networks:</span></span><br><span class="line">    <span class="comment">#   - jumpserver</span></span><br><span class="line">    <span class="comment"># ports:</span></span><br><span class="line">    <span class="comment">#   - "80:80"</span></span><br><span class="line">    <span class="comment">#   - "443:443"</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    tty:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/etc/localtime:/etc/localtime:ro"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/opt/jumpserver/data:/opt/jumpserver/data"</span></span><br></pre></td></tr></table></figure><h1 id="配置Gitlab-Oauth2登录"><a href="#配置Gitlab-Oauth2登录" class="headerlink" title="配置Gitlab Oauth2登录"></a>配置Gitlab Oauth2登录</h1><h2 id="Gitlab添加Application"><a href="#Gitlab添加Application" class="headerlink" title="Gitlab添加Application"></a>Gitlab添加Application</h2><ul><li>Callback URL</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://jumpserver.example.com/core/auth/openid/callback/</span><br></pre></td></tr></table></figure><ul><li>Scopes<ul><li>api</li><li>openid</li><li>profile</li><li>email</li></ul></li></ul><h2 id="修改jumpserver"><a href="#修改jumpserver" class="headerlink" title="修改jumpserver"></a>修改jumpserver</h2><ul><li><code>/opt/jumpserver/config.yml</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">SITE_URL:</span> <span class="attr">https://jumpserver.example.com</span></span><br><span class="line"><span class="attr">BASE_SITE_URL:</span> <span class="attr">https://jumpserver.example.com</span></span><br><span class="line"><span class="attr">AUTH_OPENID:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">AUTH_OPENID_CLIENT_ID:</span> <span class="string">GITLAB_CLIENT_ID</span></span><br><span class="line"><span class="attr">AUTH_OPENID_CLIENT_SECRET:</span> <span class="string">GITLAB_CLIENT_SECRET</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_ENDPOINT:</span> <span class="attr">https://gitlab.example.com</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_AUTHORIZATION_ENDPOINT:</span> <span class="string">/oauth/authorize</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_TOKEN_ENDPOINT:</span> <span class="string">/oauth/token</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_JWKS_ENDPOINT:</span> <span class="string">/oauth/discovery/keys</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_USERINFO_ENDPOINT:</span> <span class="string">/oauth/userinfo</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_END_SESSION_ENDPOINT:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_SIGNATURE_ALG:</span> <span class="string">HS256</span></span><br><span class="line"><span class="attr">AUTH_OPENID_PROVIDER_SIGNATURE_KEY:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AUTH_OPENID_SCOPES:</span> <span class="string">openid</span> <span class="string">profile</span> <span class="string">email</span></span><br><span class="line"><span class="attr">AUTH_OPENID_ID_TOKEN_MAX_AGE:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">AUTH_OPENID_ID_TOKEN_INCLUDE_CLAIM:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">AUTH_OPENID_USE_STATE:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">AUTH_OPENID_USE_NONCE:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">AUTH_OPENID_SHARE_SESSION:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">AUTH_OPENID_IGNORE_SSL_VERIFICATION:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">AUTH_OPENID_ALWAYS_UPDATE_USER:</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="重启jumpserver"><a href="#重启jumpserver" class="headerlink" title="重启jumpserver"></a>重启jumpserver</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart jms_core</span><br></pre></td></tr></table></figure><h2 id="OpenID-Connect测试结果"><a href="#OpenID-Connect测试结果" class="headerlink" title="OpenID Connect测试结果"></a>OpenID Connect测试结果</h2><ul><li>文档不详细，callback地址看源码才知道</li><li>通过OpenID获取的用户信息不正确</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;h2 id=&quot;软件版本&quot;&gt;&lt;a href=&quot;#软件版本&quot; class=&quot;headerlink&quot; title=&quot;软件版本&quot;&gt;&lt;/a&gt;软件版本&lt;/h
      
    
    </summary>
    
      <category term="JumpServer" scheme="https://luanlengli.github.io/categories/JumpServer/"/>
    
      <category term="CentOS" scheme="https://luanlengli.github.io/categories/JumpServer/CentOS/"/>
    
    
      <category term="JumpServer" scheme="https://luanlengli.github.io/tags/JumpServer/"/>
    
      <category term="CentOS" scheme="https://luanlengli.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>部署企业内部的 goproxy.io 服务</title>
    <link href="https://luanlengli.github.io/2020/03/04/%E9%83%A8%E7%BD%B2%E4%BC%81%E4%B8%9A%E5%86%85%E9%83%A8%E7%9A%84%20goproxy.io%20%E6%9C%8D%E5%8A%A1.html"/>
    <id>https://luanlengli.github.io/2020/03/04/部署企业内部的 goproxy.io 服务.html</id>
    <published>2020-03-04T02:55:39.000Z</published>
    <updated>2020-07-14T07:14:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li><p>通常情况下，我们可以直接使用<a href="https://goproxy.cn" target="_blank" rel="noopener">七牛云</a>、<a href="https://mirrors.aliyun.com/goproxy/" target="_blank" rel="noopener">阿里云</a>、<a href="https://mirrors.huaweicloud.com/goproxy" target="_blank" rel="noopener">华为云</a>、<a href="https://mirrors.cloud.tencent.com/go/" target="_blank" rel="noopener">腾讯云</a>等云厂商提供的GOPROXY代理服务。</p></li><li><p>受限于企业环境，很多时候希望能直接在企业内部就可以访问到GOPROXY服务。</p></li><li><p>操作系统使用<code>CentOS-7.7-1908</code></p></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="准备编译环境"><a href="#准备编译环境" class="headerlink" title="准备编译环境"></a>准备编译环境</h2><ul><li>Golang</li><li>make</li><li>git</li></ul><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/goproxyio/goproxy.git</span><br><span class="line">cd goproxy</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>编译好的二进制文件是放在<code>./bin/goproxy</code>，使用 <code>./bin/goproxy -h</code> 查看参数使用说明：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Usage of ./bin/goproxy:</span><br><span class="line">  -cacheDir string</span><br><span class="line">        go modules cache dir  [指定 Go 模块的缓存目录]</span><br><span class="line">  -exclude string</span><br><span class="line">        exclude host pattern  [proxy 模式下指定哪些 path 不经过上游服务器]</span><br><span class="line">  -listen string</span><br><span class="line">        service listen address [服务监听端口，默认 8081]</span><br><span class="line">  -proxy string</span><br><span class="line">        next hop proxy for go modules [指定上游 proxy server，推荐 goproxy.io]</span><br></pre></td></tr></table></figure><h1 id="配置systemd脚本"><a href="#配置systemd脚本" class="headerlink" title="配置systemd脚本"></a>配置systemd脚本</h1><h2 id="拷贝二进制文件"><a href="#拷贝二进制文件" class="headerlink" title="拷贝二进制文件"></a>拷贝二进制文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ./bin/goproxy /usr/local/bin/goproxy</span><br></pre></td></tr></table></figure><h2 id="创建GOPROXY缓存目录"><a href="#创建GOPROXY缓存目录" class="headerlink" title="创建GOPROXY缓存目录"></a>创建GOPROXY缓存目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/goproxy</span><br></pre></td></tr></table></figure><h2 id="配置systemd"><a href="#配置systemd" class="headerlink" title="配置systemd"></a>配置systemd</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/goproxy.service</span><br></pre></td></tr></table></figure><blockquote><p>添加以下内容</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=goproxy Service</span><br><span class="line">After=network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Type=simple</span><br><span class="line">PIDFile=/var/run/goproxy.pid</span><br><span class="line">ExecStart=/usr/local/bin/goproxy -cacheDir=/opt/goproxy -proxy=https://goproxy.io -listen=0.0.0.0:8081 -exclude=git.example.com</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=60</span><br><span class="line"><span class="meta">#</span><span class="bash"> Don<span class="string">'t restart in the case of configuration error</span></span></span><br><span class="line">RestartPreventExitStatus=23</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable goproxy.service</span><br><span class="line">systemctl start goproxy.service</span><br></pre></td></tr></table></figure><h1 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h1><p>在本地开发机上，通过环境变量将 proxy server 指定到你刚部署的服务器：</p><h2 id="Mac-和-Linux-用户："><a href="#Mac-和-Linux-用户：" class="headerlink" title="Mac 和 Linux 用户："></a>Mac 和 Linux 用户：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=http://[你的服务器IP]:8081</span><br></pre></td></tr></table></figure><h2 id="Windows-用户"><a href="#Windows-用户" class="headerlink" title="Windows 用户:"></a>Windows 用户:</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:GO111MODULE</span>=<span class="string">"on"</span></span><br><span class="line"><span class="variable">$env:GOPROXY</span>=<span class="string">"http://[你的服务器IP]:8081"</span></span><br></pre></td></tr></table></figure><h2 id="测试拉代码"><a href="#测试拉代码" class="headerlink" title="测试拉代码"></a>测试拉代码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/pkg/errors</span><br></pre></td></tr></table></figure><h2 id="服务器上看日志输出"><a href="#服务器上看日志输出" class="headerlink" title="服务器上看日志输出"></a>服务器上看日志输出</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u goproxy.service -f</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mar 04 11:42:35 izj6ce5zfgk1il1jke0te7z goproxy[1308]: goproxy.io: ------ --- /github.com/pkg/errors/@v/v0.9.1.mod [proxy]</span><br><span class="line">Mar 04 11:42:35 izj6ce5zfgk1il1jke0te7z goproxy[1308]: goproxy.io: 0.035s 200 /github.com/pkg/errors/@v/v0.9.1.mod</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;通常情况下，我们可以直接使用&lt;a href=&quot;https://goproxy.cn&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="Linux" scheme="https://luanlengli.github.io/categories/Linux/"/>
    
      <category term="Golang" scheme="https://luanlengli.github.io/categories/Linux/Golang/"/>
    
    
      <category term="Linux" scheme="https://luanlengli.github.io/tags/Linux/"/>
    
      <category term="Golang" scheme="https://luanlengli.github.io/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>完全屏蔽国内云厂商自带监控</title>
    <link href="https://luanlengli.github.io/2020/02/23/%E5%AE%8C%E5%85%A8%E5%B1%8F%E8%94%BD%E5%9B%BD%E5%86%85%E4%BA%91%E5%8E%82%E5%95%86%E8%87%AA%E5%B8%A6%E7%9B%91%E6%8E%A7.html"/>
    <id>https://luanlengli.github.io/2020/02/23/完全屏蔽国内云厂商自带监控.html</id>
    <published>2020-02-23T12:17:46.000Z</published>
    <updated>2020-07-14T07:13:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>云厂商自带的监控会误伤梯子，果断干掉</li></ul><h1 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h1><h2 id="Linux主机"><a href="#Linux主机" class="headerlink" title="Linux主机"></a>Linux主机</h2><h3 id="卸载阿里云盾"><a href="#卸载阿里云盾" class="headerlink" title="卸载阿里云盾"></a>卸载阿里云盾</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http://update.aegis.aliyun.com/download/uninstall.sh | bash</span><br><span class="line">curl -sSL http://update.aegis.aliyun.com/download/quartz_uninstall.sh | bash</span><br></pre></td></tr></table></figure><h3 id="删除阿里云盾文件"><a href="#删除阿里云盾文件" class="headerlink" title="删除阿里云盾文件"></a>删除阿里云盾文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill aliyun-service</span><br><span class="line">rm -fr /etc/init.d/agentwatch /usr/sbin/aliyun-service</span><br><span class="line">rm -rf /usr/local/aegis*</span><br></pre></td></tr></table></figure><h3 id="屏蔽云盾IP"><a href="#屏蔽云盾IP" class="headerlink" title="屏蔽云盾IP"></a>屏蔽云盾IP</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -s 140.205.201.0/28 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.201.16/29 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.201.32/28 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.192/29 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.200/30 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.184/29 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.183/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.206/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.205/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.195/32 -j DROP</span><br><span class="line">iptables -I INPUT -s 140.205.225.204/32 -j DROP</span><br></pre></td></tr></table></figure><h2 id="Windows主机"><a href="#Windows主机" class="headerlink" title="Windows主机"></a>Windows主机</h2><h3 id="下载卸载脚本"><a href="#下载卸载脚本" class="headerlink" title="下载卸载脚本"></a>下载卸载脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://update.aegis.aliyun.com/download/uninstall.bat?spm=a2c6h.13066369.0.0.143d32d0TB6nIu&amp;file=uninstall.bat</span><br></pre></td></tr></table></figure><h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><p>双击 <strong>uninstall.bat</strong> 文件执行脚本</p><h1 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h1><h2 id="Linux主机-1"><a href="#Linux主机-1" class="headerlink" title="Linux主机"></a>Linux主机</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/qcloud/stargate/admin/uninstall.sh</span><br><span class="line">/usr/local/qcloud/YunJing/uninst.sh</span><br><span class="line">/usr/local/qcloud/monitor/barad/admin/uninstall.sh</span><br><span class="line">rm -rf /usr/local/qcloud/</span><br><span class="line">rm -rf /usr/local/sa/</span><br><span class="line">rm -rf /usr/local/agenttools</span><br></pre></td></tr></table></figure><h2 id="Windows主机-1"><a href="#Windows主机-1" class="headerlink" title="Windows主机"></a>Windows主机</h2><ul><li>程序安装路径是<code>C:\Program Files\QCloud\Stargate</code>和<code>C:\Program Files\QCloud\Monitor</code></li><li>双击目录里面的 <strong>uninstall脚本</strong> 即可卸载</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;云厂商自带的监控会误伤梯子，果断干掉&lt;/li&gt;&lt;/ul&gt;&lt;h1 id=&quot;阿里云&quot;&gt;&lt;a href=&quot;#阿里云&quot; class=&quot;he
      
    
    </summary>
    
      <category term="Linux" scheme="https://luanlengli.github.io/categories/Linux/"/>
    
      <category term="Windows" scheme="https://luanlengli.github.io/categories/Linux/Windows/"/>
    
    
      <category term="Linux" scheme="https://luanlengli.github.io/tags/Linux/"/>
    
      <category term="Windows" scheme="https://luanlengli.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>国内镜像源设置</title>
    <link href="https://luanlengli.github.io/2020/01/17/%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90%E8%AE%BE%E7%BD%AE.html"/>
    <id>https://luanlengli.github.io/2020/01/17/国内镜像源设置.html</id>
    <published>2020-01-17T01:23:33.000Z</published>
    <updated>2021-11-09T02:33:21.987Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>Linux软件源、开发语言依赖源、容器镜像源基本都在国外，因此国内访问非常慢</li><li>国内各大云厂商基本都做了对应的镜像源，果断用起来！</li><li>如无特殊情况，都使用清华的源<code>https://opentuna.cn</code>作为展示</li></ul><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><ul><li><p>2021-11-09 npm淘宝镜像切换域名为<code>npmmirror.com</code></p><p>老 <a href="https://link.zhihu.com/?target=http%3A//npm.taobao.org" target="_blank" rel="noopener">http://npm.taobao.org</a> 和 <a href="https://link.zhihu.com/?target=http%3A//registry.npm.taobao.org" target="_blank" rel="noopener">http://registry.npm.taobao.org</a> 域名将于 2022 年 05 月 31 日零时起停止服务。</p><p>详见此链接<a href="https://zhuanlan.zhihu.com/p/430580607" target="_blank" rel="noopener">淘宝 NPM 镜像站喊你切换新域名啦</a></p></li></ul><h1 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h1><h2 id="CentOS-6-7-8"><a href="#CentOS-6-7-8" class="headerlink" title="CentOS 6/7/8"></a>CentOS 6/7/8</h2><h3 id="系统源配置"><a href="#系统源配置" class="headerlink" title="系统源配置"></a>系统源配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export REPO_MIRROR="https://opentuna.cn/centos"</span><br><span class="line">sed -e "s!#baseurl!baseurl!g" \</span><br><span class="line">    -e "s!mirrorlist!#mirrorlist!g" \</span><br><span class="line">    -e "s!http://mirror.centos.org!$&#123;REPO_MIRROR&#125;!g" \</span><br><span class="line">    -i /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure><h3 id="EPEL源配置"><a href="#EPEL源配置" class="headerlink" title="EPEL源配置"></a>EPEL源配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export REPO_MIRROR="https://opentuna.cn/epel"</span><br><span class="line">sed -e "s!^metalink=!#metalink=!g" \</span><br><span class="line">    -e "s!^#baseurl=!baseurl=!g" \</span><br><span class="line">    -e "s!https://download.fedoraproject.org/pub/epel!$&#123;REPO_MIRROR&#125;!g" \</span><br><span class="line">    -i /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel-testing.repo</span><br></pre></td></tr></table></figure><h2 id="Debian9-10"><a href="#Debian9-10" class="headerlink" title="Debian9/10"></a>Debian9/10</h2><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export REPO_MIRROR="https://opentuna.cn"</span><br><span class="line">sed -e "s@http://deb.debian.org@$&#123;REPO_MIRROR&#125;@g" \</span><br><span class="line">    -e "s@http://security.debian.org@$&#123;REPO_MIRROR&#125;@g" \</span><br><span class="line">    -e "s@^deb-src@# deb-src@g" \</span><br><span class="line">    -i /etc/apt/sources.list</span><br></pre></td></tr></table></figure><h2 id="Ubuntu16-04-18-04-20-04"><a href="#Ubuntu16-04-18-04-20-04" class="headerlink" title="Ubuntu16.04/18.04/20.04"></a>Ubuntu16.04/18.04/20.04</h2><h3 id="配置说明-1"><a href="#配置说明-1" class="headerlink" title="配置说明"></a>配置说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export REPO_MIRROR="https://opentuna.cn"</span><br><span class="line">sed -e "s@http://.*archive.ubuntu.com@$&#123;REPO_MIRROR&#125;@g" \</span><br><span class="line">    -e "s@http://.*security.ubuntu.com@$&#123;REPO_MIRROR&#125;@g" \</span><br><span class="line">    -e "s@^deb-src@# deb-src@g" \</span><br><span class="line">    -i /etc/apt/sources.list</span><br></pre></td></tr></table></figure><h1 id="开发语言"><a href="#开发语言" class="headerlink" title="开发语言"></a>开发语言</h1><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><h3 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h3><h4 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://opentuna.cn/pypi/web/simple some-package</span><br></pre></td></tr></table></figure><h4 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h4><h5 id="直接写配置文件"><a href="#直接写配置文件" class="headerlink" title="直接写配置文件"></a>直接写配置文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/.pip</span><br><span class="line">cat &gt; ~/.pip/pip.conf &lt;&lt;EOF</span><br><span class="line">[global]</span><br><span class="line">index-url = https://opentuna.cn/pypi/web/simple</span><br><span class="line">trusted-host = opentuna.cn</span><br><span class="line">timeout = 120</span><br><span class="line">[install]</span><br><span class="line">trusted-host = opentuna.cn</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="pip命令配置-这里针对较新版本的pip"><a href="#pip命令配置-这里针对较新版本的pip" class="headerlink" title="pip命令配置(这里针对较新版本的pip)"></a>pip命令配置(这里针对较新版本的pip)</h5><ul><li>清华大学</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url https://opentuna.cn/pypi/web/simple</span><br><span class="line">pip config set global.trusted-host opentuna.cn</span><br><span class="line">pip config set global.timeout 120</span><br><span class="line">pip config set install.trusted-host opentuna.cn</span><br></pre></td></tr></table></figure><ul><li>阿里云公网</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip config set global.trusted-host mirrors.aliyun.com</span><br><span class="line">pip config set global.timeout 120</span><br><span class="line">pip config set install.trusted-host mirrors.aliyun.com</span><br></pre></td></tr></table></figure><ul><li>阿里云内网</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url http://mirrors.cloud.aliyuncs.com/pypi/simple/</span><br><span class="line">pip config set global.trusted-host mirrors.cloud.aliyuncs.com</span><br><span class="line">pip config set global.timeout 120</span><br><span class="line">pip config set install.trusted-host mirrors.cloud.aliyuncs.com</span><br></pre></td></tr></table></figure><h3 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h3><ul><li>Linux系统保存到<code>~/.condarc</code></li><li>MacOS系统保存到<code>~/.condarc</code></li><li>Windows系统保存到<code>%HOMEPATH%/.condarc</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">channels:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">show_channel_urls:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">channel_alias:</span> <span class="attr">https://mirrors.tuna.tsinghua.edu.cn/anaconda</span></span><br><span class="line"><span class="attr">default_channels:</span></span><br><span class="line"><span class="attr">  - https:</span><span class="string">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span></span><br><span class="line"><span class="attr">  - https:</span><span class="string">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free</span></span><br><span class="line"><span class="attr">  - https:</span><span class="string">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span></span><br><span class="line"><span class="attr">  - https:</span><span class="string">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro</span></span><br><span class="line"><span class="attr">  - https:</span><span class="string">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span></span><br><span class="line"><span class="attr">custom_channels:</span></span><br><span class="line"><span class="attr">  conda-forge:</span> <span class="attr">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line"><span class="attr">  msys2:</span> <span class="attr">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line"><span class="attr">  bioconda:</span> <span class="attr">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line"><span class="attr">  menpo:</span> <span class="attr">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line"><span class="attr">  pytorch:</span> <span class="attr">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line"><span class="attr">  simpleitk:</span> <span class="attr">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br></pre></td></tr></table></figure><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><h3 id="淘宝"><a href="#淘宝" class="headerlink" title="淘宝"></a>淘宝</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">https://npmmirror.com/mirrors/npm/</span><br><span class="line"># 设置nodejs工具的镜像地址</span><br><span class="line">https://npmmirror.com/mirrors/node</span><br><span class="line"># 设置alinode镜像</span><br><span class="line">https://npmmirror.com/mirrors/alinode</span><br><span class="line"># 设置浏览器引擎驱动镜像地址</span><br><span class="line">https://npmmirror.com/mirrors/phantomjs</span><br><span class="line">https://npmmirror.com/mirrors/chromedriver</span><br><span class="line">https://npmmirror.com/mirrors/operadriver</span><br><span class="line">https://npmmirror.com/mirrors/selenium</span><br><span class="line"># 设置Electron和node-inspector的镜像地址</span><br><span class="line">https://npmmirror.com/mirrors/electron/</span><br><span class="line">https://npmmirror.com/mirrors/node-inspector/</span><br></pre></td></tr></table></figure><h3 id="华为云"><a href="#华为云" class="headerlink" title="华为云"></a>华为云</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.huaweicloud.com/repository/npm/</span><br><span class="line"># 设置nodejs工具的镜像地址</span><br><span class="line">https://mirrors.huaweicloud.com/nodejs</span><br><span class="line"># 设置Node-Sass的镜像地址</span><br><span class="line">https://mirrors.huaweicloud.com/node-sass</span><br><span class="line"># 设置浏览器引擎驱动镜像地址</span><br><span class="line">https://mirrors.huaweicloud.com/phantomjs</span><br><span class="line">https://mirrors.huaweicloud.com/chromedriver</span><br><span class="line">https://mirrors.huaweicloud.com/operadriver</span><br><span class="line"># 设置Electron和Python的镜像地址</span><br><span class="line">https://mirrors.huaweicloud.com/electron/</span><br><span class="line">https://mirrors.huaweicloud.com/python</span><br></pre></td></tr></table></figure><h3 id="单次使用"><a href="#单次使用" class="headerlink" title="单次使用"></a>单次使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --registry=https://registry.npmmirror.com PACKAGE</span><br></pre></td></tr></table></figure><h3 id="配置方法-1"><a href="#配置方法-1" class="headerlink" title="配置方法"></a>配置方法</h3><blockquote><p>这里用华为云演示一下</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</span><br><span class="line">npm config set disturl https://mirrors.huaweicloud.com/nodejs</span><br><span class="line">npm config set sass_binary_site https://mirrors.huaweicloud.com/node-sass</span><br><span class="line">npm config set phantomjs_cdnurl https://mirrors.huaweicloud.com/phantomjs</span><br><span class="line">npm config set chromedriver_cdnurl https://mirrors.huaweicloud.com/chromedriver</span><br><span class="line">npm config set operadriver_cdnurl https://mirrors.huaweicloud.com/operadriver</span><br><span class="line">npm config set electron_mirror https://mirrors.huaweicloud.com/electron/</span><br><span class="line">npm config set python_mirror https://mirrors.huaweicloud.com/python </span><br><span class="line">npm cache clean -f</span><br></pre></td></tr></table></figure><h2 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h2><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><ol><li>Golang 1.11+</li><li>开启Go Module</li><li>Golang 1.13+里面的GOPROXY变成了数组，可以定义多个Proxy</li></ol><h3 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.aliyun.com/goproxy/</span><br><span class="line">https://mirrors.cloud.aliyuncs.com/goproxy/</span><br></pre></td></tr></table></figure><h3 id="华为云-1"><a href="#华为云-1" class="headerlink" title="华为云"></a>华为云</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.huaweicloud.com/goproxy</span><br></pre></td></tr></table></figure><h3 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.cloud.tencent.com/go/</span><br></pre></td></tr></table></figure><h3 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://goproxy.cn</span><br></pre></td></tr></table></figure><h3 id="针对Golang-1-11"><a href="#针对Golang-1-11" class="headerlink" title="针对Golang 1.11"></a>针对Golang 1.11</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go env -w GO111MODULE=on</span><br><span class="line">go env -w GOPROXY='https://goproxy.cn'</span><br></pre></td></tr></table></figure><h3 id="针对Golang-1-13"><a href="#针对Golang-1-13" class="headerlink" title="针对Golang 1.13+"></a>针对Golang 1.13+</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">go env -w GO111MODULE=on</span><br><span class="line">go env -w GOPROXY='https://goproxy.cn,https://mirrors.aliyun.com/goproxy,direct'</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里把git.example.com设置为私有的git服务器</span></span><br><span class="line">go env -w GOPRIVATE="git.example.com"</span><br><span class="line">go env -w GOSUMDB="sum.golang.google.cn"</span><br></pre></td></tr></table></figure><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><h3 id="阿里云-1"><a href="#阿里云-1" class="headerlink" title="阿里云"></a>阿里云</h3><p>阿里云代理了Maven的公共仓库，这里是<a href="https://help.aliyun.com/document_detail/102512.html?spm=a2c40.aliyun_maven_repo.0.0.db313054wI5b5B" target="_blank" rel="noopener">说明文档</a></p><h3 id="腾讯云-1"><a href="#腾讯云-1" class="headerlink" title="腾讯云"></a>腾讯云</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mirrors.cloud.tencent.com/nexus/repository/maven-public/</span><br></pre></td></tr></table></figure><h3 id="华为云-2"><a href="#华为云-2" class="headerlink" title="华为云"></a>华为云</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.huaweicloud.com/repository/maven/</span><br></pre></td></tr></table></figure><h3 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h3><p>打开 Maven 的配置文件(windows机器一般在maven安装目录的conf/settings.xml)，在<code>&lt;mirrors&gt;&lt;/mirrors&gt;</code>标签中添加 mirror 子节点:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>huaweicloud<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://mirrors.huaweicloud.com/repository/maven/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-tencentyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://mirrors.cloud.tencent.com/nexus/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果想使用其它代理仓库,可在<code>&lt;repository&gt;&lt;/repository&gt;</code>节点中加入对应的仓库使用地址。以使用spring代理仓为例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Gradle配置"><a href="#Gradle配置" class="headerlink" title="Gradle配置"></a>Gradle配置</h3><p>在 build.gradle 文件中加入以下代码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url 'https://maven.aliyun.com/repository/public/' &#125;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想使用 maven.aliyun.com 提供的其它代理仓，以使用 spring 仓为例，代码如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url 'https://maven.aliyun.com/repository/public/' &#125;</span><br><span class="line">        maven &#123; url 'https://maven.aliyun.com/repository/spring/'&#125;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h1><h2 id="DockerHub"><a href="#DockerHub" class="headerlink" title="DockerHub"></a>DockerHub</h2><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><ul><li>docker配置文件路径<code>/etc/docker/daemon.json</code></li><li>多个mirrors地址可以合并</li></ul><h3 id="配置方法-2"><a href="#配置方法-2" class="headerlink" title="配置方法"></a>配置方法</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"https://pqbap4ya.mirror.aliyuncs.com"</span>,</span><br><span class="line">    <span class="string">"https://mirror.ccs.tencentyun.com"</span>,</span><br><span class="line">    <span class="string">"https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com"</span>,</span><br><span class="line">    <span class="string">"https://hub-mirror.c.163.com"</span>,</span><br><span class="line">    <span class="string">"https://mirror.baidubce.com"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Kubernetes软件源"><a href="#Kubernetes软件源" class="headerlink" title="Kubernetes软件源"></a>Kubernetes软件源</h2><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><ul><li>这里用阿里云的源</li></ul><h3 id="CentOS-7-8"><a href="#CentOS-7-8" class="headerlink" title="CentOS 7/8"></a>CentOS 7/8</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="Debian-9-10"><a href="#Debian-9-10" class="headerlink" title="Debian 9/10"></a>Debian 9/10</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt kubernetes-stretch main</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="Ubuntu-16-04-18-04-20-04"><a href="#Ubuntu-16-04-18-04-20-04" class="headerlink" title="Ubuntu 16.04/18.04/20.04"></a>Ubuntu 16.04/18.04/20.04</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial  main</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="k8s-gcr-io"><a href="#k8s-gcr-io" class="headerlink" title="k8s.gcr.io"></a>k8s.gcr.io</h2><ul><li>这个是馆长在维护的，<a href="https://github.com/zhangguanzhang/google_containers" target="_blank" rel="noopener">项目地址</a></li></ul><p><code>registry.aliyuncs.com/k8sxio</code></p><h2 id="quay-io"><a href="#quay-io" class="headerlink" title="quay.io"></a>quay.io</h2><ul><li><code>quay.azk8s.cn</code>（于 2020年4月2日限制了对 Azure China 之外的 IP访问）</li><li><code>quay.mirrors.ustc.edu.cn</code> (从中科大校外对 Quay Container Registry 的镜像缓存的访问会被 302 重定向至源站)</li><li><code>quay-mirror.qiniu.com</code> (已停止公网DNS解析)</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;Linux软件源、开发语言依赖源、容器镜像源基本都在国外，因此国内访问非常慢&lt;/li&gt;&lt;li&gt;国内各大云厂商基本都做了对应的镜像源
      
    
    </summary>
    
      <category term="RepoMirror" scheme="https://luanlengli.github.io/categories/RepoMirror/"/>
    
    
      <category term="RepoMirror" scheme="https://luanlengli.github.io/tags/RepoMirror/"/>
    
  </entry>
  
  <entry>
    <title>阿里云GPU计算型ECS实例安装NVIDIA驱动和CUDA</title>
    <link href="https://luanlengli.github.io/2019/12/31/%E9%98%BF%E9%87%8C%E4%BA%91GPU%E8%AE%A1%E7%AE%97%E5%9E%8BECS%E5%AE%9E%E4%BE%8B%E5%AE%89%E8%A3%85NVIDIA%E9%A9%B1%E5%8A%A8%E5%92%8CCUDA.html"/>
    <id>https://luanlengli.github.io/2019/12/31/阿里云GPU计算型ECS实例安装NVIDIA驱动和CUDA.html</id>
    <published>2019-12-31T15:40:43.000Z</published>
    <updated>2020-09-21T12:46:28.543Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>理论上适用于其他云平台的<code>GPU计算型实例</code>或者<code>自建GPU计算服务器</code></li><li>阿里云实例类型<code>GPU计算型 gn5</code></li><li>GPU型号<code>Nvidia Tesla P100</code></li><li>操作系统<code>CentOS-7.7-1908 64位</code></li><li>Nvidia驱动版本<code>390.116</code></li><li>CUDA Driver版本<code>9.1.85</code></li><li>CUDA Runtime版本<code>9.0.176</code></li><li>cuDNN版本<code>v7.6.0.64</code></li><li>Nvidia GPU 兼容性的可以看<a href="http://wsfdl.com/kubernetes/2019/05/08/versions_in_gpu.html" target="_blank" rel="noopener">这篇文章</a></li><li>Docker版本<code>19.03.5</code></li><li><font color="red">GPU驱动、CUDA、cuDNN版本的选择，请自行根据项目要求进行调整！</font></li></ul><h1 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="禁用SELINUX"><a href="#禁用SELINUX" class="headerlink" title="禁用SELINUX"></a>禁用SELINUX</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i 's,^SELINUX=.*,SELINUX=disabled,g' /etc/selinux/config</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><h3 id="禁用防火墙"><a href="#禁用防火墙" class="headerlink" title="禁用防火墙"></a>禁用防火墙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable --now firewalld.service</span><br></pre></td></tr></table></figure><h3 id="添加sysctl参数"><a href="#添加sysctl参数" class="headerlink" title="添加sysctl参数"></a>添加sysctl参数</h3><h4 id="fs参数"><a href="#fs参数" class="headerlink" title="fs参数"></a>fs参数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/99-fs.conf &lt;&lt;EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大文件句柄数</span></span><br><span class="line">fs.file-max=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大文件打开数</span></span><br><span class="line">fs.nr_open=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 同一时间异步IO请求数</span></span><br><span class="line">fs.aio-max-nr=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在CentOS7.4引入了一个新的参数来控制内核的行为。 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /proc/sys/fs/may_detach_mounts 默认设置为0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当系统有容器运行的时候，需要将该值设置为1。</span></span><br><span class="line">fs.may_detach_mounts=1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="vm参数"><a href="#vm参数" class="headerlink" title="vm参数"></a>vm参数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/99-vm.conf &lt;&lt;EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存耗尽才使用swap分区</span></span><br><span class="line">vm.swappiness=10</span><br><span class="line"><span class="meta">#</span><span class="bash"> 当内存耗尽时，内核会触发OOM killer根据oom_score杀掉最耗内存的进程</span></span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许overcommit</span></span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义了进程能拥有的最多内存区域，默认65536</span></span><br><span class="line">vm.max_map_count=262144</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="net参数"><a href="#net参数" class="headerlink" title="net参数"></a>net参数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/99-net.conf &lt;&lt;EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> 二层的网桥在转发包时也会被iptables的FORWARD规则所过滤</span></span><br><span class="line">net.bridge.bridge-nf-call-arptables=1</span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭严格校验数据包的反向路径，默认值1</span></span><br><span class="line">net.ipv4.conf.default.rp_filter=0</span><br><span class="line">net.ipv4.conf.all.rp_filter=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进程间通信发送数据, 默认100</span></span><br><span class="line">net.unix.max_dgram_qlen=512</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 conntrack 的上限</span></span><br><span class="line">net.netfilter.nf_conntrack_max=1048576</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置连接跟踪表中处于TIME_WAIT状态的超时时间</span></span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_timewait=30</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置连接跟踪表中TCP连接超时时间</span></span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_established=1200</span><br><span class="line"><span class="meta">#</span><span class="bash"> 端口最大的监听队列的长度</span></span><br><span class="line">net.core.somaxconn=21644</span><br><span class="line"><span class="meta">#</span><span class="bash"> 接收自网卡、但未被内核协议栈处理的报文队列长度</span></span><br><span class="line">net.core.netdev_max_backlog=262144</span><br><span class="line"><span class="meta">#</span><span class="bash"> 系统无内存压力、启动压力模式阈值、最大值，单位为页的数量</span></span><br><span class="line"><span class="meta">#</span><span class="bash">net.ipv4.tcp_mem=1541646 2055528 3083292</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内核socket接收缓存区字节数min/default/max</span></span><br><span class="line">net.core.rmem=4096 65536 8388608</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内核socket发送缓存区字节数min/default/max</span></span><br><span class="line">net.core.wmem=4096 65536 8388608</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启自动调节缓存模式</span></span><br><span class="line">net.ipv4.tcp_moderate_rcvbuf=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP阻塞控制算法BBR，Linux内核版本4.9开始内置BBR算法</span></span><br><span class="line"><span class="meta">#</span><span class="bash">net.ipv4.tcp_congestion_control=bbr</span></span><br><span class="line"><span class="meta">#</span><span class="bash">net.core.default_qdisc=fq</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 用作本地随机TCP端口的范围</span></span><br><span class="line">net.ipv4.ip_local_port_range=10000 65000</span><br><span class="line"><span class="meta">#</span><span class="bash"> 打开ipv4数据包转发</span></span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许应用程序能够绑定到不属于本地网卡的地址</span></span><br><span class="line">net.ipv4.ip_nonlocal_bind=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 系统中处于 SYN_RECV 状态的 TCP 连接数量</span></span><br><span class="line">net.ipv4.tcp_max_syn_backlog=16384</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内核中管理 TIME_WAIT 状态的数量</span></span><br><span class="line">net.ipv4.tcp_max_tw_buckets=5000</span><br><span class="line"><span class="meta">#</span><span class="bash"> 指定重发 SYN/ACK 的次数</span></span><br><span class="line">net.ipv4.tcp_synack_retries=2</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP连接中TIME_WAIT sockets的快速回收</span></span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 不属于任何进程的tcp socket最大数量. 超过这个数量的socket会被reset, 并告警</span></span><br><span class="line">net.ipv4.tcp_max_orphans=1024</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP FIN报文重试次数</span></span><br><span class="line">net.ipv4.tcp_orphan_retries=8</span><br><span class="line"><span class="meta">#</span><span class="bash"> 加快系统关闭处于 FIN_WAIT2 状态的 TCP 连接</span></span><br><span class="line">net.ipv4.tcp_fin_timeout=15</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP连接keepalive的持续时间，默认7200</span></span><br><span class="line">net.ipv4.tcp_keepalive_time=600</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP keepalive探测包发送间隔</span></span><br><span class="line">net.ipv4.tcp_keepalive_intvl=30</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP keepalive探测包重试次数</span></span><br><span class="line">net.ipv4.tcp_keepalive_probes=10</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP FastOpen</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 0:关闭 ; 1:作为客户端时使用 ; 2:作为服务器端时使用 ; 3:无论作为客户端还是服务器端都使用</span></span><br><span class="line">net.ipv4.tcp_fastopen=3</span><br><span class="line"><span class="meta">#</span><span class="bash"> 限制TCP重传次数</span></span><br><span class="line">net.ipv4.tcp_retries1=3</span><br><span class="line"><span class="meta">#</span><span class="bash"> TCP重传次数到达上限时，关闭TCP连接</span></span><br><span class="line">net.ipv4.tcp_retries2=15</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="修改limits参数"><a href="#修改limits参数" class="headerlink" title="修改limits参数"></a>修改limits参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/security/limits.d/99-centos.conf &lt;&lt;EOF</span><br><span class="line">* - nproc 1048576</span><br><span class="line">* - nofile 1048576</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="修改journal设置"><a href="#修改journal设置" class="headerlink" title="修改journal设置"></a>修改journal设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's,^#Compress=yes,Compress=yes,' \</span><br><span class="line">    -e 's,^#SystemMaxUse=,SystemMaxUse=2G,' \</span><br><span class="line">    -e 's,^#Seal=yes,Seal=yes,' \</span><br><span class="line">    -e 's,^#RateLimitBurst=1000,RateLimitBurst=5000,' \</span><br><span class="line">    -i /etc/systemd/journald.conf</span><br></pre></td></tr></table></figure><h3 id="修改history参数"><a href="#修改history参数" class="headerlink" title="修改history参数"></a>修改history参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/profile.d/history.sh &lt;&lt;EOF</span><br><span class="line">export HISTSIZE=10000</span><br><span class="line">export HISTFILESIZE=10000</span><br><span class="line">export HISTCONTROL=ignoredups</span><br><span class="line">export HISTTIMEFORMAT="`whoami` %F %T "</span><br><span class="line">export HISTIGNORE="ls:pwd:ll:ls -l:ls -a:ll -a"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="更新软件"><a href="#更新软件" class="headerlink" title="更新软件"></a>更新软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groups install -y base 'Development Tools'</span><br></pre></td></tr></table></figure><h3 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nc \</span><br><span class="line">               git \</span><br><span class="line">               vim \</span><br><span class="line">               ipvsadm \</span><br><span class="line">               tree \</span><br><span class="line">               dstat \</span><br><span class="line">               iotop \</span><br><span class="line">               htop \</span><br><span class="line">               socat \</span><br><span class="line">               ipset\</span><br><span class="line">               conntrack \</span><br><span class="line">               bash-completion-extras \</span><br><span class="line">               tcpdump \</span><br><span class="line">               wireshark \</span><br><span class="line">               bcc-tools \</span><br><span class="line">               perf \</span><br><span class="line">               trace-cmd \</span><br><span class="line">               systemtap \</span><br><span class="line">               nethogs \</span><br><span class="line">               lshw</span><br></pre></td></tr></table></figure><h3 id="检查GPU"><a href="#检查GPU" class="headerlink" title="检查GPU"></a>检查GPU</h3><h4 id="查看PCI设备"><a href="#查看PCI设备" class="headerlink" title="查看PCI设备"></a>查看PCI设备</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep -i nvidia</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00:08.0 3D controller: NVIDIA Corporation GP100GL [Tesla P100 PCIe 16GB] (rev a1)</span><br></pre></td></tr></table></figure><h4 id="查看硬件信息"><a href="#查看硬件信息" class="headerlink" title="查看硬件信息"></a>查看硬件信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lshw -numeric -C display</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">*-display:0               </span><br><span class="line">     description: VGA compatible controller</span><br><span class="line">     product: GD 5446 [1013:B8]</span><br><span class="line">     vendor: Cirrus Logic [1013]</span><br><span class="line">     physical id: 2</span><br><span class="line">     bus info: pci@0000:00:02.0</span><br><span class="line">     version: 00</span><br><span class="line">     width: 32 bits</span><br><span class="line">     clock: 33MHz</span><br><span class="line">     capabilities: vga_controller rom</span><br><span class="line">     configuration: driver=cirrus latency=0</span><br><span class="line">     resources: irq:0 memory:fa000000-fbffffff memory:fe850000-fe850fff memory:fe840000-fe84ffff</span><br><span class="line">*-display:1</span><br><span class="line">     description: 3D controller</span><br><span class="line">     product: GP100GL [Tesla P100 PCIe 16GB] [10DE:15F8]</span><br><span class="line">     vendor: NVIDIA Corporation [10DE]</span><br><span class="line">     physical id: 8</span><br><span class="line">     bus info: pci@0000:00:08.0</span><br><span class="line">     logical name: /dev/fb0</span><br><span class="line">     version: a1</span><br><span class="line">     width: 64 bits</span><br><span class="line">     clock: 33MHz</span><br><span class="line">     capabilities: pm msi pciexpress bus_master cap_list fb</span><br><span class="line">     configuration: depth=16 driver=nvidia latency=0 mode=1024x768 visual=truecolor xres=1024 yres=768</span><br><span class="line">     resources: iomemory:100-ff iomemory:140-13f irq:11 memory:fd000000-fdffffff memory:1000000000-13ffffffff memory:1400000000-1401ffffff</span><br></pre></td></tr></table></figure><h4 id="禁用nouveau驱动"><a href="#禁用nouveau驱动" class="headerlink" title="禁用nouveau驱动"></a>禁用nouveau驱动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo "blacklist nouveau" &gt; /etc/modprobe.d/blacklist-nouveau.conf</span><br><span class="line">echo "options nouveau modeset=0" &gt;&gt; /etc/modprobe.d/blacklist-nouveau.conf</span><br><span class="line">rmmod nouveau</span><br><span class="line">dracut --force</span><br></pre></td></tr></table></figure><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="安装GPU驱动"><a href="#安装GPU驱动" class="headerlink" title="安装GPU驱动"></a>安装GPU驱动</h2><h3 id="访问Nvidia官网"><a href="#访问Nvidia官网" class="headerlink" title="访问Nvidia官网"></a>访问Nvidia官网</h3><p><a href="https://www.nvidia.cn/Download/index.aspx?lang=cn" target="_blank" rel="noopener">Nvidia驱动程序下载</a></p><h3 id="下载驱动"><a href="#下载驱动" class="headerlink" title="下载驱动"></a>下载驱动</h3><h4 id="网页下载"><a href="#网页下载" class="headerlink" title="网页下载"></a>网页下载</h4><ol><li>产品类型<code>Tesla</code></li><li>产品类型<code>P-Series</code></li><li>产品家族<code>Tesla P100</code></li><li>操作系统<code>Linux 64-bit RHEL7</code></li><li>CUDA Toolkit<code>9.1</code></li><li>点击<code>搜索</code>，跳转到<code>驱动程序下载</code>页面</li><li>点击<code>下载</code>，跳转到<code>驱动下载</code></li><li>再次点击<code>下载</code>，保存驱动文件</li></ol><h4 id="命令行下载"><a href="#命令行下载" class="headerlink" title="命令行下载"></a>命令行下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -t 10 --timeout=10 http://cn.download.nvidia.com/tesla/390.116/nvidia-diag-driver-local-repo-rhel7-390.116-1.0-1.x86_64.rpm</span><br></pre></td></tr></table></figure><h4 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install nvidia-diag-driver-local-repo-rhel7-390.116-1.0-1.x86_64.rpm</span><br><span class="line">yum clean all</span><br><span class="line">yum install cuda-drivers-390.116-1.x86_64</span><br></pre></td></tr></table></figure><h4 id="重启-1"><a href="#重启-1" class="headerlink" title="重启"></a>重启</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="检查驱动情况"><a href="#检查驱动情况" class="headerlink" title="检查驱动情况"></a>检查驱动情况</h3><h4 id="检查是否加载开源驱动nouveau"><a href="#检查是否加载开源驱动nouveau" class="headerlink" title="检查是否加载开源驱动nouveau"></a>检查是否加载开源驱动nouveau</h4><blockquote><p>这里不应该有结果输出！</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure><h4 id="检查驱动版本"><a href="#检查驱动版本" class="headerlink" title="检查驱动版本"></a>检查驱动版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/driver/nvidia/version</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NVRM version: NVIDIA UNIX x86_64 Kernel Module  390.116  Sun Jan 27 07:21:36 PST 2019</span><br><span class="line">GCC version:  gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC)</span><br></pre></td></tr></table></figure><h4 id="查看GPU-Summary"><a href="#查看GPU-Summary" class="headerlink" title="查看GPU Summary"></a>查看GPU Summary</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 390.116                Driver Version: 390.116                   |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  Tesla P100-PCIE...  Off  | 00000000:00:08.0 Off |                    0 |</span><br><span class="line">| N/A   32C    P0    27W / 250W |      0MiB / 16280MiB |      3%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h4 id="查看GPU详细信息"><a href="#查看GPU详细信息" class="headerlink" title="查看GPU详细信息"></a>查看GPU详细信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi -i 0 -q</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">==============NVSMI LOG==============</span><br><span class="line"></span><br><span class="line">Driver Version                      : 390.116</span><br><span class="line">CUDA Version                        : 9.1</span><br><span class="line"></span><br><span class="line">Attached GPUs                       : 1</span><br><span class="line">GPU 00000000:00:08.0</span><br><span class="line">    Product Name                    : Tesla P100-PCIE-16GB</span><br><span class="line">    Product Brand                   : Tesla</span><br><span class="line">    Display Mode                    : Enabled</span><br><span class="line">    Display Active                  : Disabled</span><br><span class="line">    Persistence Mode                : Enabled</span><br><span class="line">    Accounting Mode                 : Disabled</span><br><span class="line">    Accounting Mode Buffer Size     : 4000</span><br><span class="line">    Driver Model</span><br><span class="line">        Current                     : N/A</span><br><span class="line">        Pending                     : N/A</span><br><span class="line">    Serial Number                   : 0322818005606</span><br><span class="line">    GPU UUID                        : GPU-81662b67-e58c-d9b6-763f-8adc65071cba</span><br><span class="line">    Minor Number                    : 0</span><br><span class="line">    VBIOS Version                   : 86.00.4D.00.01</span><br><span class="line">    MultiGPU Board                  : No</span><br><span class="line">    Board ID                        : 0x8</span><br><span class="line">    GPU Part Number                 : 900-2H400-0000-000</span><br><span class="line">    Inforom Version</span><br><span class="line">        Image Version               : H400.0201.00.08</span><br><span class="line">        OEM Object                  : 1.1</span><br><span class="line">        ECC Object                  : 4.1</span><br><span class="line">        Power Management Object     : N/A</span><br><span class="line">    GPU Operation Mode</span><br><span class="line">        Current                     : N/A</span><br><span class="line">        Pending                     : N/A</span><br><span class="line">    GPU Virtualization Mode</span><br><span class="line">        Virtualization mode         : Pass-Through</span><br><span class="line">    IBMNPU</span><br><span class="line">        Relaxed Ordering Mode       : N/A</span><br><span class="line">    PCI</span><br><span class="line">        Bus                         : 0x00</span><br><span class="line">        Device                      : 0x08</span><br><span class="line">        Domain                      : 0x0000</span><br><span class="line">        Device Id                   : 0x15F810DE</span><br><span class="line">        Bus Id                      : 00000000:00:08.0</span><br><span class="line">        Sub System Id               : 0x118F10DE</span><br><span class="line">        GPU Link Info</span><br><span class="line">            PCIe Generation</span><br><span class="line">                Max                 : 3</span><br><span class="line">                Current             : 3</span><br><span class="line">            Link Width</span><br><span class="line">                Max                 : 16x</span><br><span class="line">                Current             : 16x</span><br><span class="line">        Bridge Chip</span><br><span class="line">            Type                    : N/A</span><br><span class="line">            Firmware                : N/A</span><br><span class="line">        Replays since reset         : 0</span><br><span class="line">        Tx Throughput               : 0 KB/s</span><br><span class="line">        Rx Throughput               : 0 KB/s</span><br><span class="line">    Fan Speed                       : N/A</span><br><span class="line">    Performance State               : P0</span><br><span class="line">    Clocks Throttle Reasons</span><br><span class="line">        Idle                        : Not Active</span><br><span class="line">        Applications Clocks Setting : Not Active</span><br><span class="line">        SW Power Cap                : Not Active</span><br><span class="line">        HW Slowdown                 : Not Active</span><br><span class="line">            HW Thermal Slowdown     : Not Active</span><br><span class="line">            HW Power Brake Slowdown : Not Active</span><br><span class="line">        Sync Boost                  : Not Active</span><br><span class="line">        SW Thermal Slowdown         : Not Active</span><br><span class="line">        Display Clock Setting       : Not Active</span><br><span class="line">    FB Memory Usage</span><br><span class="line">        Total                       : 16280 MiB</span><br><span class="line">        Used                        : 8133 MiB</span><br><span class="line">        Free                        : 8147 MiB</span><br><span class="line">    BAR1 Memory Usage</span><br><span class="line">        Total                       : 16384 MiB</span><br><span class="line">        Used                        : 2 MiB</span><br><span class="line">        Free                        : 16382 MiB</span><br><span class="line">    Compute Mode                    : Default</span><br><span class="line">    Utilization</span><br><span class="line">        Gpu                         : 0 %</span><br><span class="line">        Memory                      : 0 %</span><br><span class="line">        Encoder                     : 0 %</span><br><span class="line">        Decoder                     : 0 %</span><br><span class="line">    Encoder Stats</span><br><span class="line">        Active Sessions             : 0</span><br><span class="line">        Average FPS                 : 0</span><br><span class="line">        Average Latency             : 0</span><br><span class="line">    FBC Stats</span><br><span class="line">        Active Sessions             : 0</span><br><span class="line">        Average FPS                 : 0</span><br><span class="line">        Average Latency             : 0</span><br><span class="line">    Ecc Mode</span><br><span class="line">        Current                     : Enabled</span><br><span class="line">        Pending                     : Enabled</span><br><span class="line">    ECC Errors</span><br><span class="line">        Volatile</span><br><span class="line">            Single Bit            </span><br><span class="line">                Device Memory       : 0</span><br><span class="line">                Register File       : 0</span><br><span class="line">                L1 Cache            : N/A</span><br><span class="line">                L2 Cache            : 0</span><br><span class="line">                Texture Memory      : 0</span><br><span class="line">                Texture Shared      : 0</span><br><span class="line">                CBU                 : N/A</span><br><span class="line">                Total               : 0</span><br><span class="line">            Double Bit            </span><br><span class="line">                Device Memory       : 0</span><br><span class="line">                Register File       : 0</span><br><span class="line">                L1 Cache            : N/A</span><br><span class="line">                L2 Cache            : 0</span><br><span class="line">                Texture Memory      : 0</span><br><span class="line">                Texture Shared      : 0</span><br><span class="line">                CBU                 : N/A</span><br><span class="line">                Total               : 0</span><br><span class="line">        Aggregate</span><br><span class="line">            Single Bit            </span><br><span class="line">                Device Memory       : 0</span><br><span class="line">                Register File       : 0</span><br><span class="line">                L1 Cache            : N/A</span><br><span class="line">                L2 Cache            : 0</span><br><span class="line">                Texture Memory      : 0</span><br><span class="line">                Texture Shared      : 0</span><br><span class="line">                CBU                 : N/A</span><br><span class="line">                Total               : 0</span><br><span class="line">            Double Bit            </span><br><span class="line">                Device Memory       : 0</span><br><span class="line">                Register File       : 0</span><br><span class="line">                L1 Cache            : N/A</span><br><span class="line">                L2 Cache            : 0</span><br><span class="line">                Texture Memory      : 0</span><br><span class="line">                Texture Shared      : 0</span><br><span class="line">                CBU                 : N/A</span><br><span class="line">                Total               : 0</span><br><span class="line">    Retired Pages</span><br><span class="line">        Single Bit ECC              : 0</span><br><span class="line">        Double Bit ECC              : 0</span><br><span class="line">        Pending Page Blacklist      : No</span><br><span class="line">    Temperature</span><br><span class="line">        GPU Current Temp            : 34 C</span><br><span class="line">        GPU Shutdown Temp           : 85 C</span><br><span class="line">        GPU Slowdown Temp           : 82 C</span><br><span class="line">        GPU Max Operating Temp      : N/A</span><br><span class="line">        Memory Current Temp         : N/A</span><br><span class="line">        Memory Max Operating Temp   : N/A</span><br><span class="line">    Power Readings</span><br><span class="line">        Power Management            : Supported</span><br><span class="line">        Power Draw                  : 31.01 W</span><br><span class="line">        Power Limit                 : 250.00 W</span><br><span class="line">        Default Power Limit         : 250.00 W</span><br><span class="line">        Enforced Power Limit        : 250.00 W</span><br><span class="line">        Min Power Limit             : 125.00 W</span><br><span class="line">        Max Power Limit             : 250.00 W</span><br><span class="line">    Clocks</span><br><span class="line">        Graphics                    : 1189 MHz</span><br><span class="line">        SM                          : 1189 MHz</span><br><span class="line">        Memory                      : 715 MHz</span><br><span class="line">        Video                       : 1063 MHz</span><br><span class="line">    Applications Clocks</span><br><span class="line">        Graphics                    : 1189 MHz</span><br><span class="line">        Memory                      : 715 MHz</span><br><span class="line">    Default Applications Clocks</span><br><span class="line">        Graphics                    : 1189 MHz</span><br><span class="line">        Memory                      : 715 MHz</span><br><span class="line">    Max Clocks</span><br><span class="line">        Graphics                    : 1328 MHz</span><br><span class="line">        SM                          : 1328 MHz</span><br><span class="line">        Memory                      : 715 MHz</span><br><span class="line">        Video                       : 1328 MHz</span><br><span class="line">    Max Customer Boost Clocks</span><br><span class="line">        Graphics                    : 1328 MHz</span><br><span class="line">    Clock Policy</span><br><span class="line">        Auto Boost                  : N/A</span><br><span class="line">        Auto Boost Default          : N/A</span><br><span class="line">    Processes</span><br></pre></td></tr></table></figure><h4 id="禁用本地YUM源"><a href="#禁用本地YUM源" class="headerlink" title="禁用本地YUM源"></a>禁用本地YUM源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --disable nvidia-diag-driver-local-390.116</span><br></pre></td></tr></table></figure><h2 id="安装CUDA环境"><a href="#安装CUDA环境" class="headerlink" title="安装CUDA环境"></a>安装CUDA环境</h2><h3 id="添加CUDA源"><a href="#添加CUDA源" class="headerlink" title="添加CUDA源"></a>添加CUDA源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo</span><br></pre></td></tr></table></figure><h3 id="修改CUDA源地址"><a href="#修改CUDA源地址" class="headerlink" title="修改CUDA源地址"></a>修改CUDA源地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -e 's,developer.download.nvidia.cn/compute/cuda/repos/,mirrors.aliyun.com/nvidia-cuda,g' \</span><br><span class="line">    -e 's,developer.download.nvidia.com/compute/cuda/repos,mirrors.aliyun.com/nvidia-cuda,g' \</span><br><span class="line">    -i /etc/yum.repos.d/cuda-rhel7.repo</span><br></pre></td></tr></table></figure><h3 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a>安装CUDA</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum install cuda-9-0</span><br></pre></td></tr></table></figure><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo 'export PATH=/usr/local/cuda/bin:$PATH' &gt;&gt; /etc/profile.d/cuda.sh</span><br><span class="line">echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' &gt;&gt; /etc/profile.d/cuda.sh</span><br><span class="line">source /etc/profile.d/cuda-9.0.sh</span><br></pre></td></tr></table></figure><h3 id="测试CUDA"><a href="#测试CUDA" class="headerlink" title="测试CUDA"></a>测试CUDA</h3><h4 id="查看安装路径"><a href="#查看安装路径" class="headerlink" title="查看安装路径"></a>查看安装路径</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ld /usr/local/cuda*</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lrwxrwxrwx  1 root root    8 Jan  1 11:08 /usr/local/cuda -&gt; cuda-9.0</span><br><span class="line">drwxr-xr-x 15 root root 4096 Jan  1 11:08 /usr/local/cuda-9.0</span><br></pre></td></tr></table></figure><h4 id="检查CUDA版本"><a href="#检查CUDA版本" class="headerlink" title="检查CUDA版本"></a>检查CUDA版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc --version</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class="line">Copyright (c) 2005-2017 NVIDIA Corporation</span><br><span class="line">Built on Fri_Sep__1_21:08:03_CDT_2017</span><br><span class="line">Cuda compilation tools, release 9.0, V9.0.176</span><br></pre></td></tr></table></figure><h4 id="运行Samples"><a href="#运行Samples" class="headerlink" title="运行Samples"></a>运行Samples</h4><p>以下两个测试结果都为<code>Result=PASS</code>，则说明CUDA安装成功</p><h5 id="deviceQuery"><a href="#deviceQuery" class="headerlink" title="deviceQuery"></a>deviceQuery</h5><h6 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/cuda/samples/1_Utilities/deviceQuery</span><br></pre></td></tr></table></figure><h6 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; ./deviceQuery</span><br></pre></td></tr></table></figure><h6 id="输出示例"><a href="#输出示例" class="headerlink" title="输出示例"></a>输出示例</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">./deviceQuery Starting...</span><br><span class="line"></span><br><span class="line"> CUDA Device Query (Runtime API) version (CUDART static linking)</span><br><span class="line"></span><br><span class="line">Detected 1 CUDA Capable device(s)</span><br><span class="line"></span><br><span class="line">Device 0: "Tesla P100-PCIE-16GB"</span><br><span class="line">  CUDA Driver Version / Runtime Version          9.1 / 9.0</span><br><span class="line">  CUDA Capability Major/Minor version number:    6.0</span><br><span class="line">  Total amount of global memory:                 16281 MBytes (17071734784 bytes)</span><br><span class="line">  (56) Multiprocessors, ( 64) CUDA Cores/MP:     3584 CUDA Cores</span><br><span class="line">  GPU Max Clock rate:                            1329 MHz (1.33 GHz)</span><br><span class="line">  Memory Clock rate:                             715 Mhz</span><br><span class="line">  Memory Bus Width:                              4096-bit</span><br><span class="line">  L2 Cache Size:                                 4194304 bytes</span><br><span class="line">  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)</span><br><span class="line">  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers</span><br><span class="line">  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers</span><br><span class="line">  Total amount of constant memory:               65536 bytes</span><br><span class="line">  Total amount of shared memory per block:       49152 bytes</span><br><span class="line">  Total number of registers available per block: 65536</span><br><span class="line">  Warp size:                                     32</span><br><span class="line">  Maximum number of threads per multiprocessor:  2048</span><br><span class="line">  Maximum number of threads per block:           1024</span><br><span class="line">  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)</span><br><span class="line">  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)</span><br><span class="line">  Maximum memory pitch:                          2147483647 bytes</span><br><span class="line">  Texture alignment:                             512 bytes</span><br><span class="line">  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)</span><br><span class="line">  Run time limit on kernels:                     No</span><br><span class="line">  Integrated GPU sharing Host Memory:            No</span><br><span class="line">  Support host page-locked memory mapping:       Yes</span><br><span class="line">  Alignment requirement for Surfaces:            Yes</span><br><span class="line">  Device has ECC support:                        Enabled</span><br><span class="line">  Device supports Unified Addressing (UVA):      Yes</span><br><span class="line">  Supports Cooperative Kernel Launch:            Yes</span><br><span class="line">  Supports MultiDevice Co-op Kernel Launch:      Yes</span><br><span class="line">  Device PCI Domain ID / Bus ID / location ID:   0 / 0 / 8</span><br><span class="line">  Compute Mode:</span><br><span class="line">     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;</span><br><span class="line"></span><br><span class="line">deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 9.1, CUDA Runtime Version = 9.0, NumDevs = 1</span><br><span class="line">Result = PASS</span><br></pre></td></tr></table></figure><h5 id="bandwidthTest"><a href="#bandwidthTest" class="headerlink" title="bandwidthTest"></a>bandwidthTest</h5><h6 id="切换目录-1"><a href="#切换目录-1" class="headerlink" title="切换目录"></a>切换目录</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/cuda/samples/1_Utilities/bandwidthTest</span><br></pre></td></tr></table></figure><h6 id="编译运行-1"><a href="#编译运行-1" class="headerlink" title="编译运行"></a>编译运行</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; ./bandwidthTest</span><br></pre></td></tr></table></figure><h6 id="输出示例-1"><a href="#输出示例-1" class="headerlink" title="输出示例"></a>输出示例</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[CUDA Bandwidth Test] - Starting...</span><br><span class="line">Running on...</span><br><span class="line"></span><br><span class="line"> Device 0: Tesla P100-PCIE-16GB</span><br><span class="line"> Quick Mode</span><br><span class="line"></span><br><span class="line"> Host to Device Bandwidth, 1 Device(s)</span><br><span class="line"> PINNED Memory Transfers</span><br><span class="line">   Transfer Size (Bytes)Bandwidth(MB/s)</span><br><span class="line">   3355443210731.5</span><br><span class="line"></span><br><span class="line"> Device to Host Bandwidth, 1 Device(s)</span><br><span class="line"> PINNED Memory Transfers</span><br><span class="line">   Transfer Size (Bytes)Bandwidth(MB/s)</span><br><span class="line">   3355443212833.8</span><br><span class="line"></span><br><span class="line"> Device to Device Bandwidth, 1 Device(s)</span><br><span class="line"> PINNED Memory Transfers</span><br><span class="line">   Transfer Size (Bytes)Bandwidth(MB/s)</span><br><span class="line">   33554432499641.4</span><br><span class="line"></span><br><span class="line">Result = PASS</span><br><span class="line"></span><br><span class="line">NOTE: The CUDA Samples are not meant for performance measurements. Results may vary when GPU Boost is enabled.</span><br></pre></td></tr></table></figure><h3 id="禁用CUDA源"><a href="#禁用CUDA源" class="headerlink" title="禁用CUDA源"></a>禁用CUDA源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --disable cuda</span><br></pre></td></tr></table></figure><h2 id="安装cuDNN"><a href="#安装cuDNN" class="headerlink" title="安装cuDNN"></a>安装cuDNN</h2><h3 id="确定cuDNN下载地址"><a href="#确定cuDNN下载地址" class="headerlink" title="确定cuDNN下载地址"></a>确定cuDNN下载地址</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>访问<a href="https://developer.nvidia.com/rdp/cudnn-archive" target="_blank" rel="noopener">cuDNN Archive</a>，登录之后下载</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>访问Nvidia托管在Gitlab的<a href="https://gitlab.com/nvidia/container-images/cuda" target="_blank" rel="noopener">容器项目地址</a>，根据自己操作系统的版本，找到对应的Dockerfile，提取cuDNN的下载地址</p><ul><li><a href="https://gitlab.com/nvidia/container-images/cuda/tree/centos6" target="_blank" rel="noopener">CentOS-6</a></li><li><a href="https://gitlab.com/nvidia/container-images/cuda/tree/centos7" target="_blank" rel="noopener">CentOS-7</a></li><li><a href="https://gitlab.com/nvidia/container-images/cuda/tree/ubuntu16.04" target="_blank" rel="noopener">Ubuntu-16.04</a></li><li><a href="https://gitlab.com/nvidia/container-images/cuda/tree/ubuntu18.04" target="_blank" rel="noopener">Ubuntu-18.04</a></li></ul><h3 id="下载cuDNN"><a href="#下载cuDNN" class="headerlink" title="下载cuDNN"></a>下载cuDNN</h3><blockquote><p>这里直接用CUDA-9.0能用到的、最新的<code>cuDNN 7.6.0.64</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https://developer.download.nvidia.cn/compute/redist/cudnn/v7.6.0/cudnn-9.0-linux-x64-v7.6.0.64.tgz | tar xz</span><br></pre></td></tr></table></figure><blockquote><p>阿里云服务器可以直接走阿里云内网下载</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">baseurl=$(curl -sSL http://100.100.100.200/latest/meta-data/source-address | head -1)</span><br><span class="line">download_url="$&#123;baseurl&#125;/opsx/ecs/linux/binary"</span><br><span class="line">cuda_big_version=9.0</span><br><span class="line">cudnn_version=7.6.0</span><br><span class="line">cudnn_file="cudnn-"$&#123;cuda_big_version&#125;"-linux-x64-v"$&#123;cudnn_version&#125;".tgz"</span><br><span class="line">wget -O - "$&#123;download_url&#125;/nvidia/cudnn/$&#123;cuda_big_version&#125;/$&#123;cudnn_file&#125;" | tar xz</span><br></pre></td></tr></table></figure><ul><li>cuda_big_version可以通过以下命令查询</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL "$(curl -sSL http://100.100.100.200/latest/meta-data/source-address | head -1)/opsx/ecs/linux/binary/nvidia/cudnn"</span><br></pre></td></tr></table></figure><ul><li>cudnn_version以通过以下命令查询</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL "$(curl -sSL http://100.100.100.200/latest/meta-data/source-address | head -1)/opsx/ecs/linux/binary/nvidia/cudnn/$&#123;cuda_big_version&#125;"</span><br></pre></td></tr></table></figure><h3 id="安装cuDNN-1"><a href="#安装cuDNN-1" class="headerlink" title="安装cuDNN"></a>安装cuDNN</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp cuda/include/cudnn.h /usr/local/cuda-9.0/include</span><br><span class="line">cp cuda/lib64/libcudnn.so.7.6.0 cuda/lib64/libcudnn_static.a /usr/local/cuda-9.0/lib64</span><br><span class="line">cd /usr/local/cuda-9.0/lib64</span><br><span class="line">ln -sv libcudnn.so.7.6.0 libcudnn.so</span><br><span class="line">ln -sv libcudnn.so.7.6.0 libcudnn.so.7</span><br><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure><h3 id="验证cuDNN"><a href="#验证cuDNN" class="headerlink" title="验证cuDNN"></a>验证cuDNN</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://github.com/wilhelmguo/cudnn_samples_v7.git</span><br><span class="line">cd cudnn_samples_v7/mnistCUDNN</span><br><span class="line">make &amp;&amp; ./mnistCUDNN</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">cudnnGetVersion() : 7600 , CUDNN_VERSION from cudnn.h : 7600 (7.6.0)</span><br><span class="line">Host compiler version : GCC 4.8.5</span><br><span class="line">There are 1 CUDA capable devices on your machine :</span><br><span class="line">device 0 : sms 56  Capabilities 6.0, SmClock 1328.5 Mhz, MemSize (Mb) 16280, MemClock 715.0 Mhz, Ecc=1, boardGroupID=0</span><br><span class="line">Using device 0</span><br><span class="line"></span><br><span class="line">Testing single precision</span><br><span class="line">Loading image data/one_28x28.pgm</span><br><span class="line">Performing forward propagation ...</span><br><span class="line">Testing cudnnGetConvolutionForwardAlgorithm ...</span><br><span class="line">Fastest algorithm is Algo 1</span><br><span class="line">Testing cudnnFindConvolutionForwardAlgorithm ...</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.040256 time requiring 0 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.048864 time requiring 3464 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.066016 time requiring 57600 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.090944 time requiring 2057744 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 0.115776 time requiring 203008 memory</span><br><span class="line">Resulting weights from Softmax:</span><br><span class="line">0.0000000 0.9999399 0.0000000 0.0000000 0.0000561 0.0000000 0.0000012 0.0000017 0.0000010 0.0000000 </span><br><span class="line">Loading image data/three_28x28.pgm</span><br><span class="line">Performing forward propagation ...</span><br><span class="line">Resulting weights from Softmax:</span><br><span class="line">0.0000000 0.0000000 0.0000000 0.9999288 0.0000000 0.0000711 0.0000000 0.0000000 0.0000000 0.0000000 </span><br><span class="line">Loading image data/five_28x28.pgm</span><br><span class="line">Performing forward propagation ...</span><br><span class="line">Resulting weights from Softmax:</span><br><span class="line">0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 0.9999820 0.0000154 0.0000000 0.0000012 0.0000006 </span><br><span class="line"></span><br><span class="line">Result of classification: 1 3 5</span><br><span class="line"></span><br><span class="line">Test passed!</span><br><span class="line"></span><br><span class="line">Testing half precision (math in single precision)</span><br><span class="line">Loading image data/one_28x28.pgm</span><br><span class="line">Performing forward propagation ...</span><br><span class="line">Testing cudnnGetConvolutionForwardAlgorithm ...</span><br><span class="line">Fastest algorithm is Algo 1</span><br><span class="line">Testing cudnnFindConvolutionForwardAlgorithm ...</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.045184 time requiring 0 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.051328 time requiring 3464 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.067872 time requiring 28800 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.087776 time requiring 2057744 memory</span><br><span class="line">^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 0.112032 time requiring 207360 memory</span><br><span class="line">Resulting weights from Softmax:</span><br><span class="line">0.0000001 1.0000000 0.0000001 0.0000000 0.0000563 0.0000001 0.0000012 0.0000017 0.0000010 0.0000001 </span><br><span class="line">Loading image data/three_28x28.pgm</span><br><span class="line">Performing forward propagation ...</span><br><span class="line">Resulting weights from Softmax:</span><br><span class="line">0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000714 0.0000000 0.0000000 0.0000000 0.0000000 </span><br><span class="line">Loading image data/five_28x28.pgm</span><br><span class="line">Performing forward propagation ...</span><br><span class="line">Resulting weights from Softmax:</span><br><span class="line">0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 1.0000000 0.0000154 0.0000000 0.0000012 0.0000006 </span><br><span class="line"></span><br><span class="line">Result of classification: 1 3 5</span><br><span class="line"></span><br><span class="line">Test passed!</span><br></pre></td></tr></table></figure><h2 id="设置GPU"><a href="#设置GPU" class="headerlink" title="设置GPU"></a>设置GPU</h2><h3 id="手动设置"><a href="#手动设置" class="headerlink" title="手动设置"></a>手动设置</h3><h4 id="开启Persistence-Mode"><a href="#开启Persistence-Mode" class="headerlink" title="开启Persistence Mode"></a>开启Persistence Mode</h4><ul><li>在Linux平台上，可以设置PersistenceMode让Nvidia GPU驱动在空闲的时候依然保持加载状态。</li><li>此功能可以加快频繁运行短任务，避免频繁加载驱动</li><li>会提高待机功耗</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvidia-persistenced</span><br><span class="line">nvidia-smi -pm 1</span><br></pre></td></tr></table></figure><h4 id="禁用受限模式"><a href="#禁用受限模式" class="headerlink" title="禁用受限模式"></a>禁用受限模式</h4><ul><li>允许非管理员运行的CUDA程序调整频率</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi -acp 0</span><br></pre></td></tr></table></figure><h4 id="禁用GPU-Boost"><a href="#禁用GPU-Boost" class="headerlink" title="禁用GPU Boost"></a>禁用GPU Boost</h4><ul><li>GPU Boost功能可以让GPU根据<code>负载、散热、供电</code>动态超频运行</li><li>GPU Boost功能需要管理员权限才能调用，这里把权限放开给非管理员程序使用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi --auto-boost-permission=0</span><br><span class="line">nvidia-smi --auto-boost-default=0</span><br></pre></td></tr></table></figure><h4 id="设置GPU运行频率"><a href="#设置GPU运行频率" class="headerlink" title="设置GPU运行频率"></a>设置GPU运行频率</h4><ul><li>获取GPU支持的频率</li><li>设置GPU运行频率</li><li><code>-i</code>参数指定显卡ID</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CLOCK=$(nvidia-smi -i 0 --query-supported-clocks=mem,gr --format=csv,noheader| head -n1 | awk 'BEGIN &#123; FS=" " &#125; ; &#123; print $1 "," $3 &#125;')</span><br><span class="line">nvidia-smi -ac $CLOCK -i 0</span><br></pre></td></tr></table></figure><h4 id="加载Nvidia模块"><a href="#加载Nvidia模块" class="headerlink" title="加载Nvidia模块"></a>加载Nvidia模块</h4><ul><li><font color="red">按需调整</font></li><li>这里可以独立于Linux发行版的方式创建Nvidia设备文件</li><li><code>create-nvidia-device-file</code>创建给定编号的Nvidia设备文件</li><li><code>unified-memory</code>加载<code>Nvidia Unified Memory</code>模块</li><li><code>modeset</code>加载Nvidia内核模块并创建设备文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-modprobe --unified-memory --create-nvidia-device-file=0 --modeset</span><br></pre></td></tr></table></figure><h3 id="开机自动设置"><a href="#开机自动设置" class="headerlink" title="开机自动设置"></a>开机自动设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/rc.local &lt;&lt;EOF</span><br><span class="line">nvidia-smi -pm 1 || true</span><br><span class="line">nvidia-smi -acp 0 || true</span><br><span class="line">nvidia-smi --auto-boost-default=0 || true</span><br><span class="line">nvidia-smi --auto-boost-permission=0 || true</span><br><span class="line"><span class="meta">#</span><span class="bash">nvidia-modprobe --unified-memory --create-nvidia-device-file=0 --modeset || <span class="literal">true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">nvidia-smi -ac $(nvidia-smi -i 0 --query-supported-clocks=mem,gr --format=csv,noheader| head -n1 | awk <span class="string">'BEGIN &#123; FS=" " &#125; ; &#123; print $1 "," $3 &#125;'</span>) -i 0</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="使用阿里云自动安装脚本"><a href="#使用阿里云自动安装脚本" class="headerlink" title="使用阿里云自动安装脚本"></a>使用阿里云自动安装脚本</h1><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><ul><li>阿里云在创建GPU计算型实例时，可以通过metadata的方式传入初始化脚本，实现自动安装Nvidia GPU驱动和CUDA</li><li>详细流程可以看阿里云的<a href="https://help.aliyun.com/document_detail/60149.html?spm=a2c4g.11186623.6.609.31771bd1cL1PMA" target="_blank" rel="noopener">操作文档</a></li></ul><h2 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h2><ul><li>驱动版本<code>390.116</code></li><li>CUDA版本<code>9.0.176</code></li><li>cuDNN版本<code>7.5.0</code>（阿里云没提供<code>7.6.0.64</code>的版本，根据文档选择了最新的<code>7.5.0</code>）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DRIVER_VERSION="390.116"</span><br><span class="line">CUDA_VERSION="9.0.176"</span><br><span class="line">CUDNN_VERSION="7.5.0"</span><br><span class="line">IS_INSTALL_RAPIDS="FALSE"</span><br><span class="line">IS_INSTALL_PERSEUS="TRUE"</span><br><span class="line"></span><br><span class="line">INSTALL_DIR="/root/auto_install"</span><br><span class="line">log=$&#123;INSTALL_DIR&#125;/nvidia_install.log</span><br><span class="line"></span><br><span class="line">mkdir $INSTALL_DIR &amp;&amp; cd $INSTALL_DIR</span><br><span class="line">script_download_url=$(curl http://100.100.100.200/latest/meta-data/source-address | head -1)"/opsx/ecs/linux/binary/script/auto_install.sh"</span><br><span class="line">wget -t 10 --timeout=10 $script_download_url</span><br><span class="line">bash "$&#123;INSTALL_DIR&#125;/auto_install.sh" $DRIVER_VERSION $CUDA_VERSION $CUDNN_VERSION $IS_INSTALL_PERSEUS $IS_INSTALL_RAPIDS</span><br></pre></td></tr></table></figure><h1 id="Nvidia-Docker"><a href="#Nvidia-Docker" class="headerlink" title="Nvidia-Docker"></a>Nvidia-Docker</h1><h2 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h2><ul><li>安装<code>Docker-CE Stable</code></li><li>安装<code>Nvidia-Docker</code></li></ul><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><blockquote><p>这里以docker-ce 最新版本为例</p></blockquote><ul><li>清理旧Docker包</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove -y docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine</span><br></pre></td></tr></table></figure><ul><li>安装Docker依赖包</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><ul><li>添加Docker-CE源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><ul><li>安装Docker-CE</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce -y</span><br></pre></td></tr></table></figure><ul><li>配置Docker启动参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    "exec-opts": [</span><br><span class="line">    "native.cgroupdriver=systemd"</span><br><span class="line">    ],</span><br><span class="line">    "registry-mirrors": [</span><br><span class="line">    "https://pqbap4ya.mirror.aliyuncs.com"</span><br><span class="line">    ],</span><br><span class="line">    "insecure-registries": [],</span><br><span class="line">    "log-driver": "json-file",</span><br><span class="line">    "log-opts": &#123;</span><br><span class="line">        "max-size": "100m",</span><br><span class="line">        "max-file": "3"</span><br><span class="line">    &#125;,</span><br><span class="line">    "storage-driver": "overlay2",</span><br><span class="line">    "storage-opts": [</span><br><span class="line">        "overlay2.override_kernel_check=true"</span><br><span class="line">    ],</span><br><span class="line">    "data-root": "/var/lib/docker",</span><br><span class="line">    "max-concurrent-downloads": 10</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>设置Docker命令补全</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/bash-completion/completions/docker /etc/bash_completion.d/</span><br></pre></td></tr></table></figure><ul><li>禁用Docker-CE源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --disable docker-ce-stable</span><br></pre></td></tr></table></figure><ul><li>启动Docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now docker.service</span><br></pre></td></tr></table></figure><ul><li>检查Docker信息</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><h2 id="安装Nvidia-Docker"><a href="#安装Nvidia-Docker" class="headerlink" title="安装Nvidia-Docker"></a>安装Nvidia-Docker</h2><ul><li>添加YUM源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">distribution=$(. /etc/os-release;echo $ID$VERSION_ID)</span><br><span class="line">curl -sSL https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.repo | tee /etc/yum.repos.d/nvidia-docker.repo</span><br></pre></td></tr></table></figure><ul><li>安装NVIDIA Container Toolkit</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nvidia-container-toolkit</span><br></pre></td></tr></table></figure><ul><li>重启Docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><h2 id="测试容器调用GPU"><a href="#测试容器调用GPU" class="headerlink" title="测试容器调用GPU"></a>测试容器调用GPU</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm --gpus all nvidia/cuda:9.0-base nvidia-smi</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Unable to find image 'nvidia/cuda:9.0-base' locally</span><br><span class="line">9.0-base: Pulling from nvidia/cuda</span><br><span class="line">976a760c94fc: Pull complete </span><br><span class="line">c58992f3c37b: Pull complete </span><br><span class="line">0ca0e5e7f12e: Pull complete </span><br><span class="line">f2a274cc00ca: Pull complete </span><br><span class="line">708a53113e13: Pull complete </span><br><span class="line">371ddc2ca87b: Pull complete </span><br><span class="line">f81888eb6932: Pull complete </span><br><span class="line">Digest: sha256:56bfa4e0b6d923bf47a71c91b4e00b62ea251a04425598d371a5807d6ac471cb</span><br><span class="line">Status: Downloaded newer image for nvidia/cuda:9.0-base</span><br><span class="line">      </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 390.116                Driver Version: 390.116                   |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  Tesla P100-PCIE...  On   | 00000000:00:08.0 Off |                    0 |</span><br><span class="line">| N/A   33C    P0    25W / 250W |      0MiB / 16280MiB |      0%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;理论上适用于其他云平台的&lt;code&gt;GPU计算型实例&lt;/code&gt;或者&lt;code&gt;自建GPU计算服务器&lt;/code&gt;&lt;/li&gt;&lt;l
      
    
    </summary>
    
      <category term="Linux" scheme="https://luanlengli.github.io/categories/Linux/"/>
    
      <category term="CUDA" scheme="https://luanlengli.github.io/categories/Linux/CUDA/"/>
    
    
      <category term="Linux" scheme="https://luanlengli.github.io/tags/Linux/"/>
    
      <category term="CUDA" scheme="https://luanlengli.github.io/tags/CUDA/"/>
    
  </entry>
  
  <entry>
    <title>从零搭建基于Istio的ServiceMesh-03流量管理</title>
    <link href="https://luanlengli.github.io/2019/12/19/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EIstio%E7%9A%84ServiceMesh-03%E6%B5%81%E9%87%8F%E7%AE%A1%E7%90%86.html"/>
    <id>https://luanlengli.github.io/2019/12/19/从零搭建基于Istio的ServiceMesh-03流量管理.html</id>
    <published>2019-12-19T07:16:33.000Z</published>
    <updated>2020-03-20T02:39:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>istio版本号<code>1.4.2</code></li><li>k8s集群版本<code>v1.14.8</code></li><li>istio在<code>1.4</code>提供了基于istioctl命令直接部署的功能，这里使用istioctl部署istio。<ul><li>自带配置校验、和丰富的自定义配置选项</li><li>API版本号还在<font color="red">Alpha阶段</font>，<code>install.istio.io/v1alpha2</code>，请自行判断是否适用</li><li>部署要求<ul><li>至少得有Kubernetes集群</li><li>Istio-1.4版本在<code>1.13</code>、<code>1.14</code>、<code>1.15</code>的k8s集群上是做过测试通过的</li><li>最新的<code>1.16</code>没在官方文档里注明，应该也是可以用的。<a href="https://istio.io/docs/setup/platform-setup/" target="_blank" rel="noopener">官方说明在此</a></li></ul></li></ul></li><li>这里通过官方示例熟悉一下istio的ServiceMesh特性</li></ul><h1 id="流量管理-Traffic-Management"><a href="#流量管理-Traffic-Management" class="headerlink" title="流量管理 Traffic Management"></a>流量管理 Traffic Management</h1><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><ul><li>流量管理包含了<code>Ingress</code>和<code>Egress</code>，这里单独拎出来介绍，避免章节篇幅太长</li><li>下面继续</li></ul><h2 id="请求路由-Request-Routing"><a href="#请求路由-Request-Routing" class="headerlink" title="请求路由 Request Routing"></a>请求路由 Request Routing</h2><h3 id="部署VirtualService"><a href="#部署VirtualService" class="headerlink" title="部署VirtualService"></a>部署VirtualService</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">details</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">details</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">details</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="检查VirtualService"><a href="#检查VirtualService" class="headerlink" title="检查VirtualService"></a>检查VirtualService</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get virtualservice.networking.istio.io</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NAME          GATEWAYS             HOSTS           AGE</span><br><span class="line">bookinfo      [bookinfo-gateway]   [*]             28m</span><br><span class="line">details                            [details]       43s</span><br><span class="line">productpage                        [productpage]   43s</span><br><span class="line">ratings                            [ratings]       43s</span><br><span class="line">reviews                            [reviews]       43s</span><br></pre></td></tr></table></figure><h3 id="检查DestinationRule"><a href="#检查DestinationRule" class="headerlink" title="检查DestinationRule"></a>检查DestinationRule</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get destinationrules.networking.istio.io</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NAME          HOST          AGE</span><br><span class="line">details       details       11m</span><br><span class="line">productpage   productpage   11m</span><br><span class="line">ratings       ratings       11m</span><br><span class="line">reviews       reviews       11m</span><br></pre></td></tr></table></figure><h3 id="测试路由配置"><a href="#测试路由配置" class="headerlink" title="测试路由配置"></a>测试路由配置</h3><ul><li><p>通过浏览器打开<code>http://${GATEWAY_URL}/productpage</code></p></li><li><p>会发现无论刷新多少次页面都只能访问到<code>reviewers-v1</code>的页面。</p></li><li><p>即所有流量都被路由到了<code>reviewers:v1</code></p></li></ul><h3 id="配置新的VirtualService"><a href="#配置新的VirtualService" class="headerlink" title="配置新的VirtualService"></a>配置新的VirtualService</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - match:</span></span><br><span class="line"><span class="attr">    - headers:</span></span><br><span class="line"><span class="attr">        end-user:</span></span><br><span class="line"><span class="attr">          exact:</span> <span class="string">jason</span></span><br><span class="line"><span class="attr">    route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br></pre></td></tr></table></figure><h3 id="测试新的配置"><a href="#测试新的配置" class="headerlink" title="测试新的配置"></a>测试新的配置</h3><ul><li>不登陆，返回的页面依旧是<code>reviews-v1</code></li><li>点击右上角的<code>sign in</code>，登录之后，返回的页面是<code>reviews-v2</code><ul><li>UserName填入<code>jason</code></li><li>Password不填或者随便填</li></ul></li><li>登录其他用户，返回的页面是<code>reviews-v1</code></li></ul><h3 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h3><blockquote><p>通过配置<code>VirtualService</code>将请求的数据流修改如下</p></blockquote><ul><li><code>productpage</code> → <code>reviews:v2</code> → <code>ratings</code> (only for user <code>jason</code>)</li><li><code>productpage</code> → <code>reviews:v1</code> (for everyone else)</li></ul><h3 id="清理现场"><a href="#清理现场" class="headerlink" title="清理现场"></a>清理现场</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><h2 id="HTTP故障注入-HTTP-Fault-Injection"><a href="#HTTP故障注入-HTTP-Fault-Injection" class="headerlink" title="HTTP故障注入 HTTP Fault Injection"></a>HTTP故障注入 HTTP Fault Injection</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>部署VirtualService</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml</span><br></pre></td></tr></table></figure><ul><li>上面两个YAML文件会将请求的数据流变成这样(这一步跟流量管理一样)<ul><li><code>productpage</code> → <code>reviews:v2</code> → <code>ratings</code> (only for user <code>jason</code>)</li><li><code>productpage</code> → <code>reviews:v1</code> (for everyone else)</li></ul></li></ul><h3 id="注入HTTP延迟错误"><a href="#注入HTTP延迟错误" class="headerlink" title="注入HTTP延迟错误"></a>注入HTTP延迟错误</h3><h4 id="实验设计"><a href="#实验设计" class="headerlink" title="实验设计"></a>实验设计</h4><ul><li>为<code>jason</code>用户访问<code>reviews-v2</code>和<code>rateings</code>注入7s延迟</li><li><code>reviews-v2</code>服务，代码里设置了10s的连接超时时间</li><li>理论上，注入7s延迟不会导致<code>reviews-v2</code>超时出错</li></ul><h4 id="创建故障注入规则"><a href="#创建故障注入规则" class="headerlink" title="创建故障注入规则"></a>创建故障注入规则</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-ratings-test-delay.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - match:</span></span><br><span class="line"><span class="attr">    - headers:</span></span><br><span class="line"><span class="attr">        end-user:</span></span><br><span class="line"><span class="attr">          exact:</span> <span class="string">jason</span></span><br><span class="line"><span class="attr">    fault:</span></span><br><span class="line"><span class="attr">      delay:</span></span><br><span class="line"><span class="attr">        percentage:</span></span><br><span class="line"><span class="attr">          value:</span> <span class="number">100.0</span></span><br><span class="line"><span class="attr">        fixedDelay:</span> <span class="number">7</span><span class="string">s</span></span><br><span class="line"><span class="attr">    route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br></pre></td></tr></table></figure><h4 id="测试故障注入"><a href="#测试故障注入" class="headerlink" title="测试故障注入"></a>测试故障注入</h4><ul><li>浏览器打开<code>http://${GATEWAY_URL}/productpage</code></li><li>按<code>F12</code>打开开发者工具，切换到<code>network</code>标签</li><li>登录<code>jason</code>用户，等待7s之后可以看到页面返回以下内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error fetching product reviews!</span><br><span class="line">Sorry, product reviews are currently unavailable for this book.</span><br></pre></td></tr></table></figure><ul><li>在开发者工具里面能看到请求<code>productpage</code>的时间是6s</li><li>登录其他用户或者不登陆，刷新页面并不会引入延迟</li></ul><h4 id="技术总结-1"><a href="#技术总结-1" class="headerlink" title="技术总结"></a>技术总结</h4><ol><li><code>reviews-v2</code>服务，代码里面设置10s超时，延时7s并不会引发报错</li><li><code>productpage</code>和<code>ratings</code>服务之间的超时时间是3s，重试次数为1，因此只能容忍3s+3s总共6s的延迟，这里设置7s，导致超时出错</li><li>这样就可以通过延迟注入，来检查服务间调用的超时时间是否合理</li></ol><h4 id="清理现场-1"><a href="#清理现场-1" class="headerlink" title="清理现场"></a>清理现场</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><h3 id="注入HTTP状态码错误"><a href="#注入HTTP状态码错误" class="headerlink" title="注入HTTP状态码错误"></a>注入HTTP状态码错误</h3><h4 id="实验设计-1"><a href="#实验设计-1" class="headerlink" title="实验设计"></a>实验设计</h4><ul><li>为<code>jason</code>用户引入HTTP状态码错误</li></ul><h4 id="创建故障注入规则-1"><a href="#创建故障注入规则-1" class="headerlink" title="创建故障注入规则"></a>创建故障注入规则</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-ratings-test-abort.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - match:</span></span><br><span class="line"><span class="attr">    - headers:</span></span><br><span class="line"><span class="attr">        end-user:</span></span><br><span class="line"><span class="attr">          exact:</span> <span class="string">jason</span></span><br><span class="line"><span class="attr">    fault:</span></span><br><span class="line"><span class="attr">      abort:</span></span><br><span class="line"><span class="attr">        percentage:</span></span><br><span class="line"><span class="attr">          value:</span> <span class="number">100.0</span></span><br><span class="line"><span class="attr">        httpStatus:</span> <span class="number">500</span></span><br><span class="line"><span class="attr">    route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br></pre></td></tr></table></figure><h4 id="测试故障注入-1"><a href="#测试故障注入-1" class="headerlink" title="测试故障注入"></a>测试故障注入</h4><ul><li>浏览器打开<code>http://${GATEWAY_URL}/productpage</code></li><li>按<code>F12</code>打开开发者工具，切换到<code>network</code>标签</li><li>登录<code>jason</code>用户，可以看到<ul><li>页面很快就加载完毕</li><li><code>ratings</code>服务不可用，提示<font color="red"><em>Ratings service is currently unavailable</em></font></li></ul></li><li>登录其他用户或者不登陆，刷新页面并不会看到此报错信息</li></ul><h4 id="技术总结-2"><a href="#技术总结-2" class="headerlink" title="技术总结"></a>技术总结</h4><ol><li>HTTP状态码注入只影响<code>jason</code>用户，由于没有引入延迟错误，所以是立刻返回<code>HTTP 500</code></li><li>在浏览器开发者工具的<code>network</code>标签里，看不到请求有<code>HTTP500</code>状态码</li><li>查看<code>reviews-v2</code>服务的日志，可以看到日志，证明是在<code>reviews-v2</code>和<code>ratings</code>之间注入故障的</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: unable to contact http://ratings:9080/ratings got status of 500</span><br></pre></td></tr></table></figure><h3 id="清理现场-2"><a href="#清理现场-2" class="headerlink" title="清理现场"></a>清理现场</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><h2 id="HTTP流量切换-HTTP-Traffic-Shifting"><a href="#HTTP流量切换-HTTP-Traffic-Shifting" class="headerlink" title="HTTP流量切换 HTTP Traffic Shifting"></a>HTTP流量切换 HTTP Traffic Shifting</h2><h3 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>部署bookinfo应用</li><li>配置默认的DestinationRule</li></ul><h3 id="配置所有流量走v1服务"><a href="#配置所有流量走v1服务" class="headerlink" title="配置所有流量走v1服务"></a>配置所有流量走v1服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><h3 id="配置权重路由"><a href="#配置权重路由" class="headerlink" title="配置权重路由"></a>配置权重路由</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-reviews-50-v3.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">      weight:</span> <span class="number">50</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v3</span></span><br><span class="line"><span class="attr">      weight:</span> <span class="number">50</span></span><br></pre></td></tr></table></figure><h3 id="验证流量切换"><a href="#验证流量切换" class="headerlink" title="验证流量切换"></a>验证流量切换</h3><ul><li>浏览器打开<code>http://${GATEWAY_URL}/productpage</code></li><li>不断按<code>ctrl+F5</code>刷新页面，可以看到页面不断在<code>reviews-v1</code>和<code>reviews-v3</code>之间切换</li></ul><h3 id="技术总结-3"><a href="#技术总结-3" class="headerlink" title="技术总结"></a>技术总结</h3><ul><li>在所有流量都走v1的情况下，通过权重路由的方式，将部分流量切换到了新版本</li><li>通过流量比例的调整，达到灰度更新的目的</li></ul><h3 id="清理现场-3"><a href="#清理现场-3" class="headerlink" title="清理现场"></a>清理现场</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><h2 id="TCP流量切换-TCP-Traffic-Shifting"><a href="#TCP流量切换-TCP-Traffic-Shifting" class="headerlink" title="TCP流量切换 TCP Traffic Shifting"></a>TCP流量切换 TCP Traffic Shifting</h2><h3 id="环境准备-2"><a href="#环境准备-2" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li><p>部署多版本<code>TCP-echo</code>服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/tcp-echo/tcp-echo-services.yaml</span><br></pre></td></tr></table></figure></li><li><p>检查部署情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get pod -l app=tcp-echo</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NAME                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">tcp-echo-5ff7fd7996-ds72s      2/2     Running   0          40m</span><br><span class="line">tcp-echo-v1-b559f69bd-5mbj8    2/2     Running   0          3m48s</span><br><span class="line">tcp-echo-v2-547bb5f4d5-trlh9   2/2     Running   0          3m48s</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置默认TCP流量路由到v1版本"><a href="#配置默认TCP流量路由到v1版本" class="headerlink" title="配置默认TCP流量路由到v1版本"></a>配置默认TCP流量路由到v1版本</h3><blockquote><p>这里把TCP流量路由到<code>v1</code>版本</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/tcp-echo/tcp-echo-all-v1.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Gateway</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tcp-echo-gateway</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    istio:</span> <span class="string">ingressgateway</span></span><br><span class="line"><span class="attr">  servers:</span></span><br><span class="line"><span class="attr">  - port:</span></span><br><span class="line"><span class="attr">      number:</span> <span class="number">31400</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">tcp</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    hosts:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"*"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tcp-echo-destination</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">tcp-echo</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tcp-echo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"*"</span></span><br><span class="line"><span class="attr">  gateways:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">tcp-echo-gateway</span></span><br><span class="line"><span class="attr">  tcp:</span></span><br><span class="line"><span class="attr">  - match:</span></span><br><span class="line"><span class="attr">    - port:</span> <span class="number">31400</span></span><br><span class="line"><span class="attr">    route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">tcp-echo</span></span><br><span class="line"><span class="attr">        port:</span></span><br><span class="line"><span class="attr">          number:</span> <span class="number">9000</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br></pre></td></tr></table></figure><h3 id="测试TCP路由"><a href="#测试TCP路由" class="headerlink" title="测试TCP路由"></a>测试TCP路由</h3><ol><li>获取<code>IngressGateway</code>访问方式，这里的<code>istio-ingressGateway</code>使用<code>NodePort</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export INGRESS_HOST=$(kubectl get pod -l istio=ingressgateway -n istio-system -o jsonpath='&#123;.items[0].status.hostIP&#125;')</span><br><span class="line">export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="tcp")].NodePort&#125;')</span><br></pre></td></tr></table></figure><ol start="2"><li>访问<code>TCP-echo</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;1..10&#125;;do /bin/bash -c "(date ; sleep 1) | nc $INGRESS_HOST $INGRESS_PORT";done</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">one Mon Dec 23 10:13:54 CST 2019</span><br><span class="line">one Mon Dec 23 10:13:55 CST 2019</span><br><span class="line">one Mon Dec 23 10:13:56 CST 2019</span><br><span class="line">one Mon Dec 23 10:13:57 CST 2019</span><br><span class="line">one Mon Dec 23 10:13:58 CST 2019</span><br><span class="line">one Mon Dec 23 10:13:59 CST 2019</span><br><span class="line">one Mon Dec 23 10:14:00 CST 2019</span><br><span class="line">one Mon Dec 23 10:14:01 CST 2019</span><br><span class="line">one Mon Dec 23 10:14:02 CST 2019</span><br><span class="line">one Mon Dec 23 10:14:03 CST 2019</span><br></pre></td></tr></table></figure><blockquote><font color="red">可以看到输出的信息是以<code>one</code>开头的，证明访问的是v1的服务</font></blockquote><h3 id="配置新的TCP流量路由"><a href="#配置新的TCP流量路由" class="headerlink" title="配置新的TCP流量路由"></a>配置新的TCP流量路由</h3><blockquote><p>把20%的流量路由到<code>tcp-echo:v2</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/tcp-echo/tcp-echo-20-v2.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tcp-echo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"*"</span></span><br><span class="line"><span class="attr">  gateways:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">tcp-echo-gateway</span></span><br><span class="line"><span class="attr">  tcp:</span></span><br><span class="line"><span class="attr">  - match:</span></span><br><span class="line"><span class="attr">    - port:</span> <span class="number">31400</span></span><br><span class="line"><span class="attr">    route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">tcp-echo</span></span><br><span class="line"><span class="attr">        port:</span></span><br><span class="line"><span class="attr">          number:</span> <span class="number">9000</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">      weight:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">tcp-echo</span></span><br><span class="line"><span class="attr">        port:</span></span><br><span class="line"><span class="attr">          number:</span> <span class="number">9000</span></span><br><span class="line"><span class="attr">        subset:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">      weight:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h3 id="测试新的TCP路由"><a href="#测试新的TCP路由" class="headerlink" title="测试新的TCP路由"></a>测试新的TCP路由</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;1..10&#125;;do /bin/bash -c "(date ; sleep 1) | nc $INGRESS_HOST $INGRESS_PORT";done</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">one Mon Dec 23 10:19:14 CST 2019</span><br><span class="line">one Mon Dec 23 10:19:15 CST 2019</span><br><span class="line">two Mon Dec 23 10:19:16 CST 2019</span><br><span class="line">one Mon Dec 23 10:19:17 CST 2019</span><br><span class="line">one Mon Dec 23 10:19:18 CST 2019</span><br><span class="line">one Mon Dec 23 10:19:19 CST 2019</span><br><span class="line">one Mon Dec 23 10:19:20 CST 2019</span><br><span class="line">two Mon Dec 23 10:19:21 CST 2019</span><br><span class="line">one Mon Dec 23 10:19:22 CST 2019</span><br><span class="line">one Mon Dec 23 10:19:23 CST 2019</span><br></pre></td></tr></table></figure><h3 id="技术总结-4"><a href="#技术总结-4" class="headerlink" title="技术总结"></a>技术总结</h3><ul><li><code>istio-ingressGateway</code>通过<code>VirtualService</code>定义的流量转发权重分配流量</li><li>Kubernetes的Service是根据Pod数量，轮询分配TCP流量，无法灵活调配流量比例</li><li>V<code>irtualService</code>流量分配比例独立于Kubernetes的Pod副本数量，因此可以独立控制两个版本的数量。</li></ul><h3 id="清理现场-4"><a href="#清理现场-4" class="headerlink" title="清理现场"></a>清理现场</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f samples/tcp-echo/tcp-echo-all-v1.yaml</span><br><span class="line">kubectl delete -f samples/tcp-echo/tcp-echo-services.yaml</span><br></pre></td></tr></table></figure><h2 id="请求超时-Request-Timeout"><a href="#请求超时-Request-Timeout" class="headerlink" title="请求超时 Request Timeout"></a>请求超时 Request Timeout</h2><h3 id="环境准备-3"><a href="#环境准备-3" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>部署带有默认<code>DestionationRules</code>的<code>bookinfo</code></li><li>配置所有流量走v1服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><h3 id="配置请求延迟"><a href="#配置请求延迟" class="headerlink" title="配置请求延迟"></a>配置请求延迟</h3><p>通过配置HTTP路由里面的<code>delay</code>字段，可以人为地把请求延迟。</p><ol><li>把请求路由到<code>reviews-v2</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">    - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ol start="2"><li>给<code>ratings</code>添加2s延迟，让<code>istio-proxy</code>接到请求时延迟2s再处理</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: ratings</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - ratings</span><br><span class="line">  http:</span><br><span class="line">  - fault:</span><br><span class="line">      delay:</span><br><span class="line">        percent: 100</span><br><span class="line">        fixedDelay: 2s</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: ratings</span><br><span class="line">        subset: v1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="测试请求延迟"><a href="#测试请求延迟" class="headerlink" title="测试请求延迟"></a>测试请求延迟</h3><ol><li><p>用浏览器打开<code>http://${GATEWAY_URL}/productpage</code></p></li><li><p>等待2s之后页面才加载完毕，<code>reviews</code>显示正常</p></li></ol><h3 id="配置请求超时"><a href="#配置请求超时" class="headerlink" title="配置请求超时"></a>配置请求超时</h3><ul><li>现在给<code>reviews</code>服务添加0.5秒的超时</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v2</span><br><span class="line">    timeout: 0.5s</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="测试请求超时"><a href="#测试请求超时" class="headerlink" title="测试请求超时"></a>测试请求超时</h3><ol><li>用浏览器打开<code>http://${GATEWAY_URL}/productpage</code></li><li>等待0.5s之后页面加载完毕，<code>reviews</code>服务提示<code>unavailable</code></li></ol><h3 id="技术总结-5"><a href="#技术总结-5" class="headerlink" title="技术总结"></a>技术总结</h3><ol><li><p>请求延迟是在<font color="red"><code>ratings</code></font>服务引入的，也就是<code>reviews</code>服务的<code>upstream</code></p></li><li><p><code>reviews</code>服务配置了超时时间后，在访问<code>ratings</code>，超过0.5s之后，<code>ratings</code>还没返回数据，直接就报<code>unavailable</code></p></li><li><p>请求流程如下</p><p><code>productpage</code> → <code>reviews:v2(timeout=0.5s)</code> → <code>ratings(delay=2s)</code></p></li><li><p>这里的延迟和超时，是由<code>istio-proxy</code>控制，程序无法感知</p></li><li><p>除了在istio路由规则中配置注入超时时间，程序可以在<code>HTTP Header</code>里添加<code>x-envoy-upstream-rq-timeout-ms</code>来覆盖掉istio路由规则里配置的超时时间</p></li></ol><h3 id="清理现场-5"><a href="#清理现场-5" class="headerlink" title="清理现场"></a>清理现场</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><h2 id="熔断-Circuit-Breaking"><a href="#熔断-Circuit-Breaking" class="headerlink" title="熔断 Circuit Breaking"></a>熔断 Circuit Breaking</h2><h3 id="环境准备-4"><a href="#环境准备-4" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li>部署<code>httpbin</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/httpbin/httpbin.yaml</span><br></pre></td></tr></table></figure><ol start="2"><li>检查<code>httpbin</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -l app=httpbin</span><br></pre></td></tr></table></figure><h3 id="配置熔断"><a href="#配置熔断" class="headerlink" title="配置熔断"></a>配置熔断</h3><ol><li>为<code>httpbin</code>创建带有熔断配置的DestinationRule，这里超过1个以上的并发请求会触发熔断<ul><li><code>maxConnections</code>限制对后端服务发起的 <code>HTTP/1.1</code> 连接数，如果超过了这个限制，就会开启熔断。</li><li><code>http1MaxPendingRequests: 1</code>最大HTTP请求pending数</li><li><code>maxRequestsPerConnection: 1</code>在任何给定时间内限制对后端服务发起的 <code>HTTP/2</code> 请求数，如果超过了这个限制，就会开启熔断。</li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  host: httpbin</span><br><span class="line">  trafficPolicy:</span><br><span class="line">    connectionPool:</span><br><span class="line">      tcp:</span><br><span class="line">        maxConnections: 1</span><br><span class="line">      http:</span><br><span class="line">        http1MaxPendingRequests: 1</span><br><span class="line">        maxRequestsPerConnection: 1</span><br><span class="line">    outlierDetection:</span><br><span class="line">      consecutiveErrors: 1</span><br><span class="line">      interval: 1s</span><br><span class="line">      baseEjectionTime: 3m</span><br><span class="line">      maxEjectionPercent: 100</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建客户端程序"><a href="#创建客户端程序" class="headerlink" title="创建客户端程序"></a>创建客户端程序</h3><ol><li>部署客户端</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/httpbin/sample-client/fortio-deploy.yaml</span><br></pre></td></tr></table></figure><ol start="2"><li>查看客户端日志</li></ol><p>这里登录到客户端Pod终端使用fortio工具调用<code>httpbin</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FORTIO_POD=$(kubectl get pod | grep fortio | awk '&#123; print $1 &#125;')</span><br><span class="line">kubectl exec -it $FORTIO_POD  -c fortio /usr/bin/fortio -- load -curl  http://httpbin:8000/get</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">server: envoy</span><br><span class="line">date: Sat, 28 Dec 2019 02:45:09 GMT</span><br><span class="line">content-type: application/json</span><br><span class="line">content-length: 371</span><br><span class="line">access-control-allow-origin: *</span><br><span class="line">access-control-allow-credentials: true</span><br><span class="line">x-envoy-upstream-service-time: 3</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  "args": &#123;&#125;, </span><br><span class="line">  "headers": &#123;</span><br><span class="line">    "Content-Length": "0", </span><br><span class="line">    "Host": "httpbin:8000", </span><br><span class="line">    "User-Agent": "fortio.org/fortio-1.3.1", </span><br><span class="line">    "X-B3-Parentspanid": "fcd70a478623c81e", </span><br><span class="line">    "X-B3-Sampled": "1", </span><br><span class="line">    "X-B3-Spanid": "6f6213dc72981add", </span><br><span class="line">    "X-B3-Traceid": "8aabe5c0b403be4ffcd70a478623c81e"</span><br><span class="line">  &#125;, </span><br><span class="line">  "origin": "127.0.0.1", </span><br><span class="line">  "url": "http://httpbin:8000/get"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="触发熔断"><a href="#触发熔断" class="headerlink" title="触发熔断"></a>触发熔断</h3><blockquote><p>上面配置的熔断触发条件，只要超过1个并发请求就会触发熔断，这里演示一下</p></blockquote><ol><li><p>在客户端并发2个连接并发送20个请求</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it $FORTIO_POD  -c fortio /usr/bin/fortio -- load -c 2 -qps 0 -n 20 -loglevel Warning http://httpbin:8000/get</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">08:09:41 I logger.go:97&gt; Log level is now 3 Warning (was 2 Info)</span><br><span class="line">Fortio 1.3.1 running at 0 queries per second, 12-&gt;12 procs, for 20 calls: http://httpbin:8000/get</span><br><span class="line">Starting at max qps with 2 thread(s) [gomax 12] for exactly 20 calls (10 per thread + 0)</span><br><span class="line">08:09:41 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">Ended after 16.699105ms : 20 calls. qps=1197.7</span><br><span class="line">Aggregated Function Time : count 20 avg 0.0016200426 +/- 0.0003949 min 0.00039727 max 0.002612624 sum 0.032400851</span><br><span class="line"><span class="meta">#</span><span class="bash"> range, mid point, percentile, count</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">= 0.00039727 &lt;= 0.001 , 0.000698635 , 5.00, 1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.001 &lt;= 0.002 , 0.0015 , 90.00, 17</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.002 &lt;= 0.00261262 , 0.00230631 , 100.00, 2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 50% 0.00152941</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 75% 0.00182353</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 90% 0.002</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 99% 0.00255136</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 99.9% 0.0026065</span></span><br><span class="line">Sockets used: 3 (for perfect keepalive, would be 2)</span><br><span class="line">Code 200 : 19 (95.0 %)</span><br><span class="line">Code 503 : 1 (5.0 %)</span><br><span class="line">Response Header Sizes : count 20 avg 218.5 +/- 50.13 min 0 max 230 sum 4370</span><br><span class="line">Response Body/Total Sizes : count 20 avg 583 +/- 78.46 min 241 max 601 sum 11660</span><br><span class="line">All done 20 calls (plus 0 warmup) 1.620 ms avg, 1197.7 qps</span><br></pre></td></tr></table></figure></li><li><p>在客户端并发3个连接并发送30个请求</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it $FORTIO_POD  -c fortio /usr/bin/fortio -- load -c 3 -qps 0 -n 30 -loglevel Warning http://httpbin:8000/get</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">10:25:52 I logger.go:97&gt; Log level is now 3 Warning (was 2 Info)</span><br><span class="line">Fortio 1.3.1 running at 0 queries per second, 12-&gt;12 procs, for 30 calls: http://httpbin:8000/get</span><br><span class="line">Starting at max qps with 3 thread(s) [gomax 12] for exactly 30 calls (10 per thread + 0)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">10:25:52 W http_client.go:679&gt; Parsed non ok code 503 (HTTP/1.1 503)</span><br><span class="line">Ended after 29.802582ms : 30 calls. qps=1006.6</span><br><span class="line">Aggregated Function Time : count 30 avg 0.0022023969 +/- 0.001246 min 0.000148903 max 0.00409224 sum 0.066071906</span><br><span class="line"><span class="meta">#</span><span class="bash"> range, mid point, percentile, count</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">= 0.000148903 &lt;= 0.001 , 0.000574451 , 26.67, 8</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.001 &lt;= 0.002 , 0.0015 , 30.00, 1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.002 &lt;= 0.003 , 0.0025 , 73.33, 13</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.003 &lt;= 0.004 , 0.0035 , 96.67, 7</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.004 &lt;= 0.00409224 , 0.00404612 , 100.00, 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 50% 0.00246154</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 75% 0.00307143</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 90% 0.00371429</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 99% 0.00406457</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> target 99.9% 0.00408947</span></span><br><span class="line">Sockets used: 11 (for perfect keepalive, would be 3)</span><br><span class="line">Code 200 : 21 (70.0 %)</span><br><span class="line">Code 503 : 9 (30.0 %)</span><br><span class="line">Response Header Sizes : count 30 avg 161 +/- 105.4 min 0 max 230 sum 4830</span><br><span class="line">Response Body/Total Sizes : count 30 avg 493 +/- 165 min 241 max 601 sum 14790</span><br><span class="line">All done 30 calls (plus 0 warmup) 2.202 ms avg, 1006.6 qps</span><br></pre></td></tr></table></figure></li></ol><h3 id="查看istio-proxy状态"><a href="#查看istio-proxy状态" class="headerlink" title="查看istio-proxy状态"></a>查看istio-proxy状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec $FORTIO_POD -c istio-proxy -- pilot-agent request GET stats | grep httpbin | grep upstream_rq_pending</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cluster.outbound|8000||httpbin.default.svc.cluster.local.upstream_rq_pending_active: 0</span><br><span class="line">cluster.outbound|8000||httpbin.default.svc.cluster.local.upstream_rq_pending_failure_eject: 0</span><br><span class="line">cluster.outbound|8000||httpbin.default.svc.cluster.local.upstream_rq_pending_overflow: 21</span><br><span class="line">cluster.outbound|8000||httpbin.default.svc.cluster.local.upstream_rq_pending_total: 140</span><br></pre></td></tr></table></figure><p>其中<code>upstream_rq_pending_overflow</code>为溢出连接池熔断和失败的总请求，它的值是21，说明有 21 次调用触发了熔断</p><h3 id="技术总结-6"><a href="#技术总结-6" class="headerlink" title="技术总结"></a>技术总结</h3><h2 id="流量镜像-Traffic-Mirror"><a href="#流量镜像-Traffic-Mirror" class="headerlink" title="流量镜像 Traffic Mirror"></a>流量镜像 Traffic Mirror</h2><h3 id="环境准备-5"><a href="#环境准备-5" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li><p>部署<code>httpbin-v1</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl create -f -</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-v1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: httpbin</span><br><span class="line">      version: v1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: httpbin</span><br><span class="line">        version: v1</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: docker.io/kennethreitz/httpbin</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: httpbin</span><br><span class="line">        command: ["gunicorn", "--access-logfile", "-", "-b", "0.0.0.0:80", "httpbin:app"]</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>部署<code>httpbin-v2</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl create -f -</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-v2</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: httpbin</span><br><span class="line">      version: v2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: httpbin</span><br><span class="line">        version: v2</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: docker.io/kennethreitz/httpbin</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: httpbin</span><br><span class="line">        command: ["gunicorn", "--access-logfile", "-", "-b", "0.0.0.0:80", "httpbin:app"]</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>配置Service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">  labels:</span><br><span class="line">    app: httpbin</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 8000</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    app: httpbin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建curl服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl create -f -</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: sleep</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: sleep</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: sleep</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: sleep</span><br><span class="line">        image: tutum/curl</span><br><span class="line">        command: ["/bin/sleep","infinity"]</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置默认路由"><a href="#配置默认路由" class="headerlink" title="配置默认路由"></a>配置默认路由</h3><p>将所有流量路由到<code>httpbin-v1</code>服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">    - httpbin</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: httpbin</span><br><span class="line">        subset: v1</span><br><span class="line">      weight: 100</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  host: httpbin</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">  - name: v2</span><br><span class="line">    labels:</span><br><span class="line">      version: v2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="测试默认路由"><a href="#测试默认路由" class="headerlink" title="测试默认路由"></a>测试默认路由</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export SLEEP_POD=$(kubectl get pod -l app=sleep -o jsonpath=&#123;.items..metadata.name&#125;)</span><br><span class="line">kubectl exec -it $SLEEP_POD -c sleep -- sh -c 'curl  http://httpbin:8000/headers' | python -m json.tool</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "headers": &#123;</span><br><span class="line">        "Accept": "*/*",</span><br><span class="line">        "Content-Length": "0",</span><br><span class="line">        "Host": "httpbin:8000",</span><br><span class="line">        "User-Agent": "curl/7.35.0",</span><br><span class="line">        "X-B3-Parentspanid": "601d07480eb04924",</span><br><span class="line">        "X-B3-Sampled": "1",</span><br><span class="line">        "X-B3-Spanid": "bffbefc545619374",</span><br><span class="line">        "X-B3-Traceid": "be4d5069467d569f601d07480eb04924"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="检查日志"><a href="#检查日志" class="headerlink" title="检查日志"></a>检查日志</h3><blockquote><p>检查v1和v2两个版本的Pod日志，只会在v1上看到访问日志</p></blockquote><ul><li>v1的日志</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export V1_POD=$(kubectl get pod -l app=httpbin,version=v1 -o jsonpath=&#123;.items..metadata.name&#125;)</span><br><span class="line">kubectl logs -f $V1_POD -c httpbin</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [30/Dec/2019:05:27:31 +0000] "GET /headers HTTP/1.1" 200 303 "-" "curl/7.35.0"</span><br></pre></td></tr></table></figure><ul><li>v2的日志</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export V2_POD=$(kubectl get pod -l app=httpbin,version=v2 -o jsonpath=&#123;.items..metadata.name&#125;)</span><br><span class="line">kubectl logs -f $V2_POD -c httpbin</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;none&gt;</span><br></pre></td></tr></table></figure><h3 id="配置镜像流量到v2"><a href="#配置镜像流量到v2" class="headerlink" title="配置镜像流量到v2"></a>配置镜像流量到v2</h3><blockquote><p>这里把所有流量路由到v1，并且把流量镜像到v2，镜像流量的比例是100%。</p><p>当流量被镜像的时候，被镜像请求流量会在HTTP Header里面添加<code>-shadow</code></p><p><code>mirror_persent</code>可以控制镜像流量的比例，如果不定义则所有流量会被镜像</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">    - httpbin</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: httpbin</span><br><span class="line">        subset: v1</span><br><span class="line">      weight: 100</span><br><span class="line">    mirror:</span><br><span class="line">      host: httpbin</span><br><span class="line">      subset: v2</span><br><span class="line">    mirror_percent: 100</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="测试镜像流量"><a href="#测试镜像流量" class="headerlink" title="测试镜像流量"></a>测试镜像流量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it $SLEEP_POD -c sleep -- sh -c 'curl  http://httpbin:8000/headers' | python -m json.tool</span><br></pre></td></tr></table></figure><h3 id="验证镜像流量"><a href="#验证镜像流量" class="headerlink" title="验证镜像流量"></a>验证镜像流量</h3><blockquote><p>查看v1和v2两个Pod的日志，可以发现会同时收到请求</p></blockquote><ul><li>v1的日志</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [30/Dec/2019:05:33:18 +0000] "GET /headers HTTP/1.1" 200 303 "-" "curl/7.35.0"</span><br></pre></td></tr></table></figure><ul><li>v2的日志</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [30/Dec/2019:05:33:18 +0000] "GET /headers HTTP/1.1" 200 303 "-" "curl/7.35.0"</span><br></pre></td></tr></table></figure><h3 id="网络抓包"><a href="#网络抓包" class="headerlink" title="网络抓包"></a>网络抓包</h3><blockquote><p>为了验证流量是真的被镜像了，通过tcpdump命令抓包</p></blockquote><ul><li>另起一个终端，运行tcpdump命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export SLEEP_POD=$(kubectl get pod -l app=sleep -o jsonpath=&#123;.items..metadata.name&#125;)</span><br><span class="line">export V1_POD_IP=$(kubectl get pod -l app=httpbin,version=v1 -o jsonpath=&#123;.items..status.podIP&#125;)</span><br><span class="line">export V2_POD_IP=$(kubectl get pod -l app=httpbin,version=v2 -o jsonpath=&#123;.items..status.podIP&#125;)</span><br><span class="line">kubectl exec -it $SLEEP_POD -c istio-proxy -- sudo tcpdump -A -s 0 "((tcp) and (host $V1_POD_IP or host $V2_POD_IP))"</span><br></pre></td></tr></table></figure><ul><li>继续发起访问</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it $SLEEP_POD -c sleep -- sh -c 'curl  http://httpbin:8000/headers' | python -m json.tool</span><br></pre></td></tr></table></figure><ul><li>在tcpdump的输出中可以看到，确实会往<code>v2 POD</code>发送了HTTP Header为<code>Host: httpbin-shadow</code>的请求</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">05:50:37.899317 IP sleep-b48bfdb67-79sss.39106 &gt; 10-244-0-97.httpbin.default.svc.cluster.local.80: Flags [P.], seq 1377715903:1377716635, ack 3041513480, win 288, options [nop,nop,TS val 616957010 ecr 616814401], length 732: HTTP: GET /headers HTTP/1.1</span><br><span class="line">E....!@.@...</span><br><span class="line">..c</span><br><span class="line">..a...PR.F..I..... .......</span><br><span class="line"><span class="meta">$</span><span class="bash">..R$..AGET /headers HTTP/1.1</span></span><br><span class="line">host: httpbin:8000</span><br><span class="line">user-agent: curl/7.35.0</span><br><span class="line">accept: */*</span><br><span class="line">x-forwarded-proto: http</span><br><span class="line">x-request-id: 6a86ff11-0a97-9d96-9ac4-55e83dca7af3</span><br><span class="line">x-envoy-decorator-operation: httpbin.default.svc.cluster.local:8000/*</span><br><span class="line">x-istio-attributes: CiUKGGRlc3RpbmF0aW9uLnNlcnZpY2UubmFtZRIJEgdodHRwYmluCioKHWRlc3RpbmF0aW9uLnNlcnZpY2UubmFtZXNwYWNlEgkSB2RlZmF1bHQKOgoKc291cmNlLnVpZBIsEiprdWJlcm5ldGVzOi8vc2xlZXAtYjQ4YmZkYjY3LTc5c3NzLmRlZmF1bHQKPwoYZGVzdGluYXRpb24uc2VydmljZS5ob3N0EiMSIWh0dHBiaW4uZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbAo9ChdkZXN0aW5hdGlvbi5zZXJ2aWNlLnVpZBIiEiBpc3RpbzovL2RlZmF1bHQvc2VydmljZXMvaHR0cGJpbg==</span><br><span class="line">x-b3-traceid: 8bd08e38b48384de25be6a75798bf068</span><br><span class="line">x-b3-spanid: 25be6a75798bf068</span><br><span class="line">x-b3-sampled: 1</span><br><span class="line">content-length: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">05:50:37.899386 IP sleep-b48bfdb67-79sss.48708 &gt; 10-244-0-98.httpbin.default.svc.cluster.local.80: Flags [P.], seq 818093502:818094295, ack 1670553383, win 293, options [nop,nop,TS val 616957010 ecr 616814401], length 793: HTTP: GET /headers HTTP/1.1</span><br><span class="line">E..M,.@.@..N</span><br><span class="line">..c</span><br><span class="line">..b.D.P0...c..'...%.......</span><br><span class="line"><span class="meta">$</span><span class="bash">..R$..AGET /headers HTTP/1.1</span></span><br><span class="line">host: httpbin-shadow:8000</span><br><span class="line">user-agent: curl/7.35.0</span><br><span class="line">accept: */*</span><br><span class="line">x-forwarded-proto: http</span><br><span class="line">x-request-id: 6a86ff11-0a97-9d96-9ac4-55e83dca7af3</span><br><span class="line">x-envoy-decorator-operation: httpbin.default.svc.cluster.local:8000/*</span><br><span class="line">x-istio-attributes: CiUKGGRlc3RpbmF0aW9uLnNlcnZpY2UubmFtZRIJEgdodHRwYmluCioKHWRlc3RpbmF0aW9uLnNlcnZpY2UubmFtZXNwYWNlEgkSB2RlZmF1bHQKOgoKc291cmNlLnVpZBIsEiprdWJlcm5ldGVzOi8vc2xlZXAtYjQ4YmZkYjY3LTc5c3NzLmRlZmF1bHQKPwoYZGVzdGluYXRpb24uc2VydmljZS5ob3N0EiMSIWh0dHBiaW4uZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbAo9ChdkZXN0aW5hdGlvbi5zZXJ2aWNlLnVpZBIiEiBpc3RpbzovL2RlZmF1bHQvc2VydmljZXMvaHR0cGJpbg==</span><br><span class="line">x-b3-traceid: 8bd08e38b48384de25be6a75798bf068</span><br><span class="line">x-b3-spanid: 25be6a75798bf068</span><br><span class="line">x-b3-sampled: 1</span><br><span class="line">x-envoy-internal: true</span><br><span class="line">x-forwarded-for: 10.244.0.99</span><br><span class="line">content-length: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">05:50:37.900503 IP 10-244-0-98.httpbin.default.svc.cluster.local.80 &gt; sleep-b48bfdb67-79sss.48708: Flags [P.], seq 1:237, ack 793, win 306, options [nop,nop,TS val 616957012 ecr 616957010], length 236: HTTP: HTTP/1.1 200 OK</span><br><span class="line">E.. ..@.@.m.</span><br><span class="line">..b</span><br><span class="line">..c.P.Dc..'0. ....2.......</span><br><span class="line"><span class="meta">$</span><span class="bash">..T$..RHTTP/1.1 200 OK</span></span><br><span class="line">server: istio-envoy</span><br><span class="line">date: Mon, 30 Dec 2019 05:50:37 GMT</span><br><span class="line">content-type: application/json</span><br><span class="line">content-length: 343</span><br><span class="line">access-control-allow-origin: *</span><br><span class="line">access-control-allow-credentials: true</span><br><span class="line">x-envoy-upstream-service-time: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">05:50:37.900513 IP sleep-b48bfdb67-79sss.48708 &gt; 10-244-0-98.httpbin.default.svc.cluster.local.80: Flags [.], ack 237, win 302, options [nop,nop,TS val 616957012 ecr 616957012], length 0</span><br><span class="line">E..4,.@.@..f</span><br><span class="line">..c</span><br><span class="line">..b.D.P0. .c..............</span><br><span class="line"><span class="meta">$</span><span class="bash">..T$..T</span></span><br><span class="line">05:50:37.900672 IP 10-244-0-98.httpbin.default.svc.cluster.local.80 &gt; sleep-b48bfdb67-79sss.48708: Flags [P.], seq 237:580, ack 793, win 306, options [nop,nop,TS val 616957012 ecr 616957012], length 343: HTTP</span><br><span class="line">E.....@.@.l.</span><br><span class="line">..b</span><br><span class="line">..c.P.Dc...0. ....2.*.....</span><br><span class="line"><span class="meta">$</span><span class="bash">..T$..T&#123;</span></span><br><span class="line">  "headers": &#123;</span><br><span class="line">    "Accept": "*/*", </span><br><span class="line">    "Content-Length": "0", </span><br><span class="line">    "Host": "httpbin-shadow:8000", </span><br><span class="line">    "User-Agent": "curl/7.35.0", </span><br><span class="line">    "X-B3-Parentspanid": "25be6a75798bf068", </span><br><span class="line">    "X-B3-Sampled": "1", </span><br><span class="line">    "X-B3-Spanid": "a80ddc34652a28dd", </span><br><span class="line">    "X-B3-Traceid": "8bd08e38b48384de25be6a75798bf068", </span><br><span class="line">    "X-Envoy-Internal": "true"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">05:50:37.900679 IP sleep-b48bfdb67-79sss.48708 &gt; 10-244-0-98.httpbin.default.svc.cluster.local.80: Flags [.], ack 580, win 311, options [nop,nop,TS val 616957012 ecr 616957012], length 0</span><br><span class="line">E..4,.@.@..e</span><br><span class="line">..c</span><br><span class="line">..b.D.P0. .c..j...7.......</span><br><span class="line"><span class="meta">$</span><span class="bash">..T$..T</span></span><br><span class="line">05:50:37.900856 IP 10-244-0-97.httpbin.default.svc.cluster.local.80 &gt; sleep-b48bfdb67-79sss.39106: Flags [P.], seq 1:540, ack 732, win 299, options [nop,nop,TS val 616957012 ecr 616957010], length 539: HTTP: HTTP/1.1 200 OK</span><br><span class="line">E..O..@.@.=.</span><br><span class="line">..a</span><br><span class="line">..c.P...I..R.I....+.......</span><br><span class="line"><span class="meta">$</span><span class="bash">..T$..RHTTP/1.1 200 OK</span></span><br><span class="line">server: istio-envoy</span><br><span class="line">date: Mon, 30 Dec 2019 05:50:37 GMT</span><br><span class="line">content-type: application/json</span><br><span class="line">content-length: 303</span><br><span class="line">access-control-allow-origin: *</span><br><span class="line">access-control-allow-credentials: true</span><br><span class="line">x-envoy-upstream-service-time: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  "headers": &#123;</span><br><span class="line">    "Accept": "*/*", </span><br><span class="line">    "Content-Length": "0", </span><br><span class="line">    "Host": "httpbin:8000", </span><br><span class="line">    "User-Agent": "curl/7.35.0", </span><br><span class="line">    "X-B3-Parentspanid": "25be6a75798bf068", </span><br><span class="line">    "X-B3-Sampled": "1", </span><br><span class="line">    "X-B3-Spanid": "5afe9681c8064c5d", </span><br><span class="line">    "X-B3-Traceid": "8bd08e38b48384de25be6a75798bf068"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">05:50:37.900868 IP sleep-b48bfdb67-79sss.39106 &gt; 10-244-0-97.httpbin.default.svc.cluster.local.80: Flags [.], ack 540, win 297, options [nop,nop,TS val 616957012 ecr 616957012], length 0</span><br><span class="line">E..4."@.@...</span><br><span class="line">..c</span><br><span class="line">..a...PR.I..I.#...).......</span><br><span class="line"><span class="meta">$</span><span class="bash">..T$..T</span></span><br></pre></td></tr></table></figure><h3 id="清理现场-6"><a href="#清理现场-6" class="headerlink" title="清理现场"></a>清理现场</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete virtualservice httpbin</span><br><span class="line">kubectl delete destinationrule httpbin</span><br><span class="line">kubectl delete deploy httpbin-v1 httpbin-v2 sleep</span><br><span class="line">kubectl delete svc httpbin</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;istio版本号&lt;code&gt;1.4.2&lt;/code&gt;&lt;/li&gt;&lt;li&gt;k8s集群版本&lt;code&gt;v1.14.8&lt;/code&gt;&lt;/l
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Kubernetes/"/>
    
      <category term="Istio" scheme="https://luanlengli.github.io/categories/Kubernetes/Istio/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
      <category term="Istio" scheme="https://luanlengli.github.io/tags/Istio/"/>
    
  </entry>
  
  <entry>
    <title>Python pip命令行设置国内镜像源</title>
    <link href="https://luanlengli.github.io/2019/12/19/Python-pip%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%BE%E7%BD%AE%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90.html"/>
    <id>https://luanlengli.github.io/2019/12/19/Python-pip命令行设置国内镜像源.html</id>
    <published>2019-12-19T01:52:26.000Z</published>
    <updated>2020-01-17T02:30:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>pip是Python自带的包管理工具。</li><li>国内的网络环境影响，使用默认设置进行包依赖安装会非常慢，经常卡住导致安装失败。</li><li>为此特地记录下配置过程</li></ul><h1 id="配置pip"><a href="#配置pip" class="headerlink" title="配置pip"></a>配置pip</h1><h2 id="国内的PYPI源"><a href="#国内的PYPI源" class="headerlink" title="国内的PYPI源"></a>国内的PYPI源</h2><ul><li><a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">清华大学</a></li><li><a href="http://pypi.doubanio.com/simple/" target="_blank" rel="noopener">豆瓣</a></li><li><a href="https://mirrors.aliyun.com/pypi/simple" target="_blank" rel="noopener">阿里云</a></li><li><a href="https://mirrors.cloud.tencent.com/pypi/simple" target="_blank" rel="noopener">腾讯云</a></li><li><a href="https://mirrors.huaweicloud.com/repository/pypi/simple" target="_blank" rel="noopener">华为云</a></li></ul><h2 id="永久生效"><a href="#永久生效" class="headerlink" title="永久生效"></a>永久生效</h2><ul><li>这里以阿里云的pip镜像作为演示</li><li>Windows平台【打开命令行提示符或者PowerShell】</li><li>Linux/Mac平台打开终端</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url <span class="string">'https://mirrors.aliyun.com/pypi/simple'</span></span><br><span class="line">pip config set global.timeout <span class="string">'120'</span></span><br><span class="line">pip config set global.trusted-host <span class="string">'mirrors.aliyun.com'</span></span><br></pre></td></tr></table></figure><h2 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h2><ul><li>这里以阿里云的pip镜像作为演示</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://mirrors.aliyun.com/pypi/simple &lt;PACKAGE_NAME&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;pip是Python自带的包管理工具。&lt;/li&gt;&lt;li&gt;国内的网络环境影响，使用默认设置进行包依赖安装会非常慢，经常卡住导致安装失
      
    
    </summary>
    
      <category term="Python" scheme="https://luanlengli.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://luanlengli.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes挂载NFS添加挂载选项</title>
    <link href="https://luanlengli.github.io/2019/12/18/Kubernetes%E6%8C%82%E8%BD%BDNFS%E6%B7%BB%E5%8A%A0%E6%8C%82%E8%BD%BD%E9%80%89%E9%A1%B9.html"/>
    <id>https://luanlengli.github.io/2019/12/18/Kubernetes挂载NFS添加挂载选项.html</id>
    <published>2019-12-18T14:54:55.000Z</published>
    <updated>2019-12-20T00:58:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情概要"><a href="#前情概要" class="headerlink" title="前情概要"></a>前情概要</h1><blockquote><p>这里引用阿里云的说明文档</p></blockquote><ol><li><p>为什么要使用<code>noresvport</code>参数挂载NAS？不重新挂载会有什么后果？</p><p>如果发生网络切换或者后端服务的HA倒换，小概率会造成NFS文件系统阻塞，那就可能需要几分钟时间连接才会自动恢复，极端情况下甚至需要重启ECS才能恢复。使用<code>noresvport</code>参数后，这个恢复几秒就可以自动完成。</p></li><li><p>什么情况会引发网络切换或者后端服务的HA倒换？</p><p>NAS服务是稳定的，网络切换或者后端服务的HA倒换都是罕见情况。</p><p>后端服务升级会触发上述切换，但导致客户端阻塞的概率很低，并且在升级之前我们会提前通知相关集群的用户，留出充足时间使用<code>noresvport</code>参数。</p><p>其他可能引发切换的场景，还有负载均衡调整、服务端硬件故障等情况，有一定的不可预测性，所以即使服务端没有升级安排，也请尽快使用<code>noresvport</code>参数避免这样的风险。</p></li><li><p>为什么需要重新挂载？还有没有其他的方案？</p><p>需要重新挂载的原因是要把之前没有使用<code>noresvport</code>参数的TCP连接断掉，然后使用<code>noresvport</code>参数挂载时，会建立新的TCP连接。</p><p>为了把老的TCP连接断掉，就必须把NAS相关的业务都停掉，然后执行<code>umount</code>卸载。</p><p>如果不希望重新挂载，可以考虑新建NAS挂载点，使用<code>noresvport</code>参数挂载到新的本地路径，然后把业务进程逐步迁移过去，最后废弃老的挂载路径和挂载点。</p></li></ol><h1 id="挂载NFS"><a href="#挂载NFS" class="headerlink" title="挂载NFS"></a>挂载NFS</h1><h2 id="静态存储卷"><a href="#静态存储卷" class="headerlink" title="静态存储卷"></a>静态存储卷</h2><ul><li>NFS v3版</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">pv-nfs-v3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">  capacity:</span></span><br><span class="line"><span class="attr">    storage:</span> <span class="number">2</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  mountOptions:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">vers=3</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nolock,tcp,noresvport</span></span><br><span class="line"><span class="attr">  nfs:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/nfs-v3</span></span><br><span class="line"><span class="attr">    server:</span> <span class="string">nas_server</span></span><br><span class="line"><span class="attr">  persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br></pre></td></tr></table></figure><ul><li>NFS v4.0版</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">pv-nfs-v4.0</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">  capacity:</span></span><br><span class="line"><span class="attr">    storage:</span> <span class="number">2</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  mountOptions:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">vers=4.0</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">noresvport</span></span><br><span class="line"><span class="attr">  nfs:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/nfs-v4.0</span></span><br><span class="line"><span class="attr">    server:</span> <span class="string">nas_server</span></span><br><span class="line"><span class="attr">  persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br></pre></td></tr></table></figure><h2 id="动态存储卷"><a href="#动态存储卷" class="headerlink" title="动态存储卷"></a>动态存储卷</h2><blockquote><p>假设集群已经部署了<code>nfs-client-provisioner</code>用来实现在动态提供<code>PersistentVolume</code></p></blockquote><h3 id="创建StorageClass"><a href="#创建StorageClass" class="headerlink" title="创建StorageClass"></a>创建StorageClass</h3><ul><li>NFS v3版</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfsv3-sc</span></span><br><span class="line"><span class="attr">mountOptions:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">vers=3</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">nolock,tcp,noresvport</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">fuseim.pri/ifs</span></span><br><span class="line"><span class="attr">reclaimPolicy:</span> <span class="string">Retain</span></span><br></pre></td></tr></table></figure><ul><li>NFS v4.0版</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfsv4-sc</span></span><br><span class="line"><span class="attr">mountOptions:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">vers=4.0</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">nolock,tcp,noresvport</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">fuseim.pri/ifs</span></span><br><span class="line"><span class="attr">reclaimPolicy:</span> <span class="string">Retain</span></span><br></pre></td></tr></table></figure><h3 id="创建PVC"><a href="#创建PVC" class="headerlink" title="创建PVC"></a>创建PVC</h3><ul><li>NFS v3版</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfsv3-pvc</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">nfsv3-sc</span></span><br><span class="line"><span class="attr">  volumeMode:</span> <span class="string">Filesystem</span></span><br></pre></td></tr></table></figure><ul><li>NFS v4.0版</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfsv4-pvc</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">nfsv4-sc</span></span><br><span class="line"><span class="attr">  volumeMode:</span> <span class="string">Filesystem</span></span><br></pre></td></tr></table></figure><h3 id="测试挂载PV"><a href="#测试挂载PV" class="headerlink" title="测试挂载PV"></a>测试挂载PV</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">test-nfs-pod</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  containers:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">test-nfs-pod</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">busybox:1.24</span></span><br><span class="line"><span class="attr">    command:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"/bin/sh"</span></span><br><span class="line"><span class="attr">    args:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"-c"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"while true; do sleep 99999;done"</span></span><br><span class="line"><span class="attr">    volumeMounts:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">nfsv3-pvc</span></span><br><span class="line"><span class="attr">      mountPath:</span> <span class="string">"/mnt/nfsv3"</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">nfsv4-pvc</span></span><br><span class="line"><span class="attr">      mountPath:</span> <span class="string">"/mnt/nfsv4"</span></span><br><span class="line"><span class="attr">  restartPolicy:</span> <span class="string">"Never"</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">nfsv3-pvc</span></span><br><span class="line"><span class="attr">    persistentVolumeClaim:</span></span><br><span class="line"><span class="attr">      claimName:</span> <span class="string">nfsv3-pvc</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">nfsv4-pvc</span></span><br><span class="line"><span class="attr">    persistentVolumeClaim:</span></span><br><span class="line"><span class="attr">      claimName:</span> <span class="string">nfsv4-pvc</span></span><br></pre></td></tr></table></figure><h3 id="验证挂载选项"><a href="#验证挂载选项" class="headerlink" title="验证挂载选项"></a>验证挂载选项</h3><ul><li>确认Pod所在宿主机</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get pod test-nfs-pod -o wide</span><br></pre></td></tr></table></figure><ul><li>登录到宿主机查看mount，关注是否有<code>noresvport</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount | grep nfs</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nas_server:</span><span class="string">/default</span> <span class="string">on</span> <span class="string">/var/lib/kubelet/pods/a3d10191-04f2-11ea-b668-162fb9b39758/volumes/kubernetes.io~nfs/nfsv4-pvc</span> <span class="string">type</span> <span class="string">nfs4</span> <span class="string">(rw,relatime,vers=4.0,rsize=1048576,wsize=1048576,namlen=255,hard,noresvport,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.0.146,local_lock=none,addr=192.168.0.128,_netdev)</span></span><br></pre></td></tr></table></figure><h1 id="存量NFS存储卷更新"><a href="#存量NFS存储卷更新" class="headerlink" title="存量NFS存储卷更新"></a>存量NFS存储卷更新</h1><ul><li>修改NFS存储卷对应的PV，添加<code>mount</code>参数</li><li>重新调度使用NFS存储卷的Pod</li></ul><blockquote><font color="red">注意！</font><p>如果服务器上还有其他挂载点使用了同一个NFS存储，有可能无法更新挂载选项</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前情概要&quot;&gt;&lt;a href=&quot;#前情概要&quot; class=&quot;headerlink&quot; title=&quot;前情概要&quot;&gt;&lt;/a&gt;前情概要&lt;/h1&gt;&lt;blockquote&gt;&lt;p&gt;这里引用阿里云的说明文档&lt;/p&gt;&lt;/blockquote&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;为什么要使用&lt;cod
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>从零搭建基于Istio的ServiceMesh-02Ingress&amp;Egress</title>
    <link href="https://luanlengli.github.io/2019/12/18/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EIstio%E7%9A%84ServiceMesh-02Ingress&amp;Egress.html"/>
    <id>https://luanlengli.github.io/2019/12/18/从零搭建基于Istio的ServiceMesh-02Ingress&amp;Egress.html</id>
    <published>2019-12-18T07:16:33.000Z</published>
    <updated>2020-03-20T02:39:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>istio版本号<code>1.4.2</code></li><li>k8s集群版本<code>v1.14.8</code></li><li>istio在<code>1.4</code>提供了基于istioctl命令直接部署的功能，这里使用istioctl部署istio。<ul><li>自带配置校验、和丰富的自定义配置选项</li><li>API版本号还在<font color="red">Alpha阶段</font>，<code>install.istio.io/v1alpha2</code>，请自行判断是否适用</li><li>部署要求<ul><li>至少得有Kubernetes集群</li><li>Istio-1.4版本在<code>1.13</code>、<code>1.14</code>、<code>1.15</code>的k8s集群上是做过测试通过的</li><li>最新的<code>1.16</code>没在官方文档里注明，应该也是可以用的。<a href="https://istio.io/docs/setup/platform-setup/" target="_blank" rel="noopener">官方说明在此</a></li></ul></li></ul></li><li>这里通过官方示例熟悉一下istio的ServiceMesh特性</li></ul><h1 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h1><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><ul><li><p>在Kubernetes环境中，Kubernetes的Ingress资源用于配置集群外部访问集群内部的服务。</p></li><li><p>在Istio中，使用Istio Gateway进行替代。</p></li></ul><h2 id="Istio通过Gateway实现对进入集群的流量进行路由和监控。"><a href="#Istio通过Gateway实现对进入集群的流量进行路由和监控。" class="headerlink" title="Istio通过Gateway实现对进入集群的流量进行路由和监控。"></a>Istio通过Gateway实现对进入集群的流量进行路由和监控。</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>部署<code>httpbin</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/httpbin/httpbin.yaml</span><br></pre></td></tr></table></figure><h3 id="确定Ingress的IP地址端口"><a href="#确定Ingress的IP地址端口" class="headerlink" title="确定Ingress的IP地址端口"></a>确定Ingress的IP地址端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc istio-ingressgateway -n istio-system</span><br></pre></td></tr></table></figure><blockquote><p>输出示例，家境贫寒，这里用的是<code>NodePort</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME                   TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                                                                                                                                      AGE</span><br><span class="line">istio-ingressgateway   NodePort   10.96.33.206   &lt;none&gt;        15020:31226/TCP,80:31355/TCP,443:30885/TCP,15029:31094/TCP,15030:31128/TCP,15031:30163/TCP,31400:31400/TCP,15032:31966/TCP,15443:30659/TCP   7d3h</span><br></pre></td></tr></table></figure><h3 id="LoadBalancer"><a href="#LoadBalancer" class="headerlink" title="LoadBalancer"></a>LoadBalancer</h3><blockquote><p>对于使用<code>LoadBalancer</code>的Service，可以通过<code>EXTERNAL-IP</code>加端口的形式访问<code>Istio-Gateway</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.status.loadBalancer.ingress[0].ip&#125;')</span><br><span class="line">export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="http2")].port&#125;')</span><br><span class="line">export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="https")].port&#125;')</span><br></pre></td></tr></table></figure><h3 id="NodePort"><a href="#NodePort" class="headerlink" title="NodePort"></a>NodePort</h3><blockquote><p>我的实验环境没有<code>LoadBalancer</code>，因此用了<code>NodePort</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='&#123;.items[0].status.hostIP&#125;')</span><br><span class="line">export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="http2")].nodePort&#125;')</span><br><span class="line">export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="https")].nodePort&#125;')</span><br></pre></td></tr></table></figure><h2 id="基础的Ingress"><a href="#基础的Ingress" class="headerlink" title="基础的Ingress"></a>基础的Ingress</h2><h3 id="使用Gateway配置ingress"><a href="#使用Gateway配置ingress" class="headerlink" title="使用Gateway配置ingress"></a>使用Gateway配置ingress</h3><blockquote><p>与Kubernetes自带的Ingress对象不同</p><p>Istio Gateway会使用istio自己的路由规则来转发流量，转发方式跟集群内部路由方式相同。</p></blockquote><h4 id="创建Gateway"><a href="#创建Gateway" class="headerlink" title="创建Gateway"></a>创建Gateway</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-gateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway # use Istio default gateway implementation</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 80</span><br><span class="line">      name: http</span><br><span class="line">      protocol: HTTP</span><br><span class="line">    hosts:</span><br><span class="line">    - "httpbin.example.com"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="创建VirtualService"><a href="#创建VirtualService" class="headerlink" title="创建VirtualService"></a>创建VirtualService</h4><blockquote><p>指定了<code>httpbin-gateway</code>作为Istio Gateway</p><p>只允许<code>/status</code>和<code>/delay</code>两个请求，其他外部请求会<code>404</code></p><p>主机名指定<code>httpbin.example.com</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - "httpbin.example.com"</span><br><span class="line">  gateways:</span><br><span class="line">  - httpbin-gateway</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /status</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /delay</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        port:</span><br><span class="line">          number: 8000</span><br><span class="line">        host: httpbin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="集群外部访问"><a href="#集群外部访问" class="headerlink" title="集群外部访问"></a>集群外部访问</h3><h4 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h4><ul><li>正确访问方式</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -H 'Host:httpbin.example.com' http://$INGRESS_HOST:$INGRESS_PORT/status/200</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">server: istio-envoy</span><br><span class="line">date: Mon, 30 Dec 2019 06:21:10 GMT</span><br><span class="line">content-type: text/html; charset=utf-8</span><br><span class="line">access-control-allow-origin: *</span><br><span class="line">access-control-allow-credentials: true</span><br><span class="line">content-length: 0</span><br><span class="line">x-envoy-upstream-service-time: 3</span><br></pre></td></tr></table></figure><ul><li>错误访问方式</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 不带Host字段或者Host字段不匹配</span></span><br><span class="line">curl -I  http://$INGRESS_HOST:$INGRESS_PORT/status/200</span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问其他URL</span></span><br><span class="line">curl -I -H 'Host:httpbin.example.com' http://$INGRESS_HOST:$INGRESS_PORT/index.html</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 404 Not Found</span><br><span class="line">date: Mon, 30 Dec 2019 06:21:46 GMT</span><br><span class="line">server: istio-envoy</span><br><span class="line">transfer-encoding: chunked</span><br></pre></td></tr></table></figure><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><h5 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改hosts文件</h5><blockquote><p>添加以下内容，注意替换<font color="red"><code>Ingress_HOST</code></font>的值</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Ingress_HOST&gt; httpbin.example.com</span><br></pre></td></tr></table></figure><h5 id="打开网页"><a href="#打开网页" class="headerlink" title="打开网页"></a>打开网页</h5><blockquote><p>注意替换<font color="red"><code>Ingress_Port</code></font>的值</p></blockquote><p><code>http://httpbin.example.com:&lt;Ingress_PORT&gt;/status/200</code></p><h3 id="清理环境"><a href="#清理环境" class="headerlink" title="清理环境"></a>清理环境</h3><blockquote><p>按需清理，后面做HTTPS还要用到httpbin</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete gateway httpbin-gateway</span><br><span class="line">kubectl delete virtualservice httpbin</span><br><span class="line">kubectl delete --ignore-not-found=true -f samples/httpbin/httpbin.yaml</span><br></pre></td></tr></table></figure><h2 id="基于SSL-TLS的Ingress-File-Mount文件挂载"><a href="#基于SSL-TLS的Ingress-File-Mount文件挂载" class="headerlink" title="基于SSL/TLS的Ingress (File Mount文件挂载)"></a>基于SSL/TLS的Ingress (File Mount文件挂载)</h2><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><ul><li>Istio-Gateway同样可以处理HTTPS请求</li><li>TLS类型的Secret会被挂载到<code>/etc/istio/ingressgateway-certs</code></li><li>Secret对象的名字必须是<code>istio-ingressgateway-certs</code>并且命名空间是在<code>istio-system</code>，否则istio-Gateway无法识别</li></ul><h3 id="创建TLS类型的Secret"><a href="#创建TLS类型的Secret" class="headerlink" title="创建TLS类型的Secret"></a>创建TLS类型的Secret</h3><h4 id="已有证书"><a href="#已有证书" class="headerlink" title="已有证书"></a>已有证书</h4><p>如果购买了公网的可信任证书，可以跳过自建证书的步骤。</p><h4 id="自建证书"><a href="#自建证书" class="headerlink" title="自建证书"></a>自建证书</h4><h5 id="创建CA证书"><a href="#创建CA证书" class="headerlink" title="创建CA证书"></a>创建CA证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 \</span><br><span class="line">            -sha256 \</span><br><span class="line">            -nodes \</span><br><span class="line">            -days 365 \</span><br><span class="line">            -newkey rsa:2048 \</span><br><span class="line">            -subj '/O=example Inc./CN=example.com' \</span><br><span class="line">            -keyout example.com.key \</span><br><span class="line">            -out example.com.crt</span><br></pre></td></tr></table></figure><h5 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openssl req -out \</span><br><span class="line">            httpbin.example.com.csr \</span><br><span class="line">            -newkey rsa:2048 \</span><br><span class="line">            -nodes \</span><br><span class="line">            -keyout httpbin.example.com.key \</span><br><span class="line">            -subj "/CN=httpbin.example.com/O=httpbin organization"</span><br><span class="line">openssl x509 -req \</span><br><span class="line">             -days 365 \</span><br><span class="line">             -CA example.com.crt \</span><br><span class="line">             -CAkey example.com.key \</span><br><span class="line">             -set_serial 0 \</span><br><span class="line">             -in httpbin.example.com.csr \</span><br><span class="line">             -out httpbin.example.com.crt</span><br></pre></td></tr></table></figure><h4 id="创建Secret"><a href="#创建Secret" class="headerlink" title="创建Secret"></a>创建Secret</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n istio-system create secret tls \</span><br><span class="line">        istio-ingressgateway-certs \</span><br><span class="line">        --key httpbin.example.com.key \</span><br><span class="line">        --cert httpbin.example.com.crt</span><br></pre></td></tr></table></figure><h4 id="检查证书是否挂载"><a href="#检查证书是否挂载" class="headerlink" title="检查证书是否挂载"></a>检查证书是否挂载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it -n istio-system $(kubectl -n istio-system get pods -l istio=ingressgateway -o jsonpath='&#123;.items[0].metadata.name&#125;') -- ls -al /etc/istio/ingressgateway-certs</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">total 0</span><br><span class="line">drwxrwxrwt 3 root root 120 Dec 30 06:54 .</span><br><span class="line">drwxr-xr-x 1 root root  78 Dec 23 02:51 ..</span><br><span class="line">drwxr-xr-x 2 root root  80 Dec 30 06:54 ..2019_12_30_06_54_28.616938615</span><br><span class="line">lrwxrwxrwx 1 root root  31 Dec 30 06:54 ..data -&gt; ..2019_12_30_06_54_28.616938615</span><br><span class="line">lrwxrwxrwx 1 root root  14 Dec 30 06:54 tls.crt -&gt; ..data/tls.crt</span><br><span class="line">lrwxrwxrwx 1 root root  14 Dec 30 06:54 tls.key -&gt; ..data/tls.key</span><br></pre></td></tr></table></figure><h3 id="使用Gateway配置Ingress"><a href="#使用Gateway配置Ingress" class="headerlink" title="使用Gateway配置Ingress"></a>使用Gateway配置Ingress</h3><h4 id="创建Gateway-1"><a href="#创建Gateway-1" class="headerlink" title="创建Gateway"></a>创建Gateway</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-gateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway # use istio default ingress gateway</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 443</span><br><span class="line">      name: https</span><br><span class="line">      protocol: HTTPS</span><br><span class="line">    tls:</span><br><span class="line">      mode: SIMPLE</span><br><span class="line">      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt</span><br><span class="line">      privateKey: /etc/istio/ingressgateway-certs/tls.key</span><br><span class="line">    hosts:</span><br><span class="line">    - "httpbin.example.com"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="创建VirtualService-1"><a href="#创建VirtualService-1" class="headerlink" title="创建VirtualService"></a>创建VirtualService</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - "httpbin.example.com"</span><br><span class="line">  gateways:</span><br><span class="line">  - httpbin-gateway</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /status</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /delay</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        port:</span><br><span class="line">          number: 8000</span><br><span class="line">        host: httpbin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="访问HTTPS服务"><a href="#访问HTTPS服务" class="headerlink" title="访问HTTPS服务"></a>访问HTTPS服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -v \</span><br><span class="line">     -k \</span><br><span class="line">     -H 'Host:httpbin.example.com' \</span><br><span class="line">     --resolve httpbin.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST \</span><br><span class="line">     --cacert example.com.crt \</span><br><span class="line">     https://httpbin.example.com:$SECURE_INGRESS_PORT/status/418</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">* Added httpbin.example.com:30885:192.168.48.37 to DNS cache</span><br><span class="line">* About to connect() to httpbin.example.com port 30885 (#0)</span><br><span class="line">*   Trying 192.168.48.37...</span><br><span class="line">* Connected to httpbin.example.com (192.168.48.37) port 30885 (#0)</span><br><span class="line">* Initializing NSS with certpath: sql:/etc/pki/nssdb</span><br><span class="line">* skipping SSL peer certificate verification</span><br><span class="line">* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</span><br><span class="line">* Server certificate:</span><br><span class="line">* subject: O=httpbin organization,CN=httpbin.example.com</span><br><span class="line">* start date: Dec 30 06:53:12 2019 GMT</span><br><span class="line">* expire date: Dec 29 06:53:12 2020 GMT</span><br><span class="line">* common name: httpbin.example.com</span><br><span class="line">* issuer: CN=example.com,O=example Inc.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> GET /status/418 HTTP/1.1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> User-Agent: curl/7.29.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Accept: */*</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Host:httpbin.example.com</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line">&lt; HTTP/1.1 418 Unknown</span><br><span class="line">&lt; server: istio-envoy</span><br><span class="line">&lt; date: Mon, 30 Dec 2019 07:09:01 GMT</span><br><span class="line">&lt; x-more-info: http://tools.ietf.org/html/rfc2324</span><br><span class="line">&lt; access-control-allow-origin: *</span><br><span class="line">&lt; access-control-allow-credentials: true</span><br><span class="line">&lt; content-length: 135</span><br><span class="line">&lt; x-envoy-upstream-service-time: 1</span><br><span class="line">&lt; </span><br><span class="line"></span><br><span class="line">    -=[ teapot ]=-</span><br><span class="line"></span><br><span class="line">       _...._</span><br><span class="line">     .'  _ _ `.</span><br><span class="line">    | ."` ^ `". _,</span><br><span class="line">    \_;`"---"`|//</span><br><span class="line">      |       ;/</span><br><span class="line">      \_     _/</span><br><span class="line">        `"""`</span><br><span class="line">* Connection #0 to host httpbin.example.com left intact</span><br></pre></td></tr></table></figure><h3 id="配置多Host的TLS-Ingress"><a href="#配置多Host的TLS-Ingress" class="headerlink" title="配置多Host的TLS Ingress"></a>配置多Host的TLS Ingress</h3><h4 id="创建TLS类型的Secret-1"><a href="#创建TLS类型的Secret-1" class="headerlink" title="创建TLS类型的Secret"></a>创建TLS类型的Secret</h4><blockquote><p>这里以bookinfo.com作为示例</p></blockquote><h5 id="创建证书-1"><a href="#创建证书-1" class="headerlink" title="创建证书"></a>创建证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">        -out bookinfo.com.csr \</span><br><span class="line">        -newkey rsa:2048 \</span><br><span class="line">        -nodes \</span><br><span class="line">        -keyout bookinfo.com.key \</span><br><span class="line">        -subj "/CN=bookinfo.com/O=bookinfo organization"</span><br><span class="line">openssl x509 -req \</span><br><span class="line">        -days 365 \</span><br><span class="line">        -CA example.com.crt \</span><br><span class="line">        -CAkey example.com.key \</span><br><span class="line">        -set_serial 0 \</span><br><span class="line">        -in bookinfo.com.csr \</span><br><span class="line">        -out bookinfo.com.crt</span><br></pre></td></tr></table></figure><h5 id="创建Secret-1"><a href="#创建Secret-1" class="headerlink" title="创建Secret"></a>创建Secret</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n istio-system create secret tls \</span><br><span class="line">        istio-ingressgateway-bookinfo-certs \</span><br><span class="line">        --key bookinfo.com.key \</span><br><span class="line">        --cert bookinfo.com.crt</span><br></pre></td></tr></table></figure><h4 id="更新istio-ingressgateway"><a href="#更新istio-ingressgateway" class="headerlink" title="更新istio-ingressgateway"></a>更新istio-ingressgateway</h4><p>这里需要重新配置<code>istio-ingressgateway</code>的<code>deployment</code>以挂载新的证书</p><h5 id="创建Patch-file"><a href="#创建Patch-file" class="headerlink" title="创建Patch file"></a>创建Patch file</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; gateway-patch.json &lt;&lt;EOF</span><br><span class="line">[&#123;</span><br><span class="line">  "op": "add",</span><br><span class="line">  "path": "/spec/template/spec/containers/0/volumeMounts/0",</span><br><span class="line">  "value": &#123;</span><br><span class="line">    "mountPath": "/etc/istio/ingressgateway-bookinfo-certs",</span><br><span class="line">    "name": "ingressgateway-bookinfo-certs",</span><br><span class="line">    "readOnly": true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  "op": "add",</span><br><span class="line">  "path": "/spec/template/spec/volumes/0",</span><br><span class="line">  "value": &#123;</span><br><span class="line">  "name": "ingressgateway-bookinfo-certs",</span><br><span class="line">    "secret": &#123;</span><br><span class="line">      "secretName": "istio-ingressgateway-bookinfo-certs",</span><br><span class="line">      "optional": true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;]</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="部署Patch"><a href="#部署Patch" class="headerlink" title="部署Patch"></a>部署Patch</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n istio-system patch --type=json deploy istio-ingressgateway -p "$(cat gateway-patch.json)"</span><br></pre></td></tr></table></figure><h5 id="检查证书挂载"><a href="#检查证书挂载" class="headerlink" title="检查证书挂载"></a>检查证书挂载</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it -n istio-system $(kubectl -n istio-system get pods -l istio=ingressgateway -o jsonpath='&#123;.items[0].metadata.name&#125;') -- ls -al /etc/istio/ingressgateway-bookinfo-certs</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">total 0</span><br><span class="line">drwxrwxrwt 3 root root 120 Dec 30 07:18 .</span><br><span class="line">drwxr-xr-x 1 root root 115 Dec 30 07:18 ..</span><br><span class="line">drwxr-xr-x 2 root root  80 Dec 30 07:18 ..2019_12_30_07_18_56.019679131</span><br><span class="line">lrwxrwxrwx 1 root root  31 Dec 30 07:18 ..data -&gt; ..2019_12_30_07_18_56.019679131</span><br><span class="line">lrwxrwxrwx 1 root root  14 Dec 30 07:18 tls.crt -&gt; ..data/tls.crt</span><br><span class="line">lrwxrwxrwx 1 root root  14 Dec 30 07:18 tls.key -&gt; ..data/tls.key</span><br></pre></td></tr></table></figure><h4 id="配置bookinfo-com路由"><a href="#配置bookinfo-com路由" class="headerlink" title="配置bookinfo.com路由"></a>配置bookinfo.com路由</h4><h5 id="部署bookinfo"><a href="#部署bookinfo" class="headerlink" title="部署bookinfo"></a>部署bookinfo</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span><br></pre></td></tr></table></figure><h5 id="定义Gateway"><a href="#定义Gateway" class="headerlink" title="定义Gateway"></a>定义Gateway</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-gateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway # use istio default ingress gateway</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 443</span><br><span class="line">      name: https-bookinfo</span><br><span class="line">      protocol: HTTPS</span><br><span class="line">    tls:</span><br><span class="line">      mode: SIMPLE</span><br><span class="line">      serverCertificate: /etc/istio/ingressgateway-bookinfo-certs/tls.crt</span><br><span class="line">      privateKey: /etc/istio/ingressgateway-bookinfo-certs/tls.key</span><br><span class="line">    hosts:</span><br><span class="line">    - "bookinfo.com"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="定义VirtualService"><a href="#定义VirtualService" class="headerlink" title="定义VirtualService"></a>定义VirtualService</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - "bookinfo.com"</span><br><span class="line">  gateways:</span><br><span class="line">  - bookinfo-gateway</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /productpage</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /login</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /logout</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /api/v1/products</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: productpage</span><br><span class="line">        port:</span><br><span class="line">          number: 9080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="访问服务"><a href="#访问服务" class="headerlink" title="访问服务"></a>访问服务</h4><h5 id="bookinfo"><a href="#bookinfo" class="headerlink" title="bookinfo"></a>bookinfo</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">curl -o /dev/null \</span><br><span class="line">     -s \</span><br><span class="line">     -v \</span><br><span class="line">     -w "%&#123;http_code&#125;\n" \</span><br><span class="line">     -H 'Host:bookinfo.com' \</span><br><span class="line">     --resolve bookinfo.com:$SECURE_INGRESS_PORT:$INGRESS_HOST \</span><br><span class="line">     --cacert example.com.crt \</span><br><span class="line">     https://bookinfo.com:$SECURE_INGRESS_PORT/productpage</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">* Added bookinfo.com:30885:192.168.48.37 to DNS cache</span><br><span class="line">* About to connect() to bookinfo.com port 30885 (#0)</span><br><span class="line">*   Trying 192.168.48.37...</span><br><span class="line">* Connected to bookinfo.com (192.168.48.37) port 30885 (#0)</span><br><span class="line">* Initializing NSS with certpath: sql:/etc/pki/nssdb</span><br><span class="line">*   CAfile: example.com.crt</span><br><span class="line">  CApath: none</span><br><span class="line">* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</span><br><span class="line">* Server certificate:</span><br><span class="line">* subject: O=bookinfo organization,CN=bookinfo.com</span><br><span class="line">* start date: Dec 30 07:13:53 2019 GMT</span><br><span class="line">* expire date: Dec 29 07:13:53 2020 GMT</span><br><span class="line">* common name: bookinfo.com</span><br><span class="line">* issuer: CN=example.com,O=example Inc.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> GET /productpage HTTP/1.1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> User-Agent: curl/7.29.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Accept: */*</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Host:bookinfo.com</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; content-type: text/html; charset=utf-8</span><br><span class="line">&lt; content-length: 3889</span><br><span class="line">&lt; server: istio-envoy</span><br><span class="line">&lt; date: Mon, 30 Dec 2019 07:25:10 GMT</span><br><span class="line">&lt; x-envoy-upstream-service-time: 1015</span><br><span class="line">&lt; </span><br><span class="line">&#123; [data not shown]</span><br><span class="line">* Connection #0 to host bookinfo.com left intact</span><br><span class="line">200</span><br></pre></td></tr></table></figure><h5 id="httpbin"><a href="#httpbin" class="headerlink" title="httpbin"></a>httpbin</h5><blockquote><p>httpbin服务依然能正常访问</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -H 'Host:httpbin.example.com' \</span><br><span class="line">     --resolve httpbin.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST \</span><br><span class="line">     --cacert example.com.crt \</span><br><span class="line">     --cert httpbin-client.example.com.crt \</span><br><span class="line">     --key httpbin-client.example.com.key \</span><br><span class="line">     https://httpbin.example.com:$SECURE_INGRESS_PORT/status/418</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-=[ teapot ]=-</span><br><span class="line"></span><br><span class="line">   _...._</span><br><span class="line"> .'  _ _ `.</span><br><span class="line">| ."` ^ `". _,</span><br><span class="line">\_;`"---"`|//</span><br><span class="line">  |       ;/</span><br><span class="line">  \_     _/</span><br><span class="line">    `"""`</span><br></pre></td></tr></table></figure><h4 id="清理现场"><a href="#清理现场" class="headerlink" title="清理现场"></a>清理现场</h4><h5 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h5><p><font color="red">请按需清理！</font>后面做SSL/TLS实验还会用到！</p><h5 id="清理istio资源对象"><a href="#清理istio资源对象" class="headerlink" title="清理istio资源对象"></a>清理istio资源对象</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete gateway --ignore-not-found=true httpbin-gateway bookinfo-gateway</span><br><span class="line">kubectl delete virtualservice httpbin</span><br><span class="line">kubectl delete --ignore-not-found=true virtualservice bookinfo</span><br></pre></td></tr></table></figure><h5 id="清理证书"><a href="#清理证书" class="headerlink" title="清理证书"></a>清理证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf example.com.crt example.com.key</span><br><span class="line">rm -rf bookinfo.com.crt bookinfo.com.csr bookinfo.com.key</span><br><span class="line">rm -rf httpbin.example.com.crt httpbin.example.com.csr httpbin.example.com.key</span><br></pre></td></tr></table></figure><h5 id="清理Patch文件"><a href="#清理Patch文件" class="headerlink" title="清理Patch文件"></a>清理Patch文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf gateway-patch.json</span><br></pre></td></tr></table></figure><h5 id="清理httpbin服务"><a href="#清理httpbin服务" class="headerlink" title="清理httpbin服务"></a>清理httpbin服务</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete --ignore-not-found=true -f samples/httpbin/httpbin.yaml</span><br></pre></td></tr></table></figure><h2 id="基于SSL-TLS的Ingress-SDS密钥发现服务"><a href="#基于SSL-TLS的Ingress-SDS密钥发现服务" class="headerlink" title="基于SSL/TLS的Ingress(SDS密钥发现服务)"></a>基于SSL/TLS的Ingress(SDS密钥发现服务)</h2><h3 id="说明-4"><a href="#说明-4" class="headerlink" title="说明"></a>说明</h3><ul><li><p>通过<code>Secret Discovery Service</code>可以监视<code>TLS Credential</code>的生成</p></li><li><p><code>IngressGateway</code>可以动态增删改查证书，而不是通过Patch的方式重新部署<code>IngressGateway</code></p></li><li><p>不需要配置<code>IngressGateway</code>挂载<code>Secret</code>卷</p></li><li><p><code>IngressGateway</code>可以监控多个密钥对，因此只需要更新<code>Gateway</code>定义即可</p></li><li><p><code>Demo</code>默认不开启<code>SDS</code>功能，需要通过istioctl重新配置istio，配置如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--set values.gateways.istio-egressgateway.enabled=false</span><br><span class="line">--set values.gateways.istio-ingressgateway.sds.enabled=true</span><br></pre></td></tr></table></figure></li></ul><h3 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="Istio特性部署要求"><a href="#Istio特性部署要求" class="headerlink" title="Istio特性部署要求"></a>Istio特性部署要求</h4><ul><li>启用SDS功能</li></ul><h4 id="Istio部署参数"><a href="#Istio部署参数" class="headerlink" title="Istio部署参数"></a>Istio部署参数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply \</span><br><span class="line">         --set values.gateways.istio-egressgateway.enabled=false \</span><br><span class="line">         --set values.gateways.istio-ingressgateway.sds.enabled=true</span><br></pre></td></tr></table></figure><p><strong>为了方便测试，这里额外添加了部署参数</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply \</span><br><span class="line">    --set profile='demo' \</span><br><span class="line">    --set cni.enabled=true \</span><br><span class="line">    --set cni.components.cni.namespace='kube-system' \</span><br><span class="line">    --set hub='dockerhub.azk8s.cn/istio' \</span><br><span class="line">    --set values.gateways.istio-ingressgateway.type='NodePort' \</span><br><span class="line">    --set values.gateways.istio-egressgateway.enabled=false \</span><br><span class="line">    --set values.gateways.istio-ingressgateway.sds.enabled=true \</span><br><span class="line">    --set values.global.controlPlaneSecurityEnabled=true \</span><br><span class="line">    --set values.global.mtls.enabled=false</span><br></pre></td></tr></table></figure><h4 id="获取Ingress环境变量"><a href="#获取Ingress环境变量" class="headerlink" title="获取Ingress环境变量"></a>获取Ingress环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='&#123;.items[0].status.hostIP&#125;')</span><br><span class="line">export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="http2")].nodePort&#125;')</span><br><span class="line">export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="https")].nodePort&#125;')</span><br></pre></td></tr></table></figure><h3 id="部署httpbin"><a href="#部署httpbin" class="headerlink" title="部署httpbin"></a>部署httpbin</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/httpbin/httpbin.yaml</span><br></pre></td></tr></table></figure><h3 id="创建Secret-2"><a href="#创建Secret-2" class="headerlink" title="创建Secret"></a>创建Secret</h3><h4 id="说明-5"><a href="#说明-5" class="headerlink" title="说明"></a>说明</h4><ul><li>Secret对象的名字不能以<code>istio</code>或者<code>prometheus</code>开头</li><li>Secret对象不能包含<code>token</code>字段</li></ul><h4 id="已有证书-1"><a href="#已有证书-1" class="headerlink" title="已有证书"></a>已有证书</h4><p>如果购买了公网的可信任证书，可以跳过自建证书的步骤。</p><h4 id="自建证书-1"><a href="#自建证书-1" class="headerlink" title="自建证书"></a>自建证书</h4><h5 id="创建CA证书-1"><a href="#创建CA证书-1" class="headerlink" title="创建CA证书"></a>创建CA证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 \</span><br><span class="line">            -sha256 \</span><br><span class="line">            -nodes \</span><br><span class="line">            -days 365 \</span><br><span class="line">            -newkey rsa:2048 \</span><br><span class="line">            -subj '/O=example Inc./CN=example.com' \</span><br><span class="line">            -keyout example.com.key \</span><br><span class="line">            -out example.com.crt</span><br></pre></td></tr></table></figure><h5 id="创建证书-2"><a href="#创建证书-2" class="headerlink" title="创建证书"></a>创建证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openssl req -out \</span><br><span class="line">            httpbin.example.com.csr \</span><br><span class="line">            -newkey rsa:2048 \</span><br><span class="line">            -nodes \</span><br><span class="line">            -keyout httpbin.example.com.key \</span><br><span class="line">            -subj "/CN=httpbin.example.com/O=httpbin organization"</span><br><span class="line">openssl x509 -req \</span><br><span class="line">             -days 365 \</span><br><span class="line">             -CA example.com.crt \</span><br><span class="line">             -CAkey example.com.key \</span><br><span class="line">             -set_serial 0 \</span><br><span class="line">             -in httpbin.example.com.csr \</span><br><span class="line">             -out httpbin.example.com.crt</span><br></pre></td></tr></table></figure><h5 id="创建Secret-3"><a href="#创建Secret-3" class="headerlink" title="创建Secret"></a>创建Secret</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n istio-system \</span><br><span class="line">        create \</span><br><span class="line">        secret \</span><br><span class="line">        generic \</span><br><span class="line">        httpbin-credential \</span><br><span class="line">        --from-file=key=httpbin.example.com.key \</span><br><span class="line">        --from-file=cert=httpbin.example.com.crt</span><br></pre></td></tr></table></figure><h3 id="使用Gateway配置Ingress-1"><a href="#使用Gateway配置Ingress-1" class="headerlink" title="使用Gateway配置Ingress"></a>使用Gateway配置Ingress</h3><h4 id="创建Gateway-2"><a href="#创建Gateway-2" class="headerlink" title="创建Gateway"></a>创建Gateway</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: sds-gateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway # use istio default ingress gateway</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 443</span><br><span class="line">      name: https</span><br><span class="line">      protocol: HTTPS</span><br><span class="line">    tls:</span><br><span class="line">      mode: SIMPLE</span><br><span class="line">      credentialName: "httpbin-credential" # must be the same as secret</span><br><span class="line">    hosts:</span><br><span class="line">    - "httpbin.example.com"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="创建VirtualService-2"><a href="#创建VirtualService-2" class="headerlink" title="创建VirtualService"></a>创建VirtualService</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - "httpbin.example.com"</span><br><span class="line">  gateways:</span><br><span class="line">  - sds-gateway</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /status</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /delay</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        port:</span><br><span class="line">          number: 8000</span><br><span class="line">        host: httpbin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="访问HTTPS服务-1"><a href="#访问HTTPS服务-1" class="headerlink" title="访问HTTPS服务"></a>访问HTTPS服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -v \</span><br><span class="line">     -H 'Host:httpbin.example.com' \</span><br><span class="line">     --resolve httpbin.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST \</span><br><span class="line">     --cacert example.com.crt \</span><br><span class="line">     https://httpbin.example.com:$SECURE_INGRESS_PORT/status/418</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">* Added httpbin.example.com:31944:192.168.48.37 to DNS cache</span><br><span class="line">* About to connect() to httpbin.example.com port 31944 (#0)</span><br><span class="line">*   Trying 192.168.48.37...</span><br><span class="line">* Connected to httpbin.example.com (192.168.48.37) port 31944 (#0)</span><br><span class="line">* Initializing NSS with certpath: sql:/etc/pki/nssdb</span><br><span class="line">*   CAfile: example.com.crt</span><br><span class="line">  CApath: none</span><br><span class="line">* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</span><br><span class="line">* Server certificate:</span><br><span class="line">* subject: O=httpbin organization,CN=httpbin.example.com</span><br><span class="line">* start date: Dec 30 06:53:12 2019 GMT</span><br><span class="line">* expire date: Dec 29 06:53:12 2020 GMT</span><br><span class="line">* common name: httpbin.example.com</span><br><span class="line">* issuer: CN=example.com,O=example Inc.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> GET /status/418 HTTP/1.1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> User-Agent: curl/7.29.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Accept: */*</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Host:httpbin.example.com</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line">&lt; HTTP/1.1 418 Unknown</span><br><span class="line">&lt; server: istio-envoy</span><br><span class="line">&lt; date: Mon, 30 Dec 2019 08:53:33 GMT</span><br><span class="line">&lt; x-more-info: http://tools.ietf.org/html/rfc2324</span><br><span class="line">&lt; access-control-allow-origin: *</span><br><span class="line">&lt; access-control-allow-credentials: true</span><br><span class="line">&lt; content-length: 135</span><br><span class="line">&lt; x-envoy-upstream-service-time: 1</span><br><span class="line">&lt; </span><br><span class="line"></span><br><span class="line">    -=[ teapot ]=-</span><br><span class="line"></span><br><span class="line">       _...._</span><br><span class="line">     .'  _ _ `.</span><br><span class="line">    | ."` ^ `". _,</span><br><span class="line">    \_;`"---"`|//</span><br><span class="line">      |       ;/</span><br><span class="line">      \_     _/</span><br><span class="line">        `"""`</span><br></pre></td></tr></table></figure><h3 id="配置多Host的TLS-Ingress-1"><a href="#配置多Host的TLS-Ingress-1" class="headerlink" title="配置多Host的TLS Ingress"></a>配置多Host的TLS Ingress</h3><h4 id="创建TLS类型的Secret-2"><a href="#创建TLS类型的Secret-2" class="headerlink" title="创建TLS类型的Secret"></a>创建TLS类型的Secret</h4><blockquote><p>这里以bookinfo.com作为示例</p></blockquote><h5 id="创建证书-3"><a href="#创建证书-3" class="headerlink" title="创建证书"></a>创建证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">        -out bookinfo.com.csr \</span><br><span class="line">        -newkey rsa:2048 \</span><br><span class="line">        -nodes \</span><br><span class="line">        -keyout bookinfo.com.key \</span><br><span class="line">        -subj "/CN=bookinfo.com/O=bookinfo organization"</span><br><span class="line">openssl x509 -req \</span><br><span class="line">        -days 365 \</span><br><span class="line">        -CA example.com.crt \</span><br><span class="line">        -CAkey example.com.key \</span><br><span class="line">        -set_serial 0 \</span><br><span class="line">        -in bookinfo.com.csr \</span><br><span class="line">        -out bookinfo.com.crt</span><br></pre></td></tr></table></figure><h5 id="创建Secret-4"><a href="#创建Secret-4" class="headerlink" title="创建Secret"></a>创建Secret</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n istio-system \</span><br><span class="line">        create \</span><br><span class="line">        secret \</span><br><span class="line">        generic \</span><br><span class="line">        bookinfo-credential \</span><br><span class="line">        --from-file=key=bookinfo.com.key \</span><br><span class="line">        --from-file=cert=bookinfo.com.crt</span><br></pre></td></tr></table></figure><h4 id="配置Gateway"><a href="#配置Gateway" class="headerlink" title="配置Gateway"></a>配置Gateway</h4><blockquote><p>添加bookinfo的host</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: sds-gateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway # use istio default ingress gateway</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 443</span><br><span class="line">      name: https-httpbin</span><br><span class="line">      protocol: HTTPS</span><br><span class="line">    tls:</span><br><span class="line">      mode: SIMPLE</span><br><span class="line">      credentialName: "httpbin-credential"</span><br><span class="line">    hosts:</span><br><span class="line">    - "httpbin.example.com"</span><br><span class="line">  - port:</span><br><span class="line">      number: 443</span><br><span class="line">      name: https-bookinfo</span><br><span class="line">      protocol: HTTPS</span><br><span class="line">    tls:</span><br><span class="line">      mode: SIMPLE</span><br><span class="line">      credentialName: "bookinfo-credential"</span><br><span class="line">    hosts:</span><br><span class="line">    - "bookinfo.com"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="配置VirtualService"><a href="#配置VirtualService" class="headerlink" title="配置VirtualService"></a>配置VirtualService</h4><blockquote><p>配置bookinfo的VirtualService</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - "bookinfo.com"</span><br><span class="line">  gateways:</span><br><span class="line">  - sds-gateway</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /productpage</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /login</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /logout</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /api/v1/products</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: productpage</span><br><span class="line">        port:</span><br><span class="line">          number: 9080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="访问HTTPS服务-2"><a href="#访问HTTPS服务-2" class="headerlink" title="访问HTTPS服务"></a>访问HTTPS服务</h4><h5 id="bookinfo-1"><a href="#bookinfo-1" class="headerlink" title="bookinfo"></a>bookinfo</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">curl -o /dev/null \</span><br><span class="line">     -s \</span><br><span class="line">     -v \</span><br><span class="line">     -w "%&#123;http_code&#125;\n" \</span><br><span class="line">     -H 'Host:bookinfo.com' \</span><br><span class="line">     --resolve bookinfo.com:$SECURE_INGRESS_PORT:$INGRESS_HOST \</span><br><span class="line">     --cacert example.com.crt \</span><br><span class="line">     https://bookinfo.com:$SECURE_INGRESS_PORT/productpage</span><br></pre></td></tr></table></figure><h5 id="httpbin-1"><a href="#httpbin-1" class="headerlink" title="httpbin"></a>httpbin</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -H 'Host:httpbin.example.com' \</span><br><span class="line">     --resolve httpbin.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST \</span><br><span class="line">     --cacert example.com.crt \</span><br><span class="line">     --cert httpbin-client.example.com.crt \</span><br><span class="line">     --key httpbin-client.example.com.key \</span><br><span class="line">     https://httpbin.example.com:$SECURE_INGRESS_PORT/status/418</span><br></pre></td></tr></table></figure><h3 id="清理现场-1"><a href="#清理现场-1" class="headerlink" title="清理现场"></a>清理现场</h3><h4 id="清理istio资源对象-1"><a href="#清理istio资源对象-1" class="headerlink" title="清理istio资源对象"></a>清理istio资源对象</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete sds-gateway mygateway</span><br><span class="line">kubectl delete virtualservice httpbin bookinfo</span><br><span class="line">kubectl delete --ignore-not-found=true -n istio-system secret httpbin-credential \</span><br><span class="line">bookinfo-credential</span><br><span class="line">kubectl delete --ignore-not-found=true virtualservice bookinfo httpbin</span><br></pre></td></tr></table></figure><h4 id="清理证书-1"><a href="#清理证书-1" class="headerlink" title="清理证书"></a>清理证书</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf httpbin.example.com.crt httpbin.example.com.csr httpbin.example.com.key</span><br><span class="line">rm -rf bookinfo.com.crt bookinfo.com.csr bookinfo.com.key</span><br></pre></td></tr></table></figure><h4 id="清理Kubernetes资源对象"><a href="#清理Kubernetes资源对象" class="headerlink" title="清理Kubernetes资源对象"></a>清理Kubernetes资源对象</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete service --ignore-not-found=true bookinfo</span><br><span class="line">kubectl delete service --ignore-not-found=true httpbin</span><br></pre></td></tr></table></figure><h2 id="Ingress-Gateway-without-TLS-Termination"><a href="#Ingress-Gateway-without-TLS-Termination" class="headerlink" title="Ingress Gateway without TLS Termination"></a>Ingress Gateway without TLS Termination</h2><h3 id="说明-6"><a href="#说明-6" class="headerlink" title="说明"></a>说明</h3><ul><li>这个TLS Termination不知道怎么翻译，简单的说就是Gateway不处理TLS/HTTPS，直接透传后端的TLS</li><li>这里简单部署一个提供HTTPS的Nginx服务作为实验样例</li></ul><h3 id="环境准备-2"><a href="#环境准备-2" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="创建证书-4"><a href="#创建证书-4" class="headerlink" title="创建证书"></a>创建证书</h4><blockquote><p>沿用上面的证书生成方式</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">        -out nginx.example.com.csr \</span><br><span class="line">        -newkey rsa:2048 \</span><br><span class="line">        -nodes \</span><br><span class="line">        -keyout nginx.example.com.key \</span><br><span class="line">        -subj "/CN=nginx.example.com/O=Nginx organization"</span><br><span class="line">openssl x509 -req \</span><br><span class="line">        -days 365 \</span><br><span class="line">        -CA example.com.crt \</span><br><span class="line">        -CAkey example.com.key \</span><br><span class="line">        -set_serial 0 \</span><br><span class="line">        -in nginx.example.com.csr \</span><br><span class="line">        -out nginx.example.com.crt</span><br></pre></td></tr></table></figure><h4 id="创建Secret-5"><a href="#创建Secret-5" class="headerlink" title="创建Secret"></a>创建Secret</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl create \</span><br><span class="line">        secret \</span><br><span class="line">        tls \</span><br><span class="line">        nginx-server-certs \</span><br><span class="line">        --key nginx.example.com.key \</span><br><span class="line">        --cert nginx.example.com.crt</span><br></pre></td></tr></table></figure><h4 id="创建Nginx配置"><a href="#创建Nginx配置" class="headerlink" title="创建Nginx配置"></a>创建Nginx配置</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  <span class="attribute">log_format</span> main <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>]  <span class="variable">$status</span> '</span></span><br><span class="line">  <span class="string">'"<span class="variable">$request</span>" <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">  <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line">  <span class="attribute">access_log</span> /var/log/nginx/access.log main;</span><br><span class="line">  <span class="attribute">error_log</span>  /var/log/nginx/error.log;</span><br><span class="line"></span><br><span class="line">  <span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line">    <span class="attribute">index</span> index.html;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">server_name</span> nginx.example.com;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/nginx-server-certs/tls.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/nginx-server-certs/tls.key;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建ConfigMap"><a href="#创建ConfigMap" class="headerlink" title="创建ConfigMap"></a>创建ConfigMap</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create configmap nginx-configmap --from-file=nginx.conf=./nginx.conf</span><br></pre></td></tr></table></figure><h4 id="部署Nginx"><a href="#部署Nginx" class="headerlink" title="部署Nginx"></a>部署Nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | istioctl kube-inject -f - | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: my-nginx</span><br><span class="line">  labels:</span><br><span class="line">    run: my-nginx</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 443</span><br><span class="line">    protocol: TCP</span><br><span class="line">  selector:</span><br><span class="line">    run: my-nginx</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: my-nginx</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      run: my-nginx</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        run: my-nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: my-nginx</span><br><span class="line">        image: nginx</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 443</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: nginx-config</span><br><span class="line">          mountPath: /etc/nginx</span><br><span class="line">          readOnly: true</span><br><span class="line">        - name: nginx-server-certs</span><br><span class="line">          mountPath: /etc/nginx-server-certs</span><br><span class="line">          readOnly: true</span><br><span class="line">      volumes:</span><br><span class="line">      - name: nginx-config</span><br><span class="line">        configMap:</span><br><span class="line">          name: nginx-configmap</span><br><span class="line">      - name: nginx-server-certs</span><br><span class="line">        secret:</span><br><span class="line">          secretName: nginx-server-certs</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="测试Nginx服务"><a href="#测试Nginx服务" class="headerlink" title="测试Nginx服务"></a>测试Nginx服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NGINX_POD=$(kubectl get pod  -l run=my-nginx -o jsonpath=&#123;.items..metadata.name&#125;)</span><br><span class="line">kubectl exec -it $NGINX_POD -c istio-proxy \</span><br><span class="line">        -- \</span><br><span class="line">        curl -I -k \</span><br><span class="line">        --resolve nginx.example.com:443:127.0.0.1 \</span><br><span class="line">        https://nginx.example.com</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.17.6</span><br><span class="line">Date: Mon, 30 Dec 2019 14:26:15 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Tue, 19 Nov 2019 12:50:08 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: "5dd3e500-264"</span><br><span class="line">Accept-Ranges: bytes</span><br></pre></td></tr></table></figure><h3 id="使用Gateway配置Ingress-2"><a href="#使用Gateway配置Ingress-2" class="headerlink" title="使用Gateway配置Ingress"></a>使用Gateway配置Ingress</h3><h4 id="配置Gateway-1"><a href="#配置Gateway-1" class="headerlink" title="配置Gateway"></a>配置Gateway</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: mygateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway # use istio default ingress gateway</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 443</span><br><span class="line">      name: https</span><br><span class="line">      protocol: HTTPS</span><br><span class="line">    tls:</span><br><span class="line">      mode: PASSTHROUGH</span><br><span class="line">    hosts:</span><br><span class="line">    - nginx.example.com</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="配置VirtualService-1"><a href="#配置VirtualService-1" class="headerlink" title="配置VirtualService"></a>配置VirtualService</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - nginx.example.com</span><br><span class="line">  gateways:</span><br><span class="line">  - mygateway</span><br><span class="line">  tls:</span><br><span class="line">  - match:</span><br><span class="line">    - port: 443</span><br><span class="line">      sni_hosts:</span><br><span class="line">      - nginx.example.com</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: my-nginx</span><br><span class="line">        port:</span><br><span class="line">          number: 443</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="测试TLS直通"><a href="#测试TLS直通" class="headerlink" title="测试TLS直通"></a>测试TLS直通</h3><blockquote><p>从集群外部访问Nginx服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -v \</span><br><span class="line">     --resolve nginx.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST \</span><br><span class="line">     --cacert example.com.crt \</span><br><span class="line">     https://nginx.example.com:$SECURE_INGRESS_PORT</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p><p>这里可以看到证书信息是<code>nginx.example.com</code>，并且证书能顺利通过验证</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">* Added nginx.example.com:31944:192.168.48.37 to DNS cache</span><br><span class="line">* About to connect() to nginx.example.com port 31944 (#0)</span><br><span class="line">*   Trying 192.168.48.37...</span><br><span class="line">* Connected to nginx.example.com (192.168.48.37) port 31944 (#0)</span><br><span class="line">* Initializing NSS with certpath: sql:/etc/pki/nssdb</span><br><span class="line">*   CAfile: example.com.crt</span><br><span class="line">  CApath: none</span><br><span class="line">* SSL connection using TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</span><br><span class="line">* Server certificate:</span><br><span class="line">* subject: O=Nginx organization,CN=nginx.example.com</span><br><span class="line">* start date: Dec 30 13:55:24 2019 GMT</span><br><span class="line">* expire date: Dec 29 13:55:24 2020 GMT</span><br><span class="line">* common name: nginx.example.com</span><br><span class="line">* issuer: CN=example.com,O=example Inc.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> GET / HTTP/1.1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> User-Agent: curl/7.29.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Host: nginx.example.com:31944</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Accept: */*</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Server: nginx/1.17.6</span><br><span class="line">&lt; Date: Mon, 30 Dec 2019 14:30:45 GMT</span><br><span class="line">&lt; Content-Type: text/html</span><br><span class="line">&lt; Content-Length: 612</span><br><span class="line">&lt; Last-Modified: Tue, 19 Nov 2019 12:50:08 GMT</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; ETag: "5dd3e500-264"</span><br><span class="line">&lt; Accept-Ranges: bytes</span><br><span class="line">&lt; </span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="清理现场-2"><a href="#清理现场-2" class="headerlink" title="清理现场"></a>清理现场</h3><h4 id="清理Kubernetes资源对象-1"><a href="#清理Kubernetes资源对象-1" class="headerlink" title="清理Kubernetes资源对象"></a>清理Kubernetes资源对象</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete secret nginx-server-certs</span><br><span class="line">kubectl delete configmap nginx-configmap</span><br><span class="line">kubectl delete service my-nginx</span><br><span class="line">kubectl delete deployment my-nginx</span><br><span class="line">kubectl delete gateway mygateway</span><br><span class="line">kubectl delete virtualservice nginx</span><br></pre></td></tr></table></figure><h4 id="清理证书和配置文件"><a href="#清理证书和配置文件" class="headerlink" title="清理证书和配置文件"></a>清理证书和配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf nginx.conf nginx.example.com.crt nginx.example.com.csr nginx.example.com.key</span><br></pre></td></tr></table></figure><h2 id="Ingress-With-Cert-Manager"><a href="#Ingress-With-Cert-Manager" class="headerlink" title="Ingress With Cert-Manager"></a>Ingress With Cert-Manager</h2><h3 id="暂时没这块需求就不弄了"><a href="#暂时没这块需求就不弄了" class="headerlink" title="[暂时没这块需求就不弄了]"></a>[暂时没这块需求就不弄了]</h3><h3 id="说明-7"><a href="#说明-7" class="headerlink" title="说明"></a>说明</h3><ul><li><code>Cert-Manager</code>是一个社区项目，这里是<a href="https://docs.cert-manager.io/" target="_blank" rel="noopener">文档</a></li><li>项目状态是<code>pre-1.0</code>，还没GA，API可能还会变更，所以谨慎使用！</li><li>可以通过这个项目申请<code>Let&#39;s Encrypt</code>证书</li><li>自动管理和颁发证书</li><li>定期更新轮换证书</li></ul><h3 id="环境准备-3"><a href="#环境准备-3" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="Istio特性部署要求-1"><a href="#Istio特性部署要求-1" class="headerlink" title="Istio特性部署要求"></a>Istio特性部署要求</h4><ul><li>SDS(Secrect Discovery Service)</li><li>Ingress</li></ul><h4 id="Istio部署参数-1"><a href="#Istio部署参数-1" class="headerlink" title="Istio部署参数"></a>Istio部署参数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply \</span><br><span class="line">  --set values.gateways.istio-ingressgateway.sds.enabled=true \</span><br><span class="line">  --set values.global.k8sIngress.enabled=true \</span><br><span class="line">  --set values.global.k8sIngress.enableHttps=true \</span><br><span class="line">  --set values.global.k8sIngress.gatewayName=ingressgateway</span><br></pre></td></tr></table></figure><p><strong>为了测试方便，这里额外添加参数</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply \</span><br><span class="line">    --set profile='demo' \</span><br><span class="line">    --set cni.enabled=true \</span><br><span class="line">    --set cni.components.cni.namespace='kube-system' \</span><br><span class="line">    --set hub='dockerhub.azk8s.cn/istio' \</span><br><span class="line">    --set values.gateways.istio-ingressgateway.type='NodePort' \</span><br><span class="line">    --set values.gateways.istio-egressgateway.enabled=false \</span><br><span class="line">    --set values.gateways.istio-ingressgateway.sds.enabled=true \</span><br><span class="line">    --set values.global.controlPlaneSecurityEnabled=true \</span><br><span class="line">    --set values.global.k8sIngress.enabled=true \</span><br><span class="line">    --set values.global.k8sIngress.enableHttps=true \</span><br><span class="line">    --set values.global.k8sIngress.gatewayName=ingressgateway \</span><br><span class="line">    --set values.global.mtls.enabled=false</span><br></pre></td></tr></table></figure><h4 id="部署Cert-Manager"><a href="#部署Cert-Manager" class="headerlink" title="部署Cert-Manager"></a>部署Cert-Manager</h4><blockquote><p>参考这里的<a href="https://cert-manager.io/docs/installation/kubernetes/" target="_blank" rel="noopener">Cert-Manager安装部署文档</a></p></blockquote><h5 id="创建命名空间"><a href="#创建命名空间" class="headerlink" title="创建命名空间"></a>创建命名空间</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace cert-manager</span><br></pre></td></tr></table></figure><h5 id="部署CRD和Cert-Manager"><a href="#部署CRD和Cert-Manager" class="headerlink" title="部署CRD和Cert-Manager"></a>部署CRD和Cert-Manager</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.12.0/cert-manager.yaml</span><br></pre></td></tr></table></figure><h5 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods --namespace cert-manager</span><br></pre></td></tr></table></figure><h1 id="Egress"><a href="#Egress" class="headerlink" title="Egress"></a>Egress</h1><h3 id="暂时没这块需求就不弄了-1"><a href="#暂时没这块需求就不弄了-1" class="headerlink" title="[暂时没这块需求就不弄了]"></a>[暂时没这块需求就不弄了]</h3><h2 id="说明-8"><a href="#说明-8" class="headerlink" title="说明"></a>说明</h2><ul><li>Egress是用来管控Istio服务网格的出口流量</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;istio版本号&lt;code&gt;1.4.2&lt;/code&gt;&lt;/li&gt;&lt;li&gt;k8s集群版本&lt;code&gt;v1.14.8&lt;/code&gt;&lt;/l
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Kubernetes/"/>
    
      <category term="Istio" scheme="https://luanlengli.github.io/categories/Kubernetes/Istio/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
      <category term="Istio" scheme="https://luanlengli.github.io/tags/Istio/"/>
    
  </entry>
  
  <entry>
    <title>从零搭建基于Istio的ServiceMesh-01快速部署</title>
    <link href="https://luanlengli.github.io/2019/12/17/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EIstio%E7%9A%84ServiceMesh-01%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2.html"/>
    <id>https://luanlengli.github.io/2019/12/17/从零搭建基于Istio的ServiceMesh-01快速部署.html</id>
    <published>2019-12-17T07:16:33.000Z</published>
    <updated>2020-01-13T07:05:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>istio版本号<code>1.4.2</code></li><li>k8s集群版本<code>v1.14.8</code></li><li>istio在<code>1.4</code>提供了基于istioctl命令直接部署的功能，这里使用istioctl部署istio。<ul><li>自带配置校验、和丰富的自定义配置选项</li><li>API版本号还在<font color="red">Alpha阶段</font>，<code>install.istio.io/v1alpha2</code>，请自行判断是否适用</li><li>部署要求<ul><li>至少得有Kubernetes集群</li><li>Istio-1.4版本在<code>1.13</code>、<code>1.14</code>、<code>1.15</code>的k8s集群上是做过测试通过的</li><li>最新的<code>1.16</code>没在官方文档里注明，应该也是可以用的。<a href="https://istio.io/docs/setup/platform-setup/" target="_blank" rel="noopener">官方说明在此</a></li></ul></li></ul></li><li>这里通过官方示例熟悉一下istio的ServiceMesh特性</li></ul><h1 id="下载Istio项目文件"><a href="#下载Istio项目文件" class="headerlink" title="下载Istio项目文件"></a>下载Istio项目文件</h1><h2 id="在Github上下载"><a href="#在Github上下载" class="headerlink" title="在Github上下载"></a>在Github上下载</h2><p>在Github项目地址可以在<a href="https://github.com/istio/istio/releases" target="_blank" rel="noopener">release页面</a>找到对应版本的部署文件下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https://github.com/istio/istio/releases/download/1.4.2/istio-1.4.2-linux.tar.gz | tar xz</span><br></pre></td></tr></table></figure><h2 id="通过Shell脚本安装"><a href="#通过Shell脚本安装" class="headerlink" title="通过Shell脚本安装"></a>通过Shell脚本安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://istio.io/downloadIstio | sh -</span><br></pre></td></tr></table></figure><h2 id="切换工作目录"><a href="#切换工作目录" class="headerlink" title="切换工作目录"></a>切换工作目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd istio-1.4.2</span><br></pre></td></tr></table></figure><h2 id="目录内容"><a href="#目录内容" class="headerlink" title="目录内容"></a>目录内容</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tree ~/istio-1.4.2 -L 1</span><br><span class="line">./istio-1.4.2</span><br><span class="line">├── bin</span><br><span class="line">├── install</span><br><span class="line">├── LICENSE</span><br><span class="line">├── manifest.yaml</span><br><span class="line">├── README.md</span><br><span class="line">├── samples</span><br><span class="line">└── tools</span><br></pre></td></tr></table></figure><p>项目目录：</p><ul><li><code>install/kubernetes</code>包含了部署在Kubernetes集群的YAML文件</li><li><code>samples</code>包含了测试样例</li><li><code>bin</code>包含了<code>istioctl</code>二进制文件</li><li><code>tools</code>包含了命令补全和一些其他用途的脚本</li></ul><h2 id="拷贝二进制文件"><a href="#拷贝二进制文件" class="headerlink" title="拷贝二进制文件"></a>拷贝二进制文件</h2><blockquote><p>这里把<code>istioctl</code>拷贝到<code>/usr/local/bin</code>目录</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp bin/istioctl /usr/local/bin/</span><br></pre></td></tr></table></figure><h2 id="设置命令补全"><a href="#设置命令补全" class="headerlink" title="设置命令补全"></a>设置命令补全</h2><ul><li>支持bash和zsh的命令补全，官方文档在<a href="https://istio.io/docs/ops/diagnostic-tools/istioctl/#enabling-auto-completion" target="_blank" rel="noopener">这里</a></li><li>这里只做bash的</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp tools/istioctl.bash /etc/bash_completion.d/istioctl</span><br><span class="line">source /etc/bash_completion.d/istioctl</span><br></pre></td></tr></table></figure><h1 id="部署istio"><a href="#部署istio" class="headerlink" title="部署istio"></a>部署istio</h1><p><code>istioctl</code>提供了内建的多个<code>profile</code>用于部署<code>istio</code></p><h2 id="查看内建的profile"><a href="#查看内建的profile" class="headerlink" title="查看内建的profile"></a>查看内建的profile</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl profile list</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Istio configuration profiles:</span><br><span class="line">    minimal</span><br><span class="line">    remote</span><br><span class="line">    sds</span><br><span class="line">    default</span><br><span class="line">    demo</span><br></pre></td></tr></table></figure><h2 id="查看Profile的默认值"><a href="#查看Profile的默认值" class="headerlink" title="查看Profile的默认值"></a>查看Profile的默认值</h2><p>Profile对应的YAML文件存放在<code>install/kubernetes/operator/profiles</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">install/kubernetes/operator/profiles</span><br><span class="line">├── default.yaml</span><br><span class="line">├── demo.yaml</span><br><span class="line">├── minimal.yaml</span><br><span class="line">├── remote.yaml</span><br><span class="line">└── sds.yaml</span><br></pre></td></tr></table></figure><h2 id="Profile之间的区别"><a href="#Profile之间的区别" class="headerlink" title="Profile之间的区别"></a>Profile之间的区别</h2><blockquote><p>这里直接照搬了官方文档的说明</p></blockquote><ol><li><p><strong>default</strong>: enables components according to the default settings of the <a href="https://istio.io/docs/reference/config/istio.operator.v1alpha12.pb/" target="_blank" rel="noopener"><code>IstioControlPlane</code> API</a> (recommend for production deployments). You can display the default setting by running the command <code>istioctl profile dump</code>.</p></li><li><p><strong>demo</strong>: configuration designed to showcase Istio functionality with modest resource requirements. It is suitable to run the <a href="https://istio.io/docs/examples/bookinfo/" target="_blank" rel="noopener">Bookinfo</a> application and associated tasks. This is the configuration that is installed with the <a href="https://istio.io/docs/setup/getting-started/" target="_blank" rel="noopener">quick start</a> instructions, but you can later <a href="https://istio.io/docs/setup/install/istioctl/#customizing-the-configuration" target="_blank" rel="noopener">customize the configuration</a> to enable additional features if you wish to explore more advanced tasks.</p><blockquote><p>This profile enables high levels of tracing and access logging so it is not suitable for performance tests.</p></blockquote></li><li><p><strong>minimal</strong>: the minimal set of components necessary to use Istio’s <a href="https://istio.io/docs/tasks/traffic-management/" target="_blank" rel="noopener">traffic management</a> features.</p></li><li><p><strong>sds</strong>: similar to the <strong>default</strong> profile, but also enables Istio’s <a href="https://istio.io/docs/tasks/security/citadel-config/auth-sds" target="_blank" rel="noopener">SDS (secret discovery service)</a>. This profile comes with additional authentication features enabled by default (Strict Mutual TLS).</p></li><li><p><strong>remote</strong>: used for configuring remote clusters of a <a href="https://istio.io/docs/ops/deployment/deployment-models/#multiple-clusters" target="_blank" rel="noopener">multicluster mesh</a> with a <a href="https://istio.io/docs/setup/install/multicluster/shared-vpn/" target="_blank" rel="noopener">shared control plane</a> configuration.</p></li></ol><table><thead><tr><th></th><th>default</th><th>demo</th><th>minimal</th><th>sds</th><th>remote</th></tr></thead><tbody><tr><td>Core components</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><code>istio-citadel</code></td><td>X</td><td>X</td><td></td><td>X</td><td>X</td></tr><tr><td><code>istio-egressgateway</code></td><td></td><td>X</td><td></td><td></td><td></td></tr><tr><td><code>istio-galley</code></td><td>X</td><td>X</td><td></td><td>X</td><td></td></tr><tr><td><code>istio-ingressgateway</code></td><td>X</td><td>X</td><td></td><td>X</td><td></td></tr><tr><td><code>istio-nodeagent</code></td><td></td><td></td><td></td><td>X</td><td></td></tr><tr><td><code>istio-pilot</code></td><td>X</td><td>X</td><td>X</td><td>X</td><td></td></tr><tr><td><code>istio-policy</code></td><td>X</td><td>X</td><td></td><td>X</td><td></td></tr><tr><td><code>istio-sidecar-injector</code></td><td>X</td><td>X</td><td></td><td>X</td><td>X</td></tr><tr><td><code>istio-telemetry</code></td><td>X</td><td>X</td><td></td><td>X</td><td></td></tr><tr><td>Addons</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><code>grafana</code></td><td></td><td>X</td><td></td><td></td><td></td></tr><tr><td><code>istio-tracing</code></td><td></td><td>X</td><td></td><td></td><td></td></tr><tr><td><code>kiali</code></td><td></td><td>X</td><td></td><td></td><td></td></tr><tr><td><code>prometheus</code></td><td>X</td><td>X</td><td></td><td>X</td></tr></tbody></table><h2 id="QuickStart"><a href="#QuickStart" class="headerlink" title="QuickStart"></a>QuickStart</h2><h3 id="使用内建的profile部署"><a href="#使用内建的profile部署" class="headerlink" title="使用内建的profile部署"></a>使用内建的profile部署</h3><p>这里用<code>demo</code>作为演示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply --set profile=demo</span><br></pre></td></tr></table></figure><h3 id="部署时指定参数"><a href="#部署时指定参数" class="headerlink" title="部署时指定参数"></a>部署时指定参数</h3><blockquote><p>注意下！istioctl部署支持两种API，分别是<code>IstioControlPlane API</code>和<code>Helm API</code></p><ul><li>使用<code>demo</code>作为部署默认参数</li><li>开启<code>CNI</code>插件，并且把<code>CNI</code>插件部署到<code>kube-system</code>命名空间</li><li>修改镜像源地址为<code>dockerhub.azk8s.cn</code></li><li><code>istio-ingressgateway</code>的<code>Service</code>类型设置为<code>NodePort</code></li><li>开启控制平面安全功能</li><li>关闭<code>全局mTLS</code></li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply \</span><br><span class="line">--set profile='demo' \</span><br><span class="line">--set cni.enabled=true \</span><br><span class="line">--set cni.components.cni.namespace='kube-system' \</span><br><span class="line">--set hub='dockerhub.azk8s.cn/istio' \</span><br><span class="line">--set values.gateways.istio-ingressgateway.type='LoadBalancer' \</span><br><span class="line">--set values.gateways.istio-egressgateway.enabled=false \</span><br><span class="line">--set values.gateways.istio-ingressgateway.sds.enabled=true \</span><br><span class="line">--set values.global.controlPlaneSecurityEnabled=true \</span><br><span class="line">--set values.global.mtls.enabled=false</span><br></pre></td></tr></table></figure><h3 id="验证istio安装情况"><a href="#验证istio安装情况" class="headerlink" title="验证istio安装情况"></a>验证istio安装情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc -n istio-system</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">NAME                     TYPE           CLUSTER-IP       EXTERNAL-IP     PORT(S)                                                                                                                                      AGE</span><br><span class="line">grafana                  ClusterIP      172.21.211.123   &lt;none&gt;          3000/TCP                                                                                                                                     2m</span><br><span class="line">istio-citadel            ClusterIP      172.21.177.222   &lt;none&gt;          8060/TCP,15014/TCP                                                                                                                           2m</span><br><span class="line">istio-egressgateway      ClusterIP      172.21.113.24    &lt;none&gt;          80/TCP,443/TCP,15443/TCP                                                                                                                     2m</span><br><span class="line">istio-galley             ClusterIP      172.21.132.247   &lt;none&gt;          443/TCP,15014/TCP,9901/TCP                                                                                                                   2m</span><br><span class="line">istio-ingressgateway     LoadBalancer   172.21.144.254   52.116.22.242   15020:31831/TCP,80:31380/TCP,443:31390/TCP,31400:31400/TCP,15029:30318/TCP,15030:32645/TCP,15031:31933/TCP,15032:31188/TCP,15443:30838/TCP   2m</span><br><span class="line">istio-pilot              ClusterIP      172.21.105.205   &lt;none&gt;          15010/TCP,15011/TCP,8080/TCP,15014/TCP                                                                                                       2m</span><br><span class="line">istio-policy             ClusterIP      172.21.14.236    &lt;none&gt;          9091/TCP,15004/TCP,15014/TCP                                                                                                                 2m</span><br><span class="line">istio-sidecar-injector   ClusterIP      172.21.155.47    &lt;none&gt;          443/TCP,15014/TCP                                                                                                                            2m</span><br><span class="line">istio-telemetry          ClusterIP      172.21.196.79    &lt;none&gt;          9091/TCP,15004/TCP,15014/TCP,42422/TCP                                                                                                       2m</span><br><span class="line">jaeger-agent             ClusterIP      None             &lt;none&gt;          5775/UDP,6831/UDP,6832/UDP                                                                                                                   2m</span><br><span class="line">jaeger-collector         ClusterIP      172.21.135.51    &lt;none&gt;          14267/TCP,14268/TCP                                                                                                                          2m</span><br><span class="line">jaeger-query             ClusterIP      172.21.26.187    &lt;none&gt;          16686/TCP                                                                                                                                    2m</span><br><span class="line">kiali                    ClusterIP      172.21.155.201   &lt;none&gt;          20001/TCP                                                                                                                                    2m</span><br><span class="line">prometheus               ClusterIP      172.21.63.159    &lt;none&gt;          9090/TCP                                                                                                                                     2m</span><br><span class="line">tracing                  ClusterIP      172.21.2.245     &lt;none&gt;          80/TCP                                                                                                                                       2m</span><br><span class="line">zipkin                   ClusterIP      172.21.182.245   &lt;none&gt;          9411/TCP</span><br></pre></td></tr></table></figure><h3 id="获取Istio-IngressGateway访问方式"><a href="#获取Istio-IngressGateway访问方式" class="headerlink" title="获取Istio-IngressGateway访问方式"></a>获取Istio-IngressGateway访问方式</h3><h4 id="NodePort"><a href="#NodePort" class="headerlink" title="NodePort"></a>NodePort</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='&#123;.items[0].status.hostIP&#125;')</span><br><span class="line">export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="http2")].nodePort&#125;')</span><br><span class="line">export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="https")].nodePort&#125;')</span><br></pre></td></tr></table></figure><h4 id="LoadBalancer"><a href="#LoadBalancer" class="headerlink" title="LoadBalancer"></a>LoadBalancer</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.status.loadBalancer.ingress[0].ip&#125;')</span><br><span class="line">export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="http2")].port&#125;')</span><br><span class="line">export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="https")].port&#125;')</span><br></pre></td></tr></table></figure><h2 id="基于IstioControlPlane-API部署"><a href="#基于IstioControlPlane-API部署" class="headerlink" title="基于IstioControlPlane API部署"></a>基于IstioControlPlane API部署</h2><p>Istio提供的部署选项非常多，想在部署的时候做深度定制，最好基于IstioControlPlane API来实现。</p><h3 id="官方示例模板"><a href="#官方示例模板" class="headerlink" title="官方示例模板"></a>官方示例模板</h3><blockquote><p>官方文档有点坑！不带<code>apiVersion</code>和<code>kind</code>，格式也有点不对。</p><p>这里根据官方部署文件里面的Profile补齐了<code>apiVersion</code>和<code>kind</code>，并且魔改了一下</p></blockquote><ol><li>使用istio默认值部署</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用minimal Profile默认值部署</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  profile:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure><ol start="3"><li>使用istio默认值部署，关闭telemetry功能</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  telemetry:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ol start="4"><li>使用istio默认值部署，每个功能和安全组件安装在单独的namespace</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  traffic_management:</span></span><br><span class="line"><span class="attr">    components:</span></span><br><span class="line"><span class="attr">      namespace:</span> <span class="string">istio-traffic-management</span></span><br><span class="line"><span class="attr">  policy:</span></span><br><span class="line"><span class="attr">    components:</span></span><br><span class="line"><span class="attr">      namespace:</span> <span class="string">istio-policy</span></span><br><span class="line"><span class="attr">  telemetry:</span></span><br><span class="line"><span class="attr">    components:</span></span><br><span class="line"><span class="attr">      namespace:</span> <span class="string">istio-telemetry</span></span><br><span class="line"><span class="attr">  config_management:</span></span><br><span class="line"><span class="attr">    components:</span></span><br><span class="line"><span class="attr">      namespace:</span> <span class="string">istio-config-management</span></span><br><span class="line"><span class="attr">  security:</span></span><br><span class="line"><span class="attr">    components:</span></span><br><span class="line"><span class="attr">      citadel:</span></span><br><span class="line"><span class="attr">        namespace:</span> <span class="string">istio-citadel</span></span><br><span class="line"><span class="attr">      cert_manager:</span></span><br><span class="line"><span class="attr">        namespace:</span> <span class="string">istio-cert-manager</span></span><br><span class="line"><span class="attr">      node_agent:</span></span><br><span class="line"><span class="attr">        namespace:</span> <span class="string">istio-node-agent</span></span><br></pre></td></tr></table></figure><ol start="5"><li>使用istio默认值部署，并且配置k8s相关配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  traffic_management:</span></span><br><span class="line"><span class="attr">    components:</span></span><br><span class="line"><span class="attr">      pilot:</span></span><br><span class="line"><span class="attr">        k8s:</span></span><br><span class="line"><span class="attr">          resources:</span></span><br><span class="line"><span class="attr">            limits:</span></span><br><span class="line"><span class="attr">              cpu:</span> <span class="number">444</span><span class="string">m</span></span><br><span class="line"><span class="attr">              memory:</span> <span class="number">333</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">            requests:</span></span><br><span class="line"><span class="attr">              cpu:</span> <span class="number">222</span><span class="string">m</span></span><br><span class="line"><span class="attr">              memory:</span> <span class="number">111</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">          readinessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">44</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">11</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">22</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">33</span></span><br></pre></td></tr></table></figure><ol start="6"><li>使用istio默认值部署，使用values.yaml来自定义proxy组件</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  values:</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">proxy:</span></span><br><span class="line">      <span class="attr">enableCoreDump:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">dnsRefreshRate:</span> <span class="number">10</span><span class="string">s</span></span><br></pre></td></tr></table></figure><ol start="7"><li>使用istio默认值部署，自定义gallery容器的配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  configManagement:</span></span><br><span class="line"><span class="attr">    components:</span></span><br><span class="line"><span class="attr">      galley:</span></span><br><span class="line"><span class="attr">        k8s:</span></span><br><span class="line"><span class="attr">          overlays:</span></span><br><span class="line"><span class="attr">          - apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">            kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">istio-galley</span></span><br><span class="line"><span class="attr">            patches:</span></span><br><span class="line"><span class="attr">            - path:</span> <span class="string">spec.template.spec.containers.[name:galley].command.[--livenessProbeInterval]</span></span><br><span class="line"><span class="attr">              value:</span> <span class="bullet">--livenessProbeInterval=123s</span></span><br></pre></td></tr></table></figure><ol start="8"><li>使用istio内建的Profile来生成</li></ol><blockquote><p>这里用demo作为演示，dump出来的文件不带<code>apiVerion</code>和<code>kind</code>所以没法直接用！</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl profile dump demo</span><br></pre></td></tr></table></figure><blockquote><p>修正版如下，快700行了，好长！</p><p>可以根据生成的模板文件来修改所需配置！</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  autoInjection:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line"><span class="attr">  cni:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line"><span class="attr">  configManagement:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line"><span class="attr">  gateways:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line"><span class="attr">  policy:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line"><span class="attr">  secure:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line"><span class="attr">  values:</span></span><br><span class="line"><span class="attr">    global:</span></span><br><span class="line">      <span class="string">...</span></span><br></pre></td></tr></table></figure><h3 id="部署istio-1"><a href="#部署istio-1" class="headerlink" title="部署istio"></a>部署istio</h3><h4 id="编辑模板文件"><a href="#编辑模板文件" class="headerlink" title="编辑模板文件"></a>编辑模板文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim istio-template.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">install.istio.io/v1alpha2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IstioControlPlane</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  profile:</span> <span class="string">demo</span></span><br></pre></td></tr></table></figure><h4 id="直接使用模板文件部署"><a href="#直接使用模板文件部署" class="headerlink" title="直接使用模板文件部署"></a>直接使用模板文件部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest deploy -f istio-template.yaml</span><br></pre></td></tr></table></figure><h4 id="将模板文件转成部署文件再部署"><a href="#将模板文件转成部署文件再部署" class="headerlink" title="将模板文件转成部署文件再部署"></a>将模板文件转成部署文件再部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest generate --set profile=demo \</span><br><span class="line">                           --set hub='dockerhub.azk8s.cn' \</span><br><span class="line">                           &gt; istio-install.yaml</span><br><span class="line">kubectl apply -f istio-install.yaml</span><br></pre></td></tr></table></figure><h3 id="验证istio安装情况-1"><a href="#验证istio安装情况-1" class="headerlink" title="验证istio安装情况"></a>验证istio安装情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc -n istio-system</span><br></pre></td></tr></table></figure><h1 id="体验Istio功能特性"><a href="#体验Istio功能特性" class="headerlink" title="体验Istio功能特性"></a>体验Istio功能特性</h1><blockquote><p>这里跟随官方文档的Task来探索Istio的功能特性</p><font color="red">演示使用demo默认设置部署istio</font></blockquote><h2 id="samples目录"><a href="#samples目录" class="headerlink" title="samples目录"></a>samples目录</h2><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><ul><li>samples目录存放istio的官方示例</li></ul><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree samples/ -L 3 --dirsfirst</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">samples/</span><br><span class="line">├── bookinfo</span><br><span class="line">│   ├── networking</span><br><span class="line">│   │   ├── bookinfo-gateway.yaml</span><br><span class="line">│   │   ├── certmanager-gateway.yaml</span><br><span class="line">│   │   ├── destination-rule-all-mtls.yaml</span><br><span class="line">│   │   ├── destination-rule-all.yaml</span><br><span class="line">│   │   ├── destination-rule-reviews.yaml</span><br><span class="line">│   │   ├── egress-rule-google-apis.yaml</span><br><span class="line">│   │   ├── fault-injection-details-v1.yaml</span><br><span class="line">│   │   ├── virtual-service-all-v1.yaml</span><br><span class="line">│   │   ├── virtual-service-details-v2.yaml</span><br><span class="line">│   │   ├── virtual-service-ratings-db.yaml</span><br><span class="line">│   │   ├── virtual-service-ratings-mysql-vm.yaml</span><br><span class="line">│   │   ├── virtual-service-ratings-mysql.yaml</span><br><span class="line">│   │   ├── virtual-service-ratings-test-abort.yaml</span><br><span class="line">│   │   ├── virtual-service-ratings-test-delay.yaml</span><br><span class="line">│   │   ├── virtual-service-reviews-50-v3.yaml</span><br><span class="line">│   │   ├── virtual-service-reviews-80-20.yaml</span><br><span class="line">│   │   ├── virtual-service-reviews-90-10.yaml</span><br><span class="line">│   │   ├── virtual-service-reviews-jason-v2-v3.yaml</span><br><span class="line">│   │   ├── virtual-service-reviews-test-v2.yaml</span><br><span class="line">│   │   ├── virtual-service-reviews-v2-v3.yaml</span><br><span class="line">│   │   └── virtual-service-reviews-v3.yaml</span><br><span class="line">│   ├── platform</span><br><span class="line">│   │   ├── consul</span><br><span class="line">│   │   └── kube</span><br><span class="line">│   ├── policy</span><br><span class="line">│   │   ├── mixer-rule-deny-ip-crd.yaml</span><br><span class="line">│   │   ├── mixer-rule-deny-ip.yaml</span><br><span class="line">│   │   ├── mixer-rule-deny-label-crd.yaml</span><br><span class="line">│   │   ├── mixer-rule-deny-label.yaml</span><br><span class="line">│   │   ├── mixer-rule-deny-serviceaccount.yaml</span><br><span class="line">│   │   ├── mixer-rule-deny-whitelist-crd.yaml</span><br><span class="line">│   │   ├── mixer-rule-deny-whitelist.yaml</span><br><span class="line">│   │   ├── mixer-rule-ingress-denial.yaml</span><br><span class="line">│   │   ├── mixer-rule-kubernetesenv-telemetry.yaml</span><br><span class="line">│   │   ├── mixer-rule-productpage-ratelimit-crd.yaml</span><br><span class="line">│   │   ├── mixer-rule-productpage-ratelimit.yaml</span><br><span class="line">│   │   ├── mixer-rule-productpage-redis-quota-fixed-window.yaml</span><br><span class="line">│   │   ├── mixer-rule-productpage-redis-quota-rolling-window.yaml</span><br><span class="line">│   │   ├── mixer-rule-ratings-denial.yaml</span><br><span class="line">│   │   ├── mixer-rule-ratings-ratelimit.yaml</span><br><span class="line">│   │   ├── mixer-rule-ratings-redis-quota-fixed-window.yaml</span><br><span class="line">│   │   ├── mixer-rule-ratings-redis-quota-rolling-window.yaml</span><br><span class="line">│   │   ├── prometheus-adapter-deployment.yaml</span><br><span class="line">│   │   └── prometheus-oop-rule.yaml</span><br><span class="line">│   ├── README.md</span><br><span class="line">│   ├── src</span><br><span class="line">│   │   ├── details</span><br><span class="line">│   │   ├── mongodb</span><br><span class="line">│   │   ├── mysql</span><br><span class="line">│   │   ├── productpage</span><br><span class="line">│   │   ├── ratings</span><br><span class="line">│   │   └── reviews</span><br><span class="line">│   ├── swagger.yaml</span><br><span class="line">│   └── telemetry</span><br><span class="line">│       ├── fluentd-istio-crd.yaml</span><br><span class="line">│       ├── fluentd-istio.yaml</span><br><span class="line">│       ├── log-entry-crd.yaml</span><br><span class="line">│       ├── log-entry.yaml</span><br><span class="line">│       ├── metrics-crd.yaml</span><br><span class="line">│       ├── metrics.yaml</span><br><span class="line">│       ├── tcp-metrics-crd.yaml</span><br><span class="line">│       └── tcp-metrics.yaml</span><br><span class="line">├── certs</span><br><span class="line">│   ├── ca-cert.pem</span><br><span class="line">│   ├── ca-key.pem</span><br><span class="line">│   ├── cert-chain.pem</span><br><span class="line">│   ├── README.md</span><br><span class="line">│   └── root-cert.pem</span><br><span class="line">├── custom-bootstrap</span><br><span class="line">│   ├── custom-bootstrap.yaml</span><br><span class="line">│   ├── example-app.yaml</span><br><span class="line">│   └── README.md</span><br><span class="line">├── external</span><br><span class="line">│   ├── aptget.yaml</span><br><span class="line">│   ├── github.yaml</span><br><span class="line">│   ├── pypi.yaml</span><br><span class="line">│   └── README.md</span><br><span class="line">├── fortio</span><br><span class="line">│   └── stackdriver.yaml</span><br><span class="line">├── health-check</span><br><span class="line">│   ├── liveness-command.yaml</span><br><span class="line">│   ├── liveness-http-same-port.yaml</span><br><span class="line">│   └── liveness-http.yaml</span><br><span class="line">├── helloworld</span><br><span class="line">│   ├── helloworld-gateway.yaml</span><br><span class="line">│   ├── helloworld.yaml</span><br><span class="line">│   ├── README.md</span><br><span class="line">│   └── src</span><br><span class="line">│       └── requirements.txt</span><br><span class="line">├── httpbin</span><br><span class="line">│   ├── httpbin-gateway.yaml</span><br><span class="line">│   ├── httpbin-nodeport.yaml</span><br><span class="line">│   ├── httpbin-vault.yaml</span><br><span class="line">│   ├── httpbin.yaml</span><br><span class="line">│   ├── policy</span><br><span class="line">│   │   ├── keyval-template.yaml</span><br><span class="line">│   │   └── keyval.yaml</span><br><span class="line">│   ├── README.md</span><br><span class="line">│   └── sample-client</span><br><span class="line">│       └── fortio-deploy.yaml</span><br><span class="line">├── https</span><br><span class="line">│   ├── default.conf</span><br><span class="line">│   └── nginx-app.yaml</span><br><span class="line">├── kubernetes-blog</span><br><span class="line">│   ├── bookinfo-ratings.yaml</span><br><span class="line">│   ├── bookinfo-reviews-v2.yaml</span><br><span class="line">│   └── bookinfo-v1.yaml</span><br><span class="line">├── multicluster</span><br><span class="line">│   └── README.md</span><br><span class="line">├── operator</span><br><span class="line">│   ├── pilot-advanced-override.yaml</span><br><span class="line">│   ├── pilot-k8s.yaml</span><br><span class="line">│   ├── sds-policy-off.yaml</span><br><span class="line">│   ├── sds.yaml</span><br><span class="line">│   ├── trafficManagement-namespace.yaml</span><br><span class="line">│   ├── values-global.yaml</span><br><span class="line">│   └── values-pilot.yaml</span><br><span class="line">├── rawvm</span><br><span class="line">│   └── README.md</span><br><span class="line">├── README.md</span><br><span class="line">├── security</span><br><span class="line">│   └── psp</span><br><span class="line">│       ├── all-pods-psp.yaml</span><br><span class="line">│       └── citadel-agent-psp.yaml</span><br><span class="line">├── sleep</span><br><span class="line">│   ├── policy</span><br><span class="line">│   │   ├── sni-serviceaccount.yaml</span><br><span class="line">│   │   └── sni-wikipedia.yaml</span><br><span class="line">│   ├── README.md</span><br><span class="line">│   ├── sleep-vault.yaml</span><br><span class="line">│   ├── sleep.yaml</span><br><span class="line">│   └── telemetry</span><br><span class="line">│       └── sni-logging.yaml</span><br><span class="line">├── tcp-echo</span><br><span class="line">│   ├── README.md</span><br><span class="line">│   ├── src</span><br><span class="line">│   ├── tcp-echo-20-v2.yaml</span><br><span class="line">│   ├── tcp-echo-all-v1.yaml</span><br><span class="line">│   ├── tcp-echo-services.yaml</span><br><span class="line">│   └── tcp-echo.yaml</span><br><span class="line">└── websockets</span><br><span class="line">    ├── app.yaml</span><br><span class="line">    ├── README.md</span><br><span class="line">    └── route.yaml</span><br></pre></td></tr></table></figure><h2 id="部署bookinfo"><a href="#部署bookinfo" class="headerlink" title="部署bookinfo"></a>部署bookinfo</h2><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><ul><li>该应用程序由四个单独的微服务组成<ul><li>productpage：productpage微服务调用details和reviews微服务来填充页面。</li><li>details：details微服务包含图书的详细信息。</li><li>reviews：reviews微服务包含书评，它还调用ratings微服务。</li><li>ratings：ratings微服务包含书的排名信息。</li></ul></li><li>其中，reviews微服务提供了3个版本<ul><li>版本v1不调用ratings服务，因此没有五角星。</li><li>版本v2调用ratings服务，并将每个等级显示为1到5个黑星。</li><li>版本v3调用ratings服务，并将每个等级显示为1到5个红色星号。</li></ul></li><li>服务架构图如下</li></ul><p><img src="https://istio.io/docs/examples/bookinfo/noistio.svg" alt=""></p><ul><li>在部署了Istio之后，服务架构图会变成这样</li></ul><p><img src="https://istio.io/docs/examples/bookinfo/withistio.svg" alt=""></p><h3 id="部署到k8s"><a href="#部署到k8s" class="headerlink" title="部署到k8s"></a>部署到k8s</h3><ol><li>切换到<code>istio</code>的项目目录</li><li>给命名空间<code>default</code>打<code>label</code>开启<code>istio-inject</code>功能【<font color="red">不是必须的</font>】</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl label namespace default istio-injection=enabled</span><br></pre></td></tr></table></figure><ol start="3"><li>部署bookinfo</li></ol><blockquote><p>开启了自动inject功能可以直接部署</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span><br></pre></td></tr></table></figure><blockquote><p>没有在第2步开启自动inject功能，可以通过istioctl命令部署</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f &lt;(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)</span><br></pre></td></tr></table></figure><ol start="4"><li>确认<code>Pod</code>和<code>Service</code>状态</li></ol><p>查看Pod</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get pod</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-vqm55       2/2     Running   0          1m</span><br><span class="line">productpage-v1-c7765c886-g8hkm   2/2     Running   0          1m</span><br><span class="line">ratings-v1-f745cf57b-5fflk       2/2     Running   0          1m</span><br><span class="line">reviews-v1-75b979578c-dhdb8      2/2     Running   0          1m</span><br><span class="line">reviews-v2-597bf96c8f-r8tz9      2/2     Running   0          1m</span><br><span class="line">reviews-v3-54c6c64795-45f5v      2/2     Running   0          1m</span><br></pre></td></tr></table></figure><p>查看Service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get svc</span><br></pre></td></tr></table></figure><blockquote><p>示例代码</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.96.164.180   &lt;none&gt;        9080/TCP   1m</span><br><span class="line">kubernetes    ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP    3d18h</span><br><span class="line">productpage   ClusterIP   10.96.110.93    &lt;none&gt;        9080/TCP   1m</span><br><span class="line">ratings       ClusterIP   10.96.18.131    &lt;none&gt;        9080/TCP   1m</span><br><span class="line">reviews       ClusterIP   10.96.53.148    &lt;none&gt;        9080/TCP   1m</span><br></pre></td></tr></table></figure><p>5.为了确定bookinfo启动完成，使用curl命令访问bookinfo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default exec -it $(kubectl -n default get pod -l app=ratings -o jsonpath='&#123;.items[0].metadata.name&#125;') -c ratings -- curl productpage:9080/productpage</span><br></pre></td></tr></table></figure><blockquote><p>可以看到有网页内容，网页title为<code>Simple Bookstore App</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><br><span class="line">&lt;meta charset="utf-8"&gt;</span><br><span class="line">&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;</span><br><span class="line">&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span><br><span class="line">....................................................................</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>部署bookinfo-gateway</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Gateway</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">bookinfo-gateway</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    istio:</span> <span class="string">ingressgateway</span> <span class="comment"># use istio default controller</span></span><br><span class="line"><span class="attr">  servers:</span></span><br><span class="line"><span class="attr">  - port:</span></span><br><span class="line"><span class="attr">      number:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">    hosts:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"*"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">bookinfo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"*"</span></span><br><span class="line"><span class="attr">  gateways:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">bookinfo-gateway</span></span><br><span class="line"><span class="attr">  http:</span></span><br><span class="line"><span class="attr">  - match:</span></span><br><span class="line"><span class="attr">    - uri:</span></span><br><span class="line"><span class="attr">        exact:</span> <span class="string">/productpage</span></span><br><span class="line"><span class="attr">    - uri:</span></span><br><span class="line"><span class="attr">        prefix:</span> <span class="string">/static</span></span><br><span class="line"><span class="attr">    - uri:</span></span><br><span class="line"><span class="attr">        exact:</span> <span class="string">/login</span></span><br><span class="line"><span class="attr">    - uri:</span></span><br><span class="line"><span class="attr">        exact:</span> <span class="string">/logout</span></span><br><span class="line"><span class="attr">    - uri:</span></span><br><span class="line"><span class="attr">        prefix:</span> <span class="string">/api/v1/products</span></span><br><span class="line"><span class="attr">    route:</span></span><br><span class="line"><span class="attr">    - destination:</span></span><br><span class="line"><span class="attr">        host:</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">        port:</span></span><br><span class="line"><span class="attr">          number:</span> <span class="number">9080</span></span><br></pre></td></tr></table></figure><ol start="7"><li>检查gateway CRD</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n default get gateways.networking.istio.io</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME               AGE</span><br><span class="line">bookinfo-gateway   5s</span><br></pre></td></tr></table></figure><ol start="8"><li>部署DestinationRule</li></ol><ul><li>未开启<code>mutual TLS</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v3</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v3</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2-mysql</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2-mysql</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2-mysql-vm</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2-mysql-vm</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">details</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">details</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><ul><li>开启了<code>mutual TLS</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/bookinfo/networking/destination-rule-all-mtls.yaml</span><br></pre></td></tr></table></figure><blockquote><p>文件内容如下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">productpage</span></span><br><span class="line"><span class="attr">  trafficPolicy:</span></span><br><span class="line"><span class="attr">    tls:</span></span><br><span class="line"><span class="attr">      mode:</span> <span class="string">ISTIO_MUTUAL</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">reviews</span></span><br><span class="line"><span class="attr">  trafficPolicy:</span></span><br><span class="line"><span class="attr">    tls:</span></span><br><span class="line"><span class="attr">      mode:</span> <span class="string">ISTIO_MUTUAL</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v3</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v3</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">ratings</span></span><br><span class="line"><span class="attr">  trafficPolicy:</span></span><br><span class="line"><span class="attr">    tls:</span></span><br><span class="line"><span class="attr">      mode:</span> <span class="string">ISTIO_MUTUAL</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2-mysql</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2-mysql</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2-mysql-vm</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2-mysql-vm</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DestinationRule</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">details</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">details</span></span><br><span class="line"><span class="attr">  trafficPolicy:</span></span><br><span class="line"><span class="attr">    tls:</span></span><br><span class="line"><span class="attr">      mode:</span> <span class="string">ISTIO_MUTUAL</span></span><br><span class="line"><span class="attr">  subsets:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">v2</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v2</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="通过istio-gateway访问bookinfo"><a href="#通过istio-gateway访问bookinfo" class="headerlink" title="通过istio-gateway访问bookinfo"></a>通过istio-gateway访问bookinfo</h3><ol><li>声明环境变量</li></ol><blockquote><p>这里部署Istio时IngressGateway的Service类型为NodePort，所以直接用NodePort访问</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='&#123;.items[0].status.hostIP&#125;')</span><br><span class="line">export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="http2")].nodePort&#125;')</span><br><span class="line">export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="https")].nodePort&#125;')</span><br><span class="line">export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT</span><br></pre></td></tr></table></figure><ol start="2"><li>访问bookinfo</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s http://$&#123;GATEWAY_URL&#125;/productpage | grep -o "&lt;title&gt;.*&lt;/title&gt;"</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>通过浏览器访问<code>http://${GATEWAY_URL}/productpage</code></p><p>根据<code>destination-rule-all.yaml</code>的定义，可以通过反复刷新页面访问到<code>reviewers</code>的三个版本，分别是</p></li></ol><ul><li><code>reviewers-v1</code>：没五角星</li><li><code>reviewers-v2</code>：黑五角星</li><li><code>reviewers-v3</code>：红五角星</li></ul><h2 id="部署TCP-echo"><a href="#部署TCP-echo" class="headerlink" title="部署TCP-echo"></a>部署TCP-echo</h2><h3 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h3><ul><li>通过TCP连接访问<code>TCP-echo</code>访问获取echo数据</li></ul><h3 id="部署到k8s-1"><a href="#部署到k8s-1" class="headerlink" title="部署到k8s"></a>部署到k8s</h3><ol><li>切换到<code>istio</code>项目目录</li><li>部署YAML文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f samples/tcp-echo/tcp-echo.yaml</span><br></pre></td></tr></table></figure><ol start="3"><li>创建Pod</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl run -i --rm --restart=Never busybox --image=busybox:1.28 -- /bin/sh</span><br></pre></td></tr></table></figure><ol start="4"><li>测试<code>TCP-echo</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo abcdefg | nc tcp-echo 9000</span><br></pre></td></tr></table></figure><blockquote><p>输出示例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello abcdefg</span><br></pre></td></tr></table></figure><ol start="5"><li>清理现场</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f samples/tcp-echo/tcp-echo.yaml</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;istio版本号&lt;code&gt;1.4.2&lt;/code&gt;&lt;/li&gt;&lt;li&gt;k8s集群版本&lt;code&gt;v1.14.8&lt;/code&gt;&lt;/l
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Kubernetes/"/>
    
      <category term="Istio" scheme="https://luanlengli.github.io/categories/Kubernetes/Istio/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
      <category term="Istio" scheme="https://luanlengli.github.io/tags/Istio/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Azure中国提供的容器镜像代理服务【2020年4月3日开始仅限于Azure中国IP使用，不再对外提供服务】</title>
    <link href="https://luanlengli.github.io/2019/12/16/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Azure%E4%B8%AD%E5%9B%BD%E6%8F%90%E4%BE%9B%E7%9A%84Docker%E9%95%9C%E5%83%8F%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1.html"/>
    <id>https://luanlengli.github.io/2019/12/16/如何使用Azure中国提供的Docker镜像代理服务.html</id>
    <published>2019-12-16T06:12:59.000Z</published>
    <updated>2020-04-07T02:37:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="提醒！"><a href="#提醒！" class="headerlink" title="提醒！"></a><font color="red">提醒！</font></h1><ul><li><p>Azure的<code>*.azk8s.cn</code>镜像源在2020年4月3日凌晨开始，只允许【Azure中国IP】访问，其他公网IP访问azk8s.cn都会返回403!</p></li><li><p>项目原文如下</p><p>ACR does not provide <strong>public anonymous access</strong> functionality on Azure China, this feature is in <a href="https://github.com/Azure/acr/blob/master/docs/acr-roadmap.md" target="_blank" rel="noopener">public preview</a> on global Azure.</p></li><li><p>相关issue，<a href="https://github.com/Azure/container-service-for-azure-china/issues/60" target="_blank" rel="noopener">issue#60</a></p></li></ul><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>由于Dockerhub、k8s.gcr.io、Quay.io这些常用的容器镜像源都在国外，在国内访问经常不稳定，特别是托管在Google的k8s.gcr.io，对新手安装Kubernetes非常不方便</li><li>Azure中国提供了容器镜像代理服务，速度也算比较文档，这里记录一下配置过程</li><li>项目说明：<a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md" target="_blank" rel="noopener">container-service-for-azure-china</a></li></ul><h1 id="配置镜像源"><a href="#配置镜像源" class="headerlink" title="配置镜像源"></a>配置镜像源</h1><h2 id="DockerHub"><a href="#DockerHub" class="headerlink" title="DockerHub"></a>DockerHub</h2><p>以前Docker公司在国内是有专门的镜像服务器的，后来不知道咋的就没了。</p><p>这里使用Azure中国的镜像代理</p><table><thead><tr><th>原镜像地址</th><th>替换为Azure中国的地址</th></tr></thead><tbody><tr><td><code>alpine:3.10</code></td><td><code>dockerhub.azk8s.cn/library/alpine:3.10</code></td></tr><tr><td><code>jenkins/jenkins:2.190.1</code></td><td><code>dockerhub.azk8s.cn/jenkins/jenkins:2.190.1</code></td></tr></tbody></table><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>编辑<code>/etec/docker/daemon.json</code>在<code>registry-mirrors</code>配置中添加<code>https://dockerhub.azk8s.cn</code>。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    "registry-mirrors": ["https://dockerhub.azk8s.cn"],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>在<code>FROM</code>镜像的时候，直接使用Azure中国的源。</p><blockquote><p>需要注意的是，Docker代码在split的时候，如果只有<code>xxxx:tag</code>会拉取<code>/library/xxxx:tag</code>。</p><p>使用Azure中国的代理服务器，在处理这样的镜像时，需要自己手动添加一下<code>/library</code>，否则会找不到镜像。</p><p><a href="https://github.com/Azure/container-service-for-azure-china/issues/54" target="_blank" rel="noopener">相关issue</a></p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> dockerhub.azk8s.cn/library/alpine:<span class="number">3.10</span></span><br></pre></td></tr></table></figure><h2 id="gcr-io"><a href="#gcr-io" class="headerlink" title="gcr.io"></a>gcr.io</h2><p>国内用gcr.io比较少，通常都是用来下载Kubernetes的容器镜像。</p><p>可以通过替换镜像地址的方式来进行下载。</p><p>k8s.gcr.io会被重定向到gcr.io/google_containers。</p><table><thead><tr><th>原镜像地址</th><th>替换为Azure中国的地址</th></tr></thead><tbody><tr><td><code>k8s.gcr.io/pause:3.1</code></td><td><code>gcr.azk8s.cn/google_containers/pause:3.1</code></td></tr><tr><td><code>gcr.io/abc/image:1111</code></td><td><code>gcr.azk8s.cn/abc/image:1111</code></td></tr></tbody></table><h2 id="Quay-io"><a href="#Quay-io" class="headerlink" title="Quay.io"></a>Quay.io</h2><p>这里Quay也可以通过替换镜像的方式来下载</p><table><thead><tr><th>原镜像地址</th><th>替换为Azure中国的地址</th></tr></thead><tbody><tr><td><code>quay.io/coreos/flannel:v0.11.0-amd64</code></td><td><code>quay.azk8s.cn/coreos/flannel:v0.11.0-amd64</code></td></tr></tbody></table><h1 id="Azure中国原版项目说明"><a href="#Azure中国原版项目说明" class="headerlink" title="Azure中国原版项目说明"></a>Azure中国原版项目说明</h1><h2 id="Container-Registry-Proxy"><a href="#Container-Registry-Proxy" class="headerlink" title="Container Registry Proxy"></a>Container Registry Proxy</h2><p>Since some well known container registries like <code>docker.io</code>, <code>gcr.io</code> are not accessible or very slow in China, we have set up container registry proxies on Azure China for <strong>public anonymous access</strong>:</p><blockquote><p>The first docker pull of new image will be still slow, and then image would be cached, would be much faster in the next docker pull action.</p></blockquote><table><thead><tr><th>global</th><th>proxy in China</th><th>format</th><th>example</th></tr></thead><tbody><tr><td><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/hub.docker.com" target="_blank" rel="noopener">dockerhub</a> (docker.io)</td><td><a href="http://mirror.azk8s.cn/help/docker-registry-proxy-cache.html" target="_blank" rel="noopener">dockerhub.azk8s.cn</a></td><td><code>dockerhub.azk8s.cn//:</code></td><td><code>dockerhub.azk8s.cn/microsoft/azure-cli:2.0.61</code> <code>dockerhub.azk8s.cn/library/nginx:1.15</code></td></tr><tr><td>gcr.io</td><td><a href="http://mirror.azk8s.cn/help/gcr-proxy-cache.html" target="_blank" rel="noopener">gcr.azk8s.cn</a></td><td><code>gcr.azk8s.cn//:</code></td><td><code>gcr.azk8s.cn/google_containers/hyperkube-amd64:v1.13.5</code></td></tr><tr><td>quay.io</td><td><a href="http://mirror.azk8s.cn/help/quay-proxy-cache.html" target="_blank" rel="noopener">quay.azk8s.cn</a></td><td><code>quay.azk8s.cn//:</code></td><td><code>quay.azk8s.cn/deis/go-dev:v1.10.0</code></td></tr></tbody></table><blockquote><p>Note: <code>k8s.gcr.io</code> would redirect to <code>gcr.io/google-containers</code>, following image urls are identical:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">k8s.gcr.io/pause-amd64:3.1</span><br><span class="line">gcr.io/google_containers/pause-amd64:3.1</span><br></pre></td></tr></table></figure><ul><li><p>Container Registry Proxy Example</p><p>specify <code>defaultBackend.image.repository</code> as <code>gcr.azk8s.cn/google_containers/defaultbackend</code> in <a href="https://github.com/helm/charts/tree/master/stable/nginx-ingress" target="_blank" rel="noopener">nginx-ingress</a> chart since original <code>k8s.gcr.io</code> does not work in Azure China:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install stable/nginx-ingress --set defaultBackend.image.repository=gcr.azk8s.cn/google_containers/defaultbackend --set defaultBackend.image.tag=1.4</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;提醒！&quot;&gt;&lt;a href=&quot;#提醒！&quot; class=&quot;headerlink&quot; title=&quot;提醒！&quot;&gt;&lt;/a&gt;&lt;font color=&quot;red&quot;&gt;提醒！&lt;/font&gt;&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Azure的&lt;code&gt;*.azk8s.cn&lt;/code&gt;镜像源在
      
    
    </summary>
    
      <category term="Docker" scheme="https://luanlengli.github.io/categories/Docker/"/>
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/categories/Docker/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="https://luanlengli.github.io/tags/Kubernetes/"/>
    
      <category term="Docker" scheme="https://luanlengli.github.io/tags/Docker/"/>
    
  </entry>
  
</feed>
